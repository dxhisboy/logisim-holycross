[
  {
    "id": 1,
    "title": "Refer\u00eancias do Logisim",
    "url": "/pt/html/guide/index.html",
    "text": "Guia para se tornar usu\u00e1rio do Logisim\nGuia para se tornar usu\u00e1rio do Logisim\nLogisim \u00e9 uma ferramenta educacional para a concep\u00e7\u00e3o e a simula\u00e7\u00e3o digital\nde circuitos l\u00f3gicos. Com uma interface simples e com ferramentas para simular\ncircuitos a medida em que s\u00e3o constru\u00eddos, \u00e9 simples o bastante para facilitar\na aprendizagem dos conceitos mais b\u00e1sicos relacionados aos circuitos l\u00f3gicos.\nCom a capacidade de construir circuitos maiores a partir de subcircuitos menores,\ntra\u00e7ar conex\u00f5es com um mero arrastar do mouse, o Logisim pode ser usado\n(e \u00e9 usado) para projetar e simular CPUs completas para fins educacionais.\nEstudantes em faculdades e universidades de todo o mundo utilizam\nLogisim para uma variedade de prop\u00f3sitos, incluindo:\nUm m\u00f3dulo\npara o ensino de ci\u00eancia da computa\u00e7\u00e3o em geral\nUma unidade\npara n\u00edveis intermedi\u00e1rios em cursos de organiza\u00e7\u00e3o de computadores\nMais do que um semestre inteiro em\ncursos mais avan\u00e7ados de arquiteturas de computadores.\nO Guia para tornar um usu\u00e1rio do Logisim , que voc\u00ea est\u00e1 lendo\nagora, \u00e9 a refer\u00eancia oficial para os recursos do Logisim. A primeira parte\n\u00e9 uma sequ\u00eancia de se\u00e7\u00f5es que estabelece as principais partes de Logisim. Essas\nse\u00e7\u00f5es s\u00e3o escritas para que possam ser lidas \"de cabo a rabo\"\npara se tomar conhecimento de todas as caracter\u00edsticas mais importantes do Logisim.\nTutorial para o iniciante\nBibliotecas e atributos\nSubcircuitos\nConex\u00f5es\nAn\u00e1lise combinacional\nAs demais se\u00e7\u00f5es formam um grupo heterog\u00eaneo de materiais de refer\u00eancia\ne explica\u00e7\u00f5es sobre aspectos menores do Logisim.\nMenu de refer\u00eancia\nComponentes de mem\u00f3ria\nRegistro\nVerifica\u00e7\u00e3o por linha de comando\nPrefer\u00eancias da aplica\u00e7\u00e3o\nOp\u00e7\u00f5es de projeto\nPropaga\u00e7\u00e3o de valor\nBibliotecas JAR\nSobre o programa"
  },
  {
    "id": 2,
    "title": "Guia para se tornar usu\u00e1rio do Logisim",
    "url": "/pt/html/guide/index.html",
    "text": "Guia para se tornar usu\u00e1rio do Logisim\nGuia para se tornar usu\u00e1rio do Logisim\nLogisim \u00e9 uma ferramenta educacional para a concep\u00e7\u00e3o e a simula\u00e7\u00e3o digital\nde circuitos l\u00f3gicos. Com uma interface simples e com ferramentas para simular\ncircuitos a medida em que s\u00e3o constru\u00eddos, \u00e9 simples o bastante para facilitar\na aprendizagem dos conceitos mais b\u00e1sicos relacionados aos circuitos l\u00f3gicos.\nCom a capacidade de construir circuitos maiores a partir de subcircuitos menores,\ntra\u00e7ar conex\u00f5es com um mero arrastar do mouse, o Logisim pode ser usado\n(e \u00e9 usado) para projetar e simular CPUs completas para fins educacionais.\nEstudantes em faculdades e universidades de todo o mundo utilizam\nLogisim para uma variedade de prop\u00f3sitos, incluindo:\nUm m\u00f3dulo\npara o ensino de ci\u00eancia da computa\u00e7\u00e3o em geral\nUma unidade\npara n\u00edveis intermedi\u00e1rios em cursos de organiza\u00e7\u00e3o de computadores\nMais do que um semestre inteiro em\ncursos mais avan\u00e7ados de arquiteturas de computadores.\nO Guia para tornar um usu\u00e1rio do Logisim , que voc\u00ea est\u00e1 lendo\nagora, \u00e9 a refer\u00eancia oficial para os recursos do Logisim. A primeira parte\n\u00e9 uma sequ\u00eancia de se\u00e7\u00f5es que estabelece as principais partes de Logisim. Essas\nse\u00e7\u00f5es s\u00e3o escritas para que possam ser lidas \"de cabo a rabo\"\npara se tomar conhecimento de todas as caracter\u00edsticas mais importantes do Logisim.\nTutorial para o iniciante\nBibliotecas e atributos\nSubcircuitos\nConex\u00f5es\nAn\u00e1lise combinacional\nAs demais se\u00e7\u00f5es formam um grupo heterog\u00eaneo de materiais de refer\u00eancia\ne explica\u00e7\u00f5es sobre aspectos menores do Logisim.\nMenu de refer\u00eancia\nComponentes de mem\u00f3ria\nRegistro\nVerifica\u00e7\u00e3o por linha de comando\nPrefer\u00eancias da aplica\u00e7\u00e3o\nOp\u00e7\u00f5es de projeto\nPropaga\u00e7\u00e3o de valor\nBibliotecas JAR\nSobre o programa"
  },
  {
    "id": 3,
    "title": "Tutorial para o iniciante",
    "url": "/pt/html/guide/tutorial/index.html",
    "text": "Tutorial para o principiante\nTutorial para o principiante\nBem-vindo ao Logisim!\nLogisim permite projetar e simular circuitos digitais. Foi planejado\ncomo ferramenta educacional para ajudar voc\u00ea a aprender como os circuitos\nfuncionam.\nPara praticar o uso Logisim, vamos construir um circuito XOR -\nou seja, um circuito que tem duas entradas (que chamaremos\nx\ne\ny ) e fornecer\u00e1 a sa\u00edda igual a 0 se as entradas\nforem iguais e 1 se forem diferentes.\nA tabela a seguir ilustra a tabela-verdade.\nPoder\u00edamos projetar tal circuito em papel.\nMas s\u00f3 porque ele est\u00e1 no papel n\u00e3o significa que ele est\u00e1 certo.\nPara verificar o nosso trabalho, n\u00f3s iremos desenh\u00e1-lo no Logisim e test\u00e1-lo.\nComo um b\u00f4nus adicional, n\u00f3s obteremos um circuito que se parecer\u00e1 melhor\ndo que aquele que voc\u00ea provavelmente faria \u00e0 m\u00e3o.\nPasso 0: Orientar-se\nPasso 1: Acrescentar portas\nPasso 2: Acrescentar conex\u00f5es\nPasso 3: Acrescentar texto\nPasso 4: Testar seu circuito\nAproveite o seu contrutor de circuitos."
  },
  {
    "id": 4,
    "title": "Passo 0: Para orientar-se",
    "url": "/pt/html/guide/tutorial/tutor-orient.html",
    "text": "Tutorial: Orientar-se\nPasso 0: Orientar-se\nQuando voc\u00ea iniciar o Logisim, voc\u00ea ver\u00e1 uma janela semelhante \u00e0 seguinte.\nAlguns dos detalhes poder\u00e3o ser ligeiramente diferentes, pois voc\u00ea estar\u00e1\nprovavelmente usando um sistema diferente do meu.\nO Logisim \u00e9 dividido em tr\u00eas partes, chamada de\npainel do explorador,\ntabela de atributos, e\n\u00e1rea de desenho (ou tela). Acima dessas\nestar\u00e3o\na barra de menu\ne\na barra de ferramentas.\nPoderemos eliminar rapidamente o painel do explorador e a tabela de atributo.\nN\u00e3o estaremos tratando delas neste tutorial, e voc\u00ea poder\u00e1 simplesmente ignor\u00e1-las.\nAl\u00e9m disso, a barra de menu \u00e9 auto-explicativa.\nIsso nos deixar\u00e1 com a barra de ferramentas e a \u00e1rea de desenho (ou tela).\nEsta \u00faltima \u00e9 onde voc\u00ea ir\u00e1 desenhar o circuito, e a barra de ferramentas cont\u00e9m\nos itens que voc\u00ea poder\u00e1 usar para fazer isso."
  },
  {
    "id": 5,
    "title": "Passo 1: Para acrescentar portas",
    "url": "/pt/html/guide/tutorial/tutor-gates.html",
    "text": "Tutorial: Acrescentar portas\nPasso 1: Acrescentar portas\nLembre-se que estamos tentando construir o circuito a seguir em Logisim.\nSugiro a constru\u00e7\u00e3o de um circuito, inserindo as portas primeiro para formar\numa esp\u00e9cie de esqueleto e, em seguida, conect\u00e1-los com os fios. A primeira coisa\nque vamos fazer \u00e9 adicionar as duas portas AND. Clicar na porta AND na barra\nde ferramentas (, a pen\u00faltima listada).\nEm seguida, clicar na \u00e1rea de edi\u00e7\u00e3o onde voc\u00ea desejar que a primeira porta AND\ndeva ficar. Certifique-se de deixar espa\u00e7o suficiente para outras coisas do lado\nesquerdo. Em seguida, clicar na porta AND novamente e colocar a segunda mais abaixo.\nObservar que haver\u00e1 cinco pontos do lado esquerdo da porta AND. Esses ser\u00e3o\nos pontos onde os fios poder\u00e3o ser conectados. Acontece que n\u00f3s iremos usar apenas\ndois deles para o nosso circuito XOR, mas para outros circuitos, voc\u00ea poder\u00e1 achar\nmais \u00fatil ter mais de duas conex\u00f5es em uma porta AND.\nAgora adicionaremos as outras portas. Primeiro clicar sobre a porta OR\n(); em seguida, clicar onde voc\u00ea quiser coloc\u00e1-la.\nE colocar tamb\u00e9m duas portas NOT buscando-as em\n().\nDeixei um pouco de espa\u00e7o entre as portas NOT e as portas AND, se voc\u00ea\nquisero, por\u00e9m, poder\u00e1 coloc\u00e1-las umas junto \u00e0s outrss e poupar\no esfor\u00e7o de conect\u00e1-las por um fio mais tarde.\nAgora queremos adicionar as duas entradas\nx\ne\ny\nno diagrama. Selecione uma entrada\n(),\ne coloque os pinos voltados para baixo.\nVoc\u00ea tamb\u00e9m dever\u00e1 colocar uma sa\u00edda junto \u00e0 porta OR, usando\n().\n(Novamente, estou deixando um pouco de espa\u00e7o entre a porta OR e a sa\u00edda,\nmas voc\u00ea poder\u00e1 optar por coloc\u00e1-las uma ao lado da outra.)\nSe voc\u00ea achar que n\u00e3o gosta de onde colocou alguma coisa, poder\u00e1\nselecion\u00e1-la usando a ferramenta Editar\n()\ne arrast\u00e1-la para o local desejado. Ou ainda poder\u00e1 exclu\u00ed-la totalmente,\nselecionando Excluir no menu Editar ou pressionar a tecla Delete.\nQuando voc\u00ea colocar cada componente do circuito, voc\u00ea ver\u00e1 que, logo que\nele for colocado, o Logisim reverte para a ferramenta Editar para que possa\nmover o componente rec\u00e9m-colocado ou (como veremos em breve) conectar o componente\na outros, usando fios. Se quiser acrescentar uma c\u00f3pia do rec\u00e9m-colocado\ncomponente, um atalho \u00e9 pressionar Control-D para duplicar a sele\u00e7\u00e3o.\n(Alguns computadores usam outra teclas para menus, tais como a tecla de comando no\nMacintosh. Voc\u00ea ir\u00e1 pressionar essa tecla junto com a tecla D)."
  },
  {
    "id": 6,
    "title": "Passo 2: Para acrescentar conex\u00f5es",
    "url": "/pt/html/guide/tutorial/tutor-wires.html",
    "text": "Tutorial: Acrescentar conex\u00f5es\nPasso 2: Acrescentar conex\u00f5es\nDepois de ter todos os componentes colocados na \u00e1rea de desenho (tela),\nvoc\u00ea estar\u00e1 pronto para come\u00e7ar a adicionar as conex\u00f5es.\nSelecionar a ferramenta Editar\n().\nQuando o cursor estiver sobre um ponto que receber\u00e1 uma extremidade do fio,\num pequeno c\u00edrculo verde ser\u00e1 desenhado em torno dele. Pressione o bot\u00e3o do mouse e\narraste at\u00e9 onde voc\u00ea quiser que a outra extremidade do fio v\u00e1.\nO Logisim \u00e9 bem inteligente ao adicionar conx\u00f5es: sempre que um fio terminar em\noutro, o Logisim automaticamente ir\u00e1 conect\u00e1-los. Voc\u00ea tamb\u00e9m poder\u00e1 \"estender\" ou\n\"encurtar\" uma conex\u00e3o arrastando uma de suas extremidades do fio usando a ferramenta\nde edi\u00e7\u00e3o.\nAs conex\u00f5es (fios) em Logisim dever\u00e3o ser horizontais ou verticais.\nPara conectar entrada superior \u00e0 porta NOT e \u00e0 porta AND, em seguida, acrescentei\ntr\u00eas fios.\nO Logisim automaticamente conectar\u00e1 os fios \u00e0s portas\ne uns aos outros. Isso inclui automaticamente o desenho do c\u00edrculo sobre o\nT\nda intersec\u00e7\u00e3o acima, indicando que os fios est\u00e3o ligados.\nAo tra\u00e7ar as conex\u00f5es, voc\u00ea poder\u00e1 ver alguns fios azuis ou cinzas. O azul no\nLogisim indicar\u00e1 que o valor naquele ponto \u00e9 \"desconhecido\", e cinza\nindica que o fio n\u00e3o estar\u00e1 conectado a nada. Isso n\u00e3 importa muito j\u00e1 que\nvoc\u00ea estar\u00e1 em processo de constru\u00e7\u00e3o de um circuito. Mas quando voc\u00ea terminar,\nnenhum de seus fios dever\u00e1 ser azul ou cinza. (Os pontos desconectados da porta OR\nainda estar\u00e3o azuis: isso \u00e9 bom.)\nSe voc\u00ea tiver um fio azul ou cinza depois que voc\u00ea achar que tudo\nj\u00e1 tiver sido conectado, ent\u00e3o h\u00e1 algo de errado. \u00c9 importante\nque voc\u00ea conecte os fios nos lugares certos. O Logisim apresenta pontinhos\nsobre os componentes para indicar onde os fios dever\u00e3o se conectar. A medida em que\nprosseguir, voc\u00ea ver\u00e1 que os pontos mudar\u00e3o de azul para verde-claro ou escuro.\nDepois que tiver todos os fios conectados, todas as conex\u00f5es que tenham sido\ninseridas dever\u00e3o estar em verde-claro ou escuro."
  },
  {
    "id": 7,
    "title": "Passo 3: Para acrescentar texto",
    "url": "/pt/html/guide/tutorial/tutor-text.html",
    "text": "Tutorial: Acrescentar texto\nPasso 3: Acrescentar texto\nAcrescentar texto ao circuito n\u00e3o ser\u00e1 necess\u00e1rio para faz\u00ea-lo funcionar;\nmas se voc\u00ea quiser mostrar o seu circuito para algu\u00e9m (como a um professor),\nent\u00e3o, alguns r\u00f3tulos ajudar\u00e3o a comunicar os prop\u00f3sitos de diferentes partes\ndo seu circuito.\nSelecionar a ferramenta de texto\n().\nVoc\u00ea poder\u00e1 clicar em um pino de entrada e come\u00e7ar a escrever para dar-lhe\num r\u00f3tulo. (\u00c9 melhor clicar diretamente no pino de entrada do que\nclicar onde voc\u00ea quiser colocar o texto, porque o r\u00f3tulo ir\u00e1 mover-se\njunto com o pino).\nVoc\u00ea poder\u00e1 fazer o mesmo para o pino de sa\u00edda. Ou voc\u00ea poder\u00e1 simplesmente\nclicar em qualquer outro lugar e come\u00e7ar a escrever para colocar um r\u00f3tulo ali."
  },
  {
    "id": 8,
    "title": "Passo 4: Para testar seu circuito",
    "url": "/pt/html/guide/tutorial/tutor-test.html",
    "text": "Tutorial: Testar seu circuito\nPasso 4: Testar seu circuito\nNosso passo final ser\u00e1 testar o circuito para garantir que ele realmente\nrealiza o que pretendemos. O Logisim j\u00e1 est\u00e1 simulando o circuito. Vamos dar uma olhada\nnovamente aonde est\u00e1vamos.\nObservar que os pinos de entrada cont\u00eam zeros, e assim tamb\u00e9m o pino de sa\u00edda.\nIsso j\u00e1 nos diz que o circuito j\u00e1 calcula um 0 quando ambas as entradas s\u00e3o iguais a 0.\nAgora tentaremos outra combina\u00e7\u00e3o das entrada. Selecione a ferramenta Testar (Poke)\n() e come\u00e7aremos a alterar as entradas,\nclicando sobre elas. Cada vez que fizer isso sobre a entrada, seu valor ser\u00e1\nalternado. Por exemplo, poder\u00edamos fazer isso.\nQuando voc\u00ea mudar o valor de entrada, o Logisim ir\u00e1 mostrar-lhe que os valores\nseguir\u00e3o pelos fios marcando-os com a cor verde-claro para indicar um valor 1\nou verde-escuro (quase preto) para indicar um valor 0. Voc\u00ea tamb\u00e9m poder\u00e1 ver\nque o valor de sa\u00edda foi alterado para 1.\nAt\u00e9 agora, n\u00f3s testamos as duas primeiras linhas da nossa tabela-verdade, e as\nsa\u00eddas (0 e 1) corresponder\u00e3o aos resultados desejados.\nAo testar combina\u00e7\u00f5es diferentes, poderemos verificar as outras duas linhas.\nSe todos elas corresponderem, ent\u00e3o terminamos: o circuito funciona!\nPara arquivar o seu trabalho conclu\u00eddo, talvez voc\u00ea queira salvar ou imprimir\nseu circuito. O menu Arquivo permitir\u00e1 isso, e \u00e9 claro que tamb\u00e9m lhe permitir\u00e1\nsair do Logisim. Mas por que parar agora?\nAgora que voc\u00ea est\u00e1 terminando o tutorial, poder\u00e1 experimentar o Logisim\nconstruindo seus pr\u00f3prios circuitos. Se voc\u00ea quiser construir circuitos com recursos\nmais sofisticados, ent\u00e3o voc\u00ea dever\u00e1 navegar atrav\u00e9s das outras op\u00e7\u00f5es\ndo sistema de ajuda para ver o que mais voc\u00ea poder\u00e1 fazer. Logisim \u00e9\num programa poderoso, que lhe permitir\u00e1 construir e testar circuitos maiores;\nesse procedimento passo-a-passo apenas fez arranh\u00f5es na superf\u00edcie."
  },
  {
    "id": 9,
    "title": "Bibliotecas e atributos",
    "url": "/pt/html/guide/attrlib/index.html",
    "text": "Bibliotecas e atributos\nBibliotecas e atributos\nNesta se\u00e7\u00e3o, examinaremos como usar duas outras grandes regi\u00f5es da janela\ndo Logisim, o Painel do Explorador e a Tabela de Atributos.\nO Painel Explorador\nA Tabela de Atributos\nAtributos de ferramentas e componentes"
  },
  {
    "id": 10,
    "title": "O painel explorador",
    "url": "/pt/html/guide/attrlib/explore.html",
    "text": "O painel Explorador (Explorer)\nO painel Explorador (Explorer)\nO Logisim organiza ferramentas em bibliotecas. Elas s\u00e3o\nexibidas como pastas no painel Explorador. Para acessar os componentes de uma\nbiblioteca, voc\u00ea s\u00f3 ter\u00e1 que dar um duplo clique na pasta correspondente. Abaixo,\na biblioteca Portas (Gates) foi aberta e selecionada a ferramenta NAND. Voc\u00ea\npoder\u00e1 ver que o Logisim agora estar\u00e1 pronto para adicionar portas NAND ao\ncircuito.\n(Figura do original em ingl\u00eas)\nSe voc\u00ea consultar as op\u00e7\u00f5es na biblioteca Gates, voc\u00ea notar\u00e1 que\nn\u00e3o h\u00e1 necessidade em desenvolver um circuito XOR: ele j\u00e1 existe no Logisim.\nQuando voc\u00ea criar um projeto, ele automaticamente incluir\u00e1 v\u00e1rias bibliotecas:\nConex\u00e3o (Wiring): Componentes que interagem diretamente com os fios.\nPortas (Gates): Componentes que executam fun\u00e7\u00f5es l\u00f3gicas simples.\nPlexers: Combina\u00e7\u00f5es mais complexas de componentes, como\nmultiplexadores e decodificadores.\nAritm\u00e9tica: componentes que executam opera\u00e7\u00f5es aritm\u00e9ticas.\nMem\u00f3ria: Componentes que guardam dados, como flip-flops, registradores e\nRAM.\nEntrada/Sa\u00edda: Componentes que t\u00eam a finalidade de interagir com o usu\u00e1rio.\nBase: As ferramentas que s\u00e3o essenciais para se usar o Logisim\nembora seja muito prov\u00e1vel que voc\u00ea n\u00e3o ir\u00e1 trabalhar com ela frequentemente.\nO Logisim permite adicionar mais bibliotecas, usando o submenu\nCarregar Biblioteca (Load Library) do menu Projeto. Voc\u00ea poder\u00e1 ver que o\nLogisim tem tr\u00eas categorias de bibliotecas:\nBibliotecas predefinidas\ns\u00e3o aquelas distribu\u00eddas\ncom Logisim. Elas est\u00e3o documentadas em\nRefer\u00eancias para Bibliotecas.\nBibliotecas do Logisim\ns\u00e3o projetos constru\u00eddos\ndentro Logisim e salvos em disco. Voc\u00ea poder\u00e1 desenvolver um\nconjunto de circuitos como um \u00fanico projeto (como descrito em\nsubcircuitos\ndeste guia)\ne us\u00e1-lo como uma biblioteca para outros projetos.\nBibliotecas JAR\ns\u00e3o bibliotecas desenvolvidas\nem Java, mas n\u00e3o distribu\u00eddas com o Logisim. Voc\u00ea poder\u00e1 baixar as\nbibliotecas JAR feitas por outros, ou poder\u00e1 at\u00e9 mesmo escrever a sua\npr\u00f3pria como descrito na se\u00e7\u00e3o\nBibliotecas JAR\ndeste guia. Desenvolver uma biblioteca JAR \u00e9 muito mais dif\u00edcil do que\ndesenvolvimento de uma biblioteca Logisim, mas os componentes poder\u00e3o ser\nmuito interessantes, incluir coisas como atributos e intera\u00e7\u00e3o com o usu\u00e1rio.\nAs bibliotecas predefinidas (exceto Base) foram escritas usando a mesma\nAPI que as bibliotecas JAR podem usar, e demonstram apropriadamente\na gama de funcionalidades que as bibliotecas JAR poder\u00e3o oferecer.\nAlgumas bibliotecas JAR s\u00e3o distribu\u00eddas sem qualquer informa\u00e7\u00e3o sobre\nqual a classe Java dever\u00e3o iniciar. Ao carregar tal tipo, o Logisim\nsolicitar\u00e1 que voc\u00ea digite um nome da classe. Esse nome de classe dever\u00e1\nser previsto por quem distribuir o arquivo JAR.\nPara remover uma biblioteca, escolha Descarregar Biblioteca ... no menu\nProjeto. O Logisim ir\u00e1 impedi-lo de descarregar bibliotecas que contenham\ncomponentes utilizados em um circuito, que apare\u00e7am na barra de ferramentas,\nou que estejam mapeados para um bot\u00e3o do mouse.\nAli\u00e1s, uma biblioteca tecnicamente cont\u00e9m ferramentas, n\u00e3o componentes.\nAssim, na biblioteca Base poder\u00e3o ser encontrados a ferramenta Testar (Poke)\n(), a ferramenta Editar\n(), e outras ferramentas\nque n\u00e3o correspondam diretamente a componentes individuais. A maioria das\nbibliotecas, no entanto, cont\u00e9m apenas ferramentas para adicionar componentes\nindividuais, todas as outras bibliotecas s\u00e3o assim, exceto a Base."
  },
  {
    "id": 11,
    "title": "A tabela de atributos",
    "url": "/pt/html/guide/attrlib/attr.html",
    "text": "A tabela de atributos\nA tabela de atributos\nMuitos componentes t\u00eam atributos, que s\u00e3o\npropriedades para configurar como ele se comportar\u00e1 ou aparecer\u00e1.\nA\ntabela de atributos\nserve para exibir valores\ndos atributos do componentes.\nPara selecionar quais atributos do componente deseja visualizar,\nclique no componente usando a ferramenta Editar\n().\n(Voc\u00ea tamb\u00e9m poder\u00e1 clicar com o bot\u00e3o direito (ou control-click) no componente\ne escolher Mostrar Atributos (Show Attributes) no menu pop-up. Al\u00e9m disso,\npoder\u00e1 manipular um componente atrav\u00e9s da ferramenta Testar (Poke)\n() ou da ferramenta Texto\n() que ir\u00e1 mostrar os\natributos do componente.)\nA tela abaixo demonstra o que as coisas ir\u00e1 aparecer depois que\nselecionar a entrada superior do circuito XOR e rolar para baixo at\u00e9 ver o atributo\nFonte do R\u00f3tulo (Label Font).\n(Figura do original em ingl\u00eas)\nPara modificar um valor de atributo, clique sobre o valor. A interface\npara modificar o atributo vai depender de qual atributo quiser mudar,\nno caso de ser a Fonte do R\u00f3tulo do atributo, uma caixa de di\u00e1logo aparecer\u00e1\npara selecionar a nova fonte; mas alguns atributos (como R\u00f3tulo/Label) permitir\u00e3o\nque voc\u00ea edite o valor em um campo de texto, enquanto outros (como a\nDire\u00e7\u00e3o do R\u00f3tulo) ser\u00e3o exibidos em um menu drop-down a partir do qual\npoder\u00e1 escolher o valor.\nCada tipo de componente tem um conjunto diferente de atributos.\nPara saber o que significam, v\u00e1 para a documenta\u00e7\u00e3o pertinente em\nRefer\u00eancias para Bibliotecas.\nSe voc\u00ea selecionar v\u00e1rios componentes usando a ferramenta Editar, em seguida,\na tabela exibir\u00e1 aqueles atributos compartilhados por todos os selecionados\n(excluindo quaisquer conex\u00f5es). Se os componentes selecionados n\u00e3o tiverem todos\no mesmo valor para o atributo, ent\u00e3o o valor exibido ficar\u00e1 em branco.\nVoc\u00ea poder\u00e1 alterar os valores de todos os atributos dos componentes selecionados\nde uma vez tamb\u00e9m usando a tabela."
  },
  {
    "id": 12,
    "title": "Atributos de ferramenta e componente",
    "url": "/pt/html/guide/attrlib/tool.html",
    "text": "Atributos de Ferramenta\nAtributos de Ferramenta\nToda ferramenta para a adi\u00e7\u00e3o de componentes a um circuito tamb\u00e9m\npossui um conjunto de atributos, que ser\u00e3o transmitidos aos componentes criados\npela ferramenta, embora os atributos dos componentes possam ser alterados sem\nafetar os atributos da ferramenta. Quando voc\u00ea selecionar uma ferramenta, o Logisim\nvai mudar a tabela de atributos para mostrar aqueles pr\u00f3prios dela.\nPor exemplo, suponha que se queira criar portas AND pequenas.\nNo momento, cada vez que selecionar a ferramenta, uma porta AND grande ser\u00e1 criada.\nMas, se editar o atributo de tamanho da porta, logo ap\u00f3s selecionar a ferramenta\n(antes de colocar a porta AND no circuito), ir\u00e1 mudar os atributos para a ferramenta,\nde modo que futuras portas AND acrescentadas pela ferramenta ser\u00e3o pequenas.\n(Figura do original em ingl\u00eas)\nAgora, as duas ANDs j\u00e1 existentes poder\u00e3o ser exclu\u00eddas e duas novas\nadicionadas em seu lugar. Desta vez, eles ser\u00e3o pequenas.\n(Se voc\u00ea optar por reduzir o n\u00famero de entradas para 3, a porta AND\nn\u00e3o ter\u00e1 extens\u00e3o vertical no lado esquerdo. Mas voc\u00ea tamb\u00e9m\nter\u00e1 que religar ao circuito as conex\u00f5es que cheguem \u00e0 porta AND daquele lado.)\n(Figura do original em ingl\u00eas)\nPara algumas ferramentas, os \u00edcones que as representam refletem alguns dos\nvalores de seus atributos. Um exemplo disso \u00e9 a ferramenta Pino, cujo \u00edcone\nmostra a mesma informa\u00e7\u00e3o que o seu atributo de dire\u00e7\u00e3o (Facing).\nOs itens na barra de ferramentas possuem um conjunto separado de atributos\ncorrespondentes \u00e0quelas no painel Explorador. Assim, mesmo que o item na\nbarra de ferramentas crie portas AND pequenas, o da biblioteca Portas (Gates)\nainda criar\u00e1 portas AND grandes, a menos voc\u00ea altere seus atributos tamb\u00e9m.\nNa verdade, os pinos de entradas e de sa\u00eddas padr\u00f5es na barra de ferramentas\ns\u00e3o duas inst\u00e2ncias do mesmo item na biblioteca Base, mas os conjuntos de atributos\ns\u00e3o diferentes. O \u00edcone para a ferramenta Pino \u00e9 tra\u00e7ado como um c\u00edrculo ou um quadrado,\ndependendo do valor do seu atributo \"Sa\u00edda?\".\nO Logisim oferece um atalho \u00fatil para se alterar o atributo Dire\u00e7\u00e3o\nque controla aquela em que muitos componentes se orientam: bastar apertar a tecla\nda seta, enquanto que a ferramenta for selecionada e automaticamente alterar\u00e1 a\ndire\u00e7\u00e3o do componente."
  },
  {
    "id": 13,
    "title": "Subcircuitos",
    "url": "/pt/html/guide/subcirc/index.html",
    "text": "Subcircuitos\nSubcircuitos\nComo voc\u00ea poder\u00e1 construir circuitos cada vez mais sofisticados,\npoder\u00e1 querer tamb\u00e9m construir circuitos menores que possam ser usados\nv\u00e1rias vezes como um m\u00f3dulo embutido em circuitos maiores.\nNo Logisim, um circuito menor, que seja usado em outro maior,\nser\u00e1 chamado de\nsubcircuito .\nSe voc\u00ea estiver familiarizado com programa\u00e7\u00e3o de computadores,\ntamb\u00e9m dever\u00e1 estar com conceito de subprograma, quer se trate de uma\nsub-rotina,\nfun\u00e7\u00e3o,\nm\u00e9todo, ou\nprocedimento\nna sua linguagem de prefer\u00eancia.\nO conceito de subcircuito \u00e9 an\u00e1logo a isso, e serve ao mesmo prop\u00f3sito:\npara dividir um trabalho em por\u00e7\u00f5es menores,\npara poupar esfor\u00e7o de definir o mesmo conceito v\u00e1rias vezes, e\npara facilitar a depura\u00e7\u00e3o.\nCriar circuitos\nUsar subcircuitos\nEditar apar\u00eancia de subcircuito\nDepurar subcircuitos\nBibliotecas do Logisim"
  },
  {
    "id": 14,
    "title": "Para criar circuitos",
    "url": "/pt/html/guide/subcirc/creating.html",
    "text": "Criar circuitos\nCriar circuitos\nCada projeto Logisim \u00e9 realmente uma biblioteca de circuitos. Em\nsua forma mais simples, cada projeto ter\u00e1 um \u00fanico circuito (chamado\n\"Principal\" por padr\u00e3o), mas \u00e9 f\u00e1cil adicionar mais:\nbasta selecionar Adicionar Circuito ... a partir do menu Projeto, e\ndigitar qualquer nome. Voc\u00ea poder\u00e1 aproveitar, ent\u00e3o, o novo circuito que criar.\nSuponha que queiramos construir um multiplexador 2:1 com o nome \"MUX 2:1\".\nAp\u00f3s adicionar o circuito, Logisim ser\u00e1 parecido com isso.\nNo painel de explorador, voc\u00ea poder\u00e1 ver que o projeto agora\nconter\u00e1 dois circuitos, \"principal\" e \"MUX 2:1\". O Logisim desenhar\u00e1\numa lupa sobre o \u00edcone do circuito a ser visualizado, o nome corrente\ndo circuito tamb\u00e9m aparecer\u00e1 na barra de t\u00edtulo da janela.\nAp\u00f3s a edi\u00e7\u00e3o do circuito para parecer como um multiplexador 2:1,\npoder\u00edamos ter o circuito a seguir."
  },
  {
    "id": 15,
    "title": "Para usar subcircuitos",
    "url": "/pt/html/guide/subcirc/using.html",
    "text": "Usar subcircuitos\nUsar subcircuitos\nAgora, suponha que queiramos construir um multiplexador 4:1, utilizando\ninst\u00e2ncias de nosso multiplexador 2:1. \u00c9 claro que gostar\u00edamos de criar, primeiro,\num novo circuito, que chamaremos de \"MUX 4:1\". Para adicionar multiplexadores 2:1\nem nosso circuito, clicar no circuito\nMUX 2:1\numa vez no painel do\nExplorador para selecion\u00e1-lo como uma ferramenta, e depois poderemos juntar c\u00f3pias\ndisso, representadas como caixas, clicando na \u00e1rea de desenho.\nSe voc\u00ea clicar duas vezes no circuito MUX 2:1 no painel do explorador,\nent\u00e3o a janela mudar\u00e1 para a edi\u00e7\u00e3o do circuito MUX 2:01.\nDepois de construir o circuito, obteremos o seguinte.\nNosso circuito multiplexador 4:1 usar\u00e1 tr\u00eas c\u00f3pias do\nmultiplexador 2:1, cada uma desenhada como uma caixa com conex\u00f5es em suas bordas.\nOs pinos nessa caixa corresponder\u00e3o aos pinos de entrada e sa\u00edda no\ncircuito MUX 2:1. Os dois pinos no lado oeste da caixa corresponder\u00e3o\naos dois pinos direcionados para leste no circuito MUX 2:1; o pino do\nlado leste da caixa corresponder\u00e1 ao pino a oeste no MUX 2:1\n(que passa a ser um pino de sa\u00edda) e os pinos no sul da caixa\ncorresponder\u00e3o aos pinos ao norte do MUX 2:1. A ordem dos dois pinos no\nlado oeste da caixa corresponder\u00e3o aos mesmos de cima para baixo,\nde acordo com a concep\u00e7\u00e3o do subcircuito. (Se houvesse v\u00e1rios pinos\nno norte da caixa ou do lado sul, eles corresponderiam \u00e0 mesma\nordem da esquerda para a direita no subcircuito.)\nSe os pinos no layout do subcircuito tiverem r\u00f3tulos associados\neles, ent\u00e3o Logisim ir\u00e1 mostrar a etiqueta como uma\ndica\n(isto \u00e9, uma caixa de texto tempor\u00e1ria) quando o usu\u00e1rio passar o mouse sobre o\nlocaliza\u00e7\u00e3o correspondente do componente no subcircuito. (Se voc\u00ea encontrar essas\ndicas irritantes, poder\u00e1 desativ\u00e1-las atrav\u00e9s da\naba Prefer\u00eancias da Janela de Layout .)\nV\u00e1rios outros componentes ir\u00e3o mostrar essas dicas tamb\u00e9m: para alguns dos\npinos de um\nflip-flop\npredefinido,\npor exemplo, ao passar sobre ele explicar\u00e1 a fun\u00e7\u00e3o do que faz o pino.\nAli\u00e1s, todos os pinos de um circuito dever\u00e3o ser uma entrada ou\numa sa\u00edda. Muitos chips fabricados t\u00eam pinos que se comportam como uma entrada\nem algumas situa\u00e7\u00f5es e como uma sa\u00edda em outras, voc\u00ea n\u00e3o poder\u00e1 construir\nesses tipos de chips dentro Logisim (pelo menos na vers\u00e3o atual).\nO Logisim ir\u00e1 manter informa\u00e7\u00f5es de estado diferentes para todos os subcircuitos\nque aparecerem. Por exemplo, se um circuito contiver um flip-flop,\ne se for usado diversas vezes como subcircuito, ent\u00e3o cada um deles\nter\u00e1 o seu pr\u00f3prio valor quando for simular o circuito maior.\nUm vez que tenhamos o multiplexador 4:1 definido, poderemos us\u00e1-lo\nem outros circuitos. O Logisim n\u00e3o tem limites em qu\u00e3o profundo os circuitos\npossam ser aninhados - embora ele ir\u00e1 opor-se \u00e0 coloca\u00e7\u00e3o desses dentro de si pr\u00f3prios!\nNota:\nN\u00e3o h\u00e1 nada de errado com a edi\u00e7\u00e3o de um\ncircuito que estiver sendo usado como um subcircuito, na verdade, isso \u00e9 muito\ncomum. Esteja ciente, no entanto, que quaisquer altera\u00e7\u00f5es nos pinos de um circuito\n(adicionando, excluindo ou movendo-os) ir\u00e1 reorganiz\u00e1-los tamb\u00e9m naquele que o contiver.\nAssim, se voc\u00ea alterar os pinos em um circuito, voc\u00ea tamb\u00e9m ter\u00e1 necessidade\nde editar qualquer circuito que us\u00e1-lo como um subcircuito."
  },
  {
    "id": 16,
    "title": "Para editar a apar\u00eancia de subcircuito",
    "url": "/pt/html/guide/subcirc/appear.html",
    "text": "Editar apar\u00eancia de subcircuitos\nEditar apar\u00eancia de subcircuitos\nApar\u00eancia padr\u00e3o\nPor padr\u00e3o, quando um subcircuito \u00e9 colocado dentro de um circuito maior,\nele ser\u00e1 desenhado como um ret\u00e2ngulo com um entalhe indicando a face norte do\nsubcircuito. Pinos ser\u00e3o colocados nas bordas do ret\u00e2ngulo com base em sua dire\u00e7\u00e3o:\npinos virados para o leste no layout (e que geralmente aparecem no lado oeste)\nser\u00e3o colocados no lado do ret\u00e2ngulo oeste, de acordo com sua ordem de\ncima para baixo no layout.\nPinos que estiverem virados para o sul no layout (normalmente na dire\u00e7\u00e3o\nnorte) ser\u00e3o colocados no lado norte do ret\u00e2ngulo, de acordo com a ordem da\nesquerda para a direita no layout.\nO ret\u00e2ngulo padr\u00e3o poder\u00e1 opcionalmente incluir algumas letras que aparecer\u00e3o\nno meio. Para especificar isso, escolher a ferramenta de sele\u00e7\u00e3o\n() e clicar no fundo\ndo layout do circuito. Isso ir\u00e1 mostrar a tabela de atributos do circuito,\nincluindo o r\u00f3tulo, dire\u00e7ao da etiqueta, e fonte de r\u00f3tulos. O valor do atributo\nR\u00f3tulo ser\u00e1 desenhado no centro do ret\u00e2ngulo; o atributo da dire\u00e7\u00e3o da etiqueta\npara personalizar o sentido em que o texto ser\u00e1 desenhado, e, claro, atributo que\npersonaliza a fonte utilizada.\nForma personalizada\nA forma padr\u00e3o \u00e9 muito \u00fatil, e de fato Logisim existiu por muitos\nanos, sem outra op\u00e7\u00e3o. Se, no entanto, preferir que o subcircuito seja\ndesenhado de forma diferente, voc\u00ea poder\u00e1 selecionar\nEditar Forma do Circuito\na partir do menu de projeto,\ne o Logisim mudar\u00e1 da sua interface normal de\nedi\u00e7\u00e3o de layout para outra capaz de alterar a forma (apar\u00eancia) do circuito.\nAbaixo, editaremos a apar\u00eancia do multiplexador 2:1, para que seja desenhada\ncomo de costume por um trap\u00e9zio, em vez de um ret\u00e2ngulo.\n(Voc\u00ea poder\u00e1 ver a barra de ferramentas do projeto, logo abaixo da normal.\nIsso poder\u00e1 ser ativado atrav\u00e9s do menu de projeto, e ela permitir\u00e1 uma mudan\u00e7a\nmais r\u00e1pida entre a edi\u00e7\u00e3o de layout e da forma.)\nCom a forma do multiplexador 2:1 desenhada como acima,\no layout para o multiplexador 4:1, ent\u00e3o, aparecer\u00e1 como o que se segue.\nO editor de forma (apar\u00eancia) \u00e9 como um programa para desenho tradicional, mas h\u00e1\nalguns s\u00edmbolos especiais para indicar como o desenho funcionar\u00e1 quando colocado\nem um layout de circuito. Esses s\u00edmbolos especiais n\u00e3o poder\u00e3o ser removidos.\nO c\u00edrculo verde com uma linha que vem de fora, chamaremos de\n\u00e2ncora.\nH\u00e1 exatamente uma \u00e2ncora em cada subcircuito.\nCada componente em um circuito tem um \u00fanico ponto para identificar a sua localiza\u00e7\u00e3o;\num usu\u00e1rio ver\u00e1 isso ao criar um novo componente.\nO clique do mouse identificar\u00e1 apenas um local e, o componente ser\u00e1 colocado\nem rela\u00e7\u00e3o a ele (geralmente com a sa\u00edda principal na posi\u00e7\u00e3o do mouse).\nA \u00e2ncora identificar\u00e1 a localiza\u00e7\u00e3o relativa ao desenho global do mouse\nquando o subcircuito for criado.\nA \u00e2ncora tamb\u00e9m identificar\u00e1 a dire\u00e7\u00e3o em sua apar\u00eancia, conforme indicado pela\ndire\u00e7\u00e3o da linha de pontos da \u00e2ncora de seu c\u00edrculo. Ao colocar um subcircuito\nem um layout, o usu\u00e1rio poder\u00e1 mudar a face do subcircuito, a \u00e2ncora indicar\u00e1\na dire\u00e7\u00e3o em que a apar\u00eancia ser\u00e1 orientada. No nosso exemplo, a \u00e2ncora ser\u00e1\nvoltada para o leste, e cada inst\u00e2ncia do subcircuito no multiplexador 4:1\ntamb\u00e9m estar\u00e1 voltada para o leste, ent\u00e3o eles ser\u00e3o todos desenhados com a\nmesma orienta\u00e7\u00e3o que a apar\u00eancia do multiplexador 2:1.\nOs c\u00edrculos azuis e quadrados com pontos s\u00e3o as\nportas\ndos subcircuitos\nHaver\u00e1 exatamente tantas portas quantos os pinos de entrada e sa\u00edda no circuito.\nPortas correspondentes \u00e0s entradas ser\u00e3o desenhadas como quadrados, enquanto\nas portas correspondentes \u00e0s sa\u00eddas ser\u00e3o desenhados como c\u00edrculos.\nCada porta indicar\u00e1 como uma conex\u00e3o para o circuito corresponder\u00e1 a um\npino de entrada ou sa\u00edda dentro do layout.\nQuando voc\u00ea selecionar uma porta, o Logisim indicar\u00e1 o pino correspondente\nfazendo sobressair um diagrama em miniatura do layout no canto inferior direito\nda janela, com o(s) pino(s) correspondente(s) desenhado(s_ em azul.\nIsso n\u00e3o acontecer\u00e1 quando todas as portas estiverem selecionados.\nA barra de ferramentas cont\u00e9m aquelas para adicionar formas adicionais, conforme\nlistado abaixo com descri\u00e7\u00f5es de como as teclas shift e alt modificam o comportamento\nda ferramenta. Al\u00e9m disso, clicando ou arrastando o mouse com a tecla control\npressionada normalmente remeter\u00e1 a posi\u00e7\u00e3o do mouse para o ponto mais pr\u00f3ximo na grade.\nSelecionar, mover, copiar, colar e formas.\nAdicionar ou editar texto.\nCriar um segmento de linha. Shift-drag mant\u00e9m o \u00e2ngulo da linha em um m\u00faltiplo\nde 45\u00b0.\nCriar uma curva B\u00e9zier quadr\u00e1tica.\nPara o primeira arraste, onde voc\u00ea especificar\u00e1 os par\u00e2metros da curva,\no shift-drag manter\u00e1 os pontos da extremidade em um \u00e2ngulo que ser\u00e1 um m\u00faltiplo de 45\u00b0.\nEm seguida, clicar para indicar a localiza\u00e7\u00e3o do ponto de controle;\nshift-click garantir\u00e1 que a curva ser\u00e1 sim\u00e9trica,\nenquanto alt-click desenhar\u00e1 a curva que passar\u00e1 pelo ponto de controle.\nCriar uma seq\u00fc\u00eancia de linhas conectadas, cujos v\u00e9rtices ser\u00e3o indicados por\numa sucess\u00e3o de clicks. Shift-click garantir\u00e1 que o \u00e2ngulo entre o\nv\u00e9rtice anterior e o atual ser\u00e1 um m\u00faltiplo de 45\u00b0.\nBastar\u00e1 um duplo clique ou pressionar a tecla Enter para concluir o desenho.\nCriar um ret\u00e2ngulo arrastando-o de um canto para outro oposto.\nShift-drag para criar um quadrado, e alt-drag para criar o ret\u00e2ngulo a partir\ndo centro.\nCriar um ret\u00e2ngulo com cantos arredondados arrastando-o de um canto para outro oposto.\nShift-drage para criar um quadrado, e alt-drag para criar o ret\u00e2ngulo de a partir\ndo centro.\nCriar uma oval mediante o arrastar de um canto de seu contorno para outro oposto.\nShift-drag para criar um c\u00edrculo e alt-drag para criar a oval a partir\ndo centro.\nCriar um pol\u00edgono arbitr\u00e1rio, cujos v\u00e9rtices ser\u00e3o indicados por\numa sucess\u00e3o de cliques. Shift-click garantir\u00e1 que o v\u00e9rtice estar\u00e1 a 45\u00b0\ndo anterior. Se der um duplo clique, pressionar a tecla Enter, ou clicar no\nv\u00e9rtice inicial completar\u00e1 o desenho."
  },
  {
    "id": 17,
    "title": "Para depurar subcircuitos",
    "url": "/pt/html/guide/subcirc/debug.html",
    "text": "Depurar subcircuitos\nDepurar subcircuitos\nAo testar circuitos maiores, voc\u00ea provavelmente encontrar\u00e1 bugs.\nPara se descobrir o que estiver acontecendo de errado, explorar o que estiver\nacontecendo no subcircuitos enquanto estiver testando o circuito global poder\u00e1\nser bastante \u00fatil.\nVoc\u00ea poder\u00e1 ver o estado do subcircuito usando tr\u00eas maneiras diferentes.\nA mais simples provavelmente ser\u00e1 ver a hierarquia da simula\u00e7\u00e3o ao clicar no\nsegundo \u00edcone na barra de tarefas acima do painel do explorador,\n(), ou ao selecionar\n\"Ver Simula\u00e7\u00e3o\" no menu Projeto. Isso alterar\u00e1 o painel do explorador de modo\na exibir a hierarquia dos subcircuitos que estiverem sendo simulados.\nUm duplo-clique em um elemento nessa hierarquia ir\u00e1 mostrar o que estiver\nacontecendo dentro desse subcircuito.\nA segunda maneira pela qual voc\u00ea poder\u00e1 entrar em um subcircuito\nabrir o menu pop-up do subcircuito pelo bot\u00e3o direito do mouse ou\ncontrol-click, e escolher a op\u00e7\u00e3o Exibir (View).\nE a terceira maneira \u00e9 primeiro selecionar a Ferramenta Testar\ne ent\u00e3o clicar no subcircuito que desejar explorar; uma lupa ir\u00e1 aparecer\nsobre o centro do subcircuito, e um duplo-clique sobre ela ir\u00e1 apresentar\no estado desse subcircuito.\nEm qualquer uma desses casos, uma vez dentro do subcircuito,\nser\u00e1 poss\u00edvel ver quais os valores dos pinos no subcircuito corresponder\u00e3o\naos valores que estiverem sendo enviados atrav\u00e9s deles para o circuito que\nos contiver.\nEnquanto no subcircuito, voc\u00ea ter\u00e1 permiss\u00e3o para alterar o circuito. Se as\nmudan\u00e7as afetarem qualquer das sa\u00eddas do subcircuito, elas ser\u00e3o propagadas para esse.\nUma exce\u00e7\u00e3o: as entradas do subcircuito ser\u00e3o determinadas com base\nnos valores que entram no supercircuito, por isso n\u00e3o faz sentido alternar esses valores.\nSe voc\u00ea tentar introduzir uma modifica\u00e7\u00e3o no subcircuito, uma caixa de di\u00e1logo se\nabrir\u00e1 perguntando se\no pino est\u00e1 ligado ao estado do supercircuito.\nCriar um estado novo para o circuito?\nSe clicar em N\u00e3o, cancelarar\u00e1 o pedido de\naltera\u00e7\u00e3o, se clicar em Sim ir\u00e1 criar uma c\u00f3pia dos estados vistos,\ndiferente do circuito externo, com o pino de entrada alterado.\nDepois de ter completado a visualiza\u00e7\u00e3o e/ou edi\u00e7\u00e3o, poder\u00e1 retornar ao circuito\noriginal ao clicar duas vezes no circuito principal no painel do Explorador, ou\natrav\u00e9s do submenu Ir Ao Estado do menu Simula\u00e7\u00e3o."
  },
  {
    "id": 18,
    "title": "Bibliotecas do Logisim",
    "url": "/pt/html/guide/subcirc/library.html",
    "text": "Bibliotecas do Logisim\nBibliotecas do Logisim\nCada projeto Logisim \u00e9 tamb\u00e9m uma biblioteca que poder\u00e1 ser carregada\nem outros projetos: basta salvar em um arquivo e depois carreg\u00e1-la\ncomo biblioteca em outro projeto. Todos os circuitos definidos no\nprimeiro projeto estar\u00e3o dispon\u00edveis como subcircuitos para o segundo.\nEsse recurso permite reutilizar componentes comuns em projetos\ne compartilhar componentes favoritos com seus colegas (ou alunos).\nCada projeto possui um \"circuito principal\", que poder\u00e1 ser alterado\npara se referir ao circuito corrente de acordo com a op\u00e7\u00e3o Marcar Como Principal\nno menu Projeto. O\napenas\nsignifica que o circuito principal \u00e9\no \u00fanico a ser exibido quando voc\u00ea abrir pela primeira vez o projeto.\nO nome padr\u00e3o do circuito em um arquivo rec\u00e9m-criado\n(\"Principal\") n\u00e3o tem nenhum significado algum, e voc\u00ea pode sentir-se livre para\napagar ou mudar o nome desse circuito.\nCom uma biblioteca Logisim carregada, voc\u00ea ter\u00e1 permiss\u00e3o para ver os circuitos e\nmanipular seus estados, mas o Logisim ir\u00e1 impedi-lo de alterar os aspectos dos circuitos\ne outros dados armazenados no arquivo.\nSe voc\u00ea quiser alterar um circuito em uma biblioteca j\u00e1 carregada,\nent\u00e3o, ser\u00e1 preciso abri-la separadamente, no Logisim. Assim que voc\u00ea a salvar,\noutro projeto dever\u00e1 carregar a vers\u00e3o modificada imediatamente, mas se isso\nn\u00e3o acontecer, voc\u00ea poder\u00e1 com usar o bot\u00e3o direito do mouse sobre a pasta\nda biblioteca no painel do explorador e escolher Atualizar Biblioteca."
  },
  {
    "id": 19,
    "title": "Conex\u00f5es",
    "url": "/pt/html/guide/bundles/index.html",
    "text": "Cabos\nCabos\nEm circuitos simples do Logisim, a maioria das conex\u00f5es t\u00eam um \u00fanico bit;\nmas tamb\u00e9m lhe ser\u00e1 permitido criar cabos que enfeixem fios empacotando m\u00faltiplos bits.\nO n\u00famero de bits que viajam ao longo de um cabo ser\u00e1 especificado pela sua\nlargura em bits.\nPara criar cabos\nDistribuidores (Splitters)\nCores das conex\u00f5es"
  },
  {
    "id": 20,
    "title": "Para criar conex\u00f5es",
    "url": "/pt/html/guide/bundles/creating.html",
    "text": "Para criar cabos\nPara criar cabos\nCada entrada e sa\u00edda em cada componente de um circuito tem uma largura de bits\nassociada a ela. Na maioria das vezes a largura do bit ser\u00e1 1, e n\u00e3o haver\u00e1 como\nmudar isso, mas muitos dos componentes predefinidos do Logisim incluem atributos\ncujas as larguras de bits de suas entradas e sa\u00eddas poder\u00e3o ser escolhidas.\nA tela abaixo apresenta um circuito simples onde se encontra uma opera\u00e7\u00e3o AND\nde duas entradas de tr\u00eas bits cada. Observe que os tr\u00eas bits da sa\u00edda resultam\ndessas entradas. Todos os componentes tiveram seus atributos Bits de Dados alterados\npara lidar com tr\u00eas bits, na tela, como exemplo, alguns dos atributos da porta AND\ntamb\u00e9m s\u00e3o mostrados, e dentre eles atributo dos bits de dados (Data Bits) igual a 3.\n(Figura do original em ingl\u00eas)\nTodos os componentes no Logisim possuem uma largura definida para cada bit\nde entrada e sa\u00edda. Por outro lado, a largura em bits de uma conex\u00e3o \u00e9 indefinida.\nEla se adaptar\u00e1 aos componentes a que estiver ligada.\nSe um fio conectar dois componentes que exijam larguras diferentes,\no Logisim ir\u00e1 reclamar que s\u00e3o \"larguras incompat\u00edveis\" e indicar\u00e1 onde\ncom indica\u00e7\u00f5es em cor laranja.\nAbaixo, o atributo de bits de dados (Data Bits) do pino de sa\u00edda foi alterado para 1,\ne por isso o Logisim reclama que n\u00e3o pode conectar um valor de tr\u00eas bits com outro\nde um bit apenas.\n(Figura do original em ingl\u00eas)\nConex\u00f5es entre elementos incompat\u00edveis (desenhadas em cor laranja) n\u00e3o\ntransportar\u00e3o sinais.\nPara conex\u00f5es de um \u00fanico bit, \u00e9 poss\u00edvel ver logo o que o fio transporta\natrav\u00e9s das cores verde-claro ou verde-escuro do Logisim, dependendo do valor.\nEle n\u00e3o apresentar\u00e1 valores para as conex\u00f5es multi-bit: elas ficar\u00e3o simplesmente\nem preto. Voc\u00ea poder\u00e1, no entanto, examinar a conex\u00e3o, clicando com a ferramenta\nTestar (Poke) ().\n(Figura do original em ingl\u00eas)\nEsse recurso para sondagem \u00e9 \u00fatil para depura\u00e7\u00e3o de circuitos usando\ncabos."
  },
  {
    "id": 21,
    "title": "Distribuidores",
    "url": "/pt/html/guide/bundles/splitting.html",
    "text": "Distribuidores (Splitters)\nDistribuidores (Splitters)\nQuando voc\u00ea trabalhar com valores multi-bit, muitas vezes poder\u00e1 querer rotear\nbits em dire\u00e7\u00f5es diferentes.\nA ferramenta Distribuidor (Splitter) da biblioteca Base\n()\nlhe permitir\u00e1 fazer isso.\nPor exemplo, suponha que queiramos construir um circuito que calcula bit a bit\na conjun\u00e7\u00e3o de dois nibbles (meio byte) de uma entrada de oito bits\n(os quatro bits superiores e os quatro bits inferiores). Teremos um valor de oito bits\nno pinos de entrada, e \u00e9 desej\u00e1vel dividi-lo em dois valores de quatro bits. No\ncircuito abaixo, usaremos um distribuidor para conseguir isso: a entrada de 8 bits\nir\u00e1 conectar-se ao distribuidor (que se assemelha a um p\u00e9 de p\u00e1ssaro), que dividir\u00e1 os\n8 bits em dois conjuntos de 4 bits, que ir\u00e3o para a porta AND e de l\u00e1 para a sa\u00edda.\n()\n(Figura do original em ingl\u00eas)\nNesse exemplo, a distribui\u00e7\u00e3o acontecer\u00e1 na verdade ao se separar um\nvalor de entrada em v\u00e1rios de sa\u00edda. Mas os distribuidores tamb\u00e9m poder\u00e3o\ncombinar v\u00e1rios valores em um s\u00f3. Na verdade, eles n\u00e3o t\u00eam dire\u00e7\u00e3o preferencial:\npodem enviar sinais em um sentido em dado instante, e em outro sentido mais tarde,\ne ainda poder\u00e3o fazer as duas coisas ao mesmo tempo, como no exemplo abaixo,\nonde um sinal ser\u00e1 transmitido para o leste atrav\u00e9s de dois distribuidores,\ne em seguida, ser\u00e1 encaminhado de volta para o oeste atrav\u00e9s deles,\ne novamente para leste, onde finalmente chegar\u00e1 a sua sa\u00edda.\n(Figura do original em ingl\u00eas)\nA chave para o entendimento dos distribuidores s\u00e3o seus atributos.\nA seguir, o termo termina\u00e7\u00f5es (split end) refere-se \u00e0s m\u00faltiplas conex\u00f5es\nde um lado, enquanto o termo combinada (combined) refere-se \u00e0 extremidade\ndo \u00fanico fio do outro lado.\nO atributo\nDire\u00e7\u00e3o (Facing)\ndir\u00e1 a posi\u00e7\u00e3o relativa das\ntermina\u00e7\u00f5es considerando-se a extremidade combinada.\nO atributo\nDistribui\u00e7\u00e3o (Fan Out)\nespecificar\u00e1 quantas\ntermina\u00e7\u00f5es existem.\nO atributo\nLargura em Bits \u00e0 Entrada (Bit Width In)\nespecificar\u00e1 a quantidade de bits combinados.\nO atributo\nBit\nx\ndir\u00e1 qual a termina\u00e7\u00e3o\ncorrespondente ao\nbit x\nna extremidade combinada. Se v\u00e1rios bits\ncorresponderem \u00e0 mesma termina\u00e7\u00e3o, ent\u00e3o a sua ordem relativa tamb\u00e9m ser\u00e1 a mesma\nna extremidade combinada. Os distribuidores do Logisim n\u00e3o poder\u00e3o ter um bit\nna parte combinada que n\u00e3o possua equivalente na parte com m\u00faltiplas termina\u00e7\u00f5es.\nObservar que qualquer altera\u00e7\u00e3o nos atributos multiplicidade ou\nlargura de bit ir\u00e1 recompor todas os atributos\nBit x\nde modo que eles possam distribuir os bits combinados da maneira mais uniforme\nposs\u00edvel entre as termina\u00e7\u00f5es."
  },
  {
    "id": 22,
    "title": "Cores das conex\u00f5es",
    "url": "/pt/html/guide/bundles/colors.html",
    "text": "Cores das conex\u00f5es\nCores das conex\u00f5es\nEstamos agora em condi\u00e7\u00f5es de resumir a variedade de cores que as\nconex\u00f5es do Logisim poder\u00e3o assumir. O pequeno circuito que se segue\nilustra todos elas de uma s\u00f3 vez.\n(Figura do original em ingl\u00eas)\nCinza:\nA largura em bits das conex\u00f5es \u00e9 desconhecida. Isso\nocorre porque o fio n\u00e3o est\u00e1 conectado \u00e0s entradas ou \u00e0s sa\u00eddas de qualquer componente.\n(Todas as entradas e as sa\u00eddas t\u00eam uma largura de bits definida.)\nAzul:\nO fio serve para transportar um bit,\nmas o valor que ele est\u00e1 carregando no momento n\u00e3o \u00e9 conhecido.\nA entrada \u00e9 mostrada como um pino tri-state, de modo que ele possa emitir\nesse sinal como flutuante.\nVerde escuro:\nO fio est\u00e1 carregando um bit igual a 0.\nVerde brilhante:\nO fio est\u00e1 carregando um bit igual a 1.\nPreto:\nO fio \u00e9 portador de um valor multi-bit.\nAlguns ou mesmo todos os bits poder\u00e3o n\u00e3o estar especificados.\nVermelho:\nO fio est\u00e1 carregando um valor com erro.\nIsso geralmente acontece porque uma porta n\u00e3o pode determinar a sa\u00edda correta,\ntalvez porque n\u00e3o tenha entradas. Tamb\u00e9m poder\u00e1 surgir porque dois componentes\nest\u00e3o tentando enviar valores diferentes para o fio; isso acontece no exemplo acima,\nonde um pino de entrada tenta colocar 0 enquanto outro tenta colocar 1 no mesmo fio,\ncausando um conflito. Conex\u00f5es multi-bit ficar\u00e3o vermelhas quando qualquer um dos bits\ntransportadas estiver com erro.\nLaranja:\nOs componentes ligados ao fio n\u00e3o concordam com a\nmesma largura de bits. Uma conex\u00e3o laranja \u00e9 efetivamente \"quebrada\": n\u00e3o transportar\u00e1\nsinais entre os componentes. Aqui, conectamos um componente de dois bits a outro\nde um bit, de modo a serem incompat\u00edveis."
  },
  {
    "id": 23,
    "title": "An\u00e1lise combinacional",
    "url": "/pt/html/guide/analyze/index.html",
    "text": "An\u00e1lise Combinacional\nAn\u00e1lise combinacional\n(Figura do original em ingl\u00eas)\nTodos os circuitos podem ser separados em duas categorias bem conhecidas:\na dos circuitos combinacionais, onde todas as sa\u00eddas s\u00e3o\ncombina\u00e7\u00f5es estritas das entradas correntes; ou a dos circuitos\nsequenciais, onde algumas sa\u00eddas podem depender de entradas anteriores\n(a sequ\u00eancia de entradas ao longo do tempo).\nA categoria de circuitos combinacionais \u00e9 a mais simples das duas. Seus usu\u00e1rios\ncostumam usar tr\u00eas t\u00e9cnicas principais para resumir o comportamento de tais circuitos:\ncircuitos l\u00f3gicos,\nexpress\u00f5es l\u00f3gicas (booleanas), que permitem uma representa\u00e7\u00e3o alg\u00e9brica\nde como o circuito funciona,\ntabelas-verdade, que listam todas as combina\u00e7\u00f5es poss\u00edveis das entradas e\ndas sa\u00eddas correspondentes.\nO m\u00f3dulo\nAn\u00e1lise Combinacional\ndo Logisim permite converter entre essas\ntr\u00eas representa\u00e7\u00f5es, em qualquer sentido. \u00c9 uma maneira particularmente \u00fatil para\nse criar e entender circuitos a partir de algumas entradas e sa\u00eddas de um bit cada.\nAbrir An\u00e1lise Combinacional\nEditar a tabela-verdade\nCriar express\u00f5es\nGerar um circuito"
  },
  {
    "id": 24,
    "title": "Para abrir a An\u00e1lise Combinacional",
    "url": "/pt/html/guide/analyze/open.html",
    "text": "Abrir An\u00e1lise Combinacional\nAbrir An\u00e1lise Combinacional\nA maior parte do m\u00f3dulo An\u00e1lise Combinacional \u00e9 acess\u00edvel atrav\u00e9s de\numa janela de mesmo nome, que lhe permitir\u00e1 ver tabelas-verdade e\nexpress\u00f5es l\u00f3gicas (booleanas). Essa janela poder\u00e1 ser aberta de duas maneiras.\nAtrav\u00e9s do menu Janela\nAo selecionar An\u00e1lise Combinacional, a atual ser\u00e1 exibida na janela.\nSe voc\u00ea n\u00e3o tiver usado a janela antes, ela estar\u00e1 vazia e n\u00e3o estar\u00e1\nanalisando qualquer circuito.\nApenas uma janela An\u00e1lise Combinacional existir\u00e1 dentro do Logisim,\nn\u00e3o importa quantos projetos estiverem abertos. N\u00e3o h\u00e1 como permitir que\nse tenham duas an\u00e1lises diferentes abertas ao mesmo tempo.\nAtrav\u00e9s do menu Projeto\nA partir de uma janela para edi\u00e7\u00e3o de circuitos, voc\u00ea tamb\u00e9m poder\u00e1 solicitar\nque o Logisim analise o circuito corrente, se selecionar a op\u00e7\u00e3o Analisar Circuito\nno menu Projeto. Antes de abrir a janela, o Logisim ir\u00e1 calcular as express\u00f5es\nl\u00f3gicas (booleanas) e montar\u00e1 uma tabela-verdade correspondente ao circuito.\nPara que a an\u00e1lise seja bem sucedida, cada entrada ou sa\u00edda dever\u00e1 ser conectada\na cada um de seus respectivos pinos de entrada ou sa\u00edda.\nO Logisim s\u00f3 analisar\u00e1 circuitos com no m\u00e1ximo oito de cada tipo, e todos dever\u00e3o\nser pinos com largura de um bit apenas. Caso contr\u00e1rio, voc\u00ea ir\u00e1 ver uma mensagem\nde erro e a janela n\u00e3o ser\u00e1 aberta.\nAo construir as express\u00f5es l\u00f3gicas (booleanas) correspondentes a um circuito,\no Logisim ir\u00e1 tentar, primeiro, construir express\u00f5es que correspondam exatamente \u00e0s\nportas do circuito. Mas, se o circuito utilizar componentes que n\u00e3o sejam portas\n(como um multiplexador), ou se o circuito tiver mais de 100 n\u00edveis de profundidade\n(pouco prov\u00e1vel), ent\u00e3o aparecer\u00e1 uma caixa de di\u00e1logo informando que foi imposs\u00edvel\nmontar a express\u00e3o; e alternativamente, o Logisim tentar\u00e1 derivar as express\u00f5es\nbaseando-se na tabela-verdade, que ser\u00e1 determinada para cada combina\u00e7\u00e3o de\nentradas e pelas leituras das sa\u00eddas resultantes.\nDepois de analisar um circuito, n\u00e3o haver\u00e1 uma rela\u00e7\u00e3o de continuidade entre\no circuito e a janela de An\u00e1lise Combinacional. Ou seja, mudan\u00e7as no circuito n\u00e3o\nser\u00e3o refletidas na janela, nem mudan\u00e7as nas express\u00f5es l\u00f3gicas (booleanas) e/ou\nna tabela-verdade ser\u00e3o refletidas no circuito. Voc\u00ea sempre ter\u00e1 liberdade para\nanalisar o circuito novamente e, como veremos mais adiante, ou poder\u00e1 substituir\naquele que estiver na janela da An\u00e1lise Combinacional.\nLimita\u00e7\u00f5es\nO Logisim n\u00e3o tentar\u00e1 detectar circuitos sequenciais: se voc\u00ea disser para\nanalisar um circuito sequencial, ele tentar\u00e1 criar uma tabela-verdade\ne as correspondentes express\u00f5es l\u00f3gicas (booleanas), ainda que essas\npossam n\u00e3o indicar precisamente o comportamento do circuito. (Na verdade,\ndetectar circuitos sequenciais \u00e9 comprovadamente imposs\u00edvel, de mesma\nmonta como seria resolver o Problema da Parada. Claro, voc\u00ea poderia esperar que\no Logisim fizesse, pelo menos, algumas tentativas - talvez procurar\nflip-flops ou ciclos nas conex\u00f5es, mas ele n\u00e3o far\u00e1). Como resultado,\no sistema de An\u00e1lise Combinacional n\u00e3o dever\u00e1 ser usado indiscriminadamente:\nuse-o somente quando voc\u00ea tiver certeza de que o circuito que quiser analisar\nfor realmente combinacional!\nO Logisim far\u00e1 uma mudan\u00e7a no circuito original, que \u00e9 talvez seja\ninesperada: o sistema de An\u00e1lise Combinacional exige que cada\nentrada e sa\u00edda possua um nome exclusivo em conformidade com as regras de\nidentificadores Java. (De forma resumida, cada identificador dever\u00e1 ter letras\nou algarismos, e come\u00e7ar por letra. Espa\u00e7os em branco n\u00e3o ser\u00e3o permitidos!)\nEle tentar\u00e1 usar os r\u00f3tulos dos pinos existentes, antes de usar uma lista de\nnomes padronizados, caso n\u00e3o haja r\u00f3tulo. Se as regras n\u00e3o forem seguidas,\no Logisim tentar\u00e1 extrair um v\u00e1lido a partir dos nomes nos r\u00f3tulos, se poss\u00edvel.\nAli\u00e1s, a ordem das entradas na tabela-verdade combinar\u00e1 com seus pares\nem ordem decrescente no circuito original, seguindo da esquerda para a direita.\n(O mesmo vale para ordenar as sa\u00eddas.)"
  },
  {
    "id": 25,
    "title": "Para editar a tabela-verdade",
    "url": "/pt/html/guide/analyze/table.html",
    "text": "Editar a tabela-verdade\nEditar a tabela-verdade\nAo abrir a janela da An\u00e1lise Combinacional, voc\u00ea ir\u00e1 ver que \u00e9\ncomposto de cinco guias.\n(Figura do original em ingl\u00eas)\nEsta p\u00e1gina descreve as tr\u00eas primeiras guias: Entradas (Inputs), Sa\u00eddas (Outputs)\ne Tabela (Table). A pr\u00f3xima p\u00e1gina do manual descrever\u00e1 as duas \u00faltimas guias:\nExpress\u00e3o (Expression) e Minimizada (Minimized).\nAs guias Entradas e Sa\u00eddas\nA guia Entradas permitir\u00e1 visualizar e editar a lista de entradas.\nPara adicionar novas entradas, digite-as no campo apropriado na parte inferior\ndo painel, e clique em Adicionar. Se voc\u00ea quiser mudar o nome de uma entrada existente,\nselecione-a na lista que aparecer na parte superior do painel \u00e0 esquerda, em seguida,\ndigite o nome e clique em Renomear.\nPara remover uma entrada, selecione-a na lista e clique em Remover.\nVoc\u00ea tamb\u00e9m poder\u00e1 reordenar as entradas (isso afetar\u00e1 a ordem das\ncolunas na tabela-verdade e no circuito gerado), utilizando os bot\u00f5es para\nmover para cima (Move Up) ou para baixo (Move Down) sobre uma entrada\nselecionada.\nTodas as a\u00e7\u00f5es afetar\u00e3o a tabela verdade imediatamente.\nA guia Sa\u00eddas funciona exatamente da mesma maneira como a guia Entradas,\nexceto, claro, que funcionar\u00e1 com a lista de sa\u00eddas.\nA guia Tabela\nO \u00fanico item nessa guia \u00e9 a tabela-verdade corrente,\ndiagramado na ordem convencional, com as entradas nas colunas \u00e0 esquerda e\nas sa\u00eddas nas colunas \u00e0 direita.\nVoc\u00ea poder\u00e1 editar os valores atuais nas colunas de sa\u00edda\nclicando sobre eles. Os valores ir\u00e3o variar de 0, 1, e x\n(que representar\u00e1 um \"don't care\"). Como veremos na pr\u00f3xima p\u00e1gina, esses valores\n\"don't care\" permitir\u00e3o calcular express\u00f5es minimizadas com alguma flexibilidade.\nVoc\u00ea tamb\u00e9m poder\u00e1 navegar e editar a tabela-verdade usando o teclado.\nE poder\u00e1 copiar e colar valores usando a \u00e1rea de transfer\u00eancia.\nA \u00e1rea de transfer\u00eancia poder\u00e1 ser transferida para qualquer aplica\u00e7\u00e3o que suporte\ntexto delimitado por tabula\u00e7\u00e3o (como em uma planilha).\nSe a tabela-verdade for baseada em um circuito existente, voc\u00ea poder\u00e1 ver\nalguns quadrados r\u00f3seos nas colunas das sa\u00eddas marcados com \"!!\". Eles corresponder\u00e3o\na erros que ocorrerem enquanto for feito o c\u00e1lculo do valor para aquela linha -\nou quando o circuito estiver oscilando, ou ainda quando resultar em erro\n(o que ser\u00e1 retratado como uma conex\u00e3o vermelha no circuito Logisim).\nAo passar o mouse sobre a entrada isso dever\u00e1 trazer uma dica descrevendo\no tipo de erro gerado. Uma vez que voc\u00ea tenha clicado sobre uma entrada de erro,\nvoc\u00ea entrar\u00e1 no ciclo 0-1-x; n\u00e3o haver\u00e1 como voltar."
  },
  {
    "id": 26,
    "title": "Para criar express\u00f5es",
    "url": "/pt/html/guide/analyze/expr.html",
    "text": "Criar express\u00f5es\nCriar express\u00f5es\nPara cada vari\u00e1vel de sa\u00edda, a janela An\u00e1lise Combinacional\nmanter\u00e1 duas estruturas - uma coluna correspondente na tabela-verdade,\ne uma express\u00e3o l\u00f3gica - que especificar\u00e1 a forma como cada entrada se\nrelacionar\u00e1 com a sua sa\u00edda. Voc\u00ea poder\u00e1 editar tanto a tabela-verdade ou a express\u00e3o,\nque isso mudar\u00e1 a outra automaticamente, conforme necess\u00e1rio, para mant\u00ea-las coerentes.\nComo veremos a seguir, as express\u00f5es l\u00f3gicas (ou booleanas) s\u00e3o\nparticularmente \u00fateis, pois a janela An\u00e1lise Combinacional as usar\u00e1 quando\nfor construir um circuito que corresponda ao estado atual.\nVoc\u00ea poder\u00e1 visualizar e editar as express\u00f5es usando as duas \u00faltimas\nguias da janela: a Express\u00e3o (Expression) e a Minimizada (Minimized).\nA guia Express\u00e3o (Expression)\n(Figura do original em ingl\u00eas)\nA guia Expression permite visualizar e editar as express\u00f5es correntes\nassociadas a cada vari\u00e1vel de sa\u00edda. Voc\u00ea poder\u00e1 selecionar a express\u00e3o de sa\u00edda\nque desejar visualizar e edit\u00e1-la usando o seletor rotulado como \"Sa\u00edda:\"\n(\"Output:\") na parte superior do painel.\nLogo abaixo do seletor aparecer\u00e1 a express\u00e3o formatada em uma nota\u00e7\u00e3o\nparticularmente comum, onde uma porta OR ser\u00e1 representada como adi\u00e7\u00e3o,\numa porta AND ser\u00e1 representada como multiplica\u00e7\u00e3o, e porta NOT \u00e9 denotada\ncom uma barra acima da parte afetada pela nega\u00e7\u00e3o.\nO painel de texto embaixo mostra a mesma informa\u00e7\u00e3o em formato ASCII.\nAqui, uma porta NOT ser\u00e1 representada por um til ('~').\nVoc\u00ea poder\u00e1 editar a express\u00e3o no painel de texto e clicar no bot\u00e3o\nEntrar (Enter) para torn\u00e1-la efetiva; isso tamb\u00e9m ir\u00e1 atualizar a tabela-verdade\npara mant\u00ea-la coerente. O bot\u00e3o Limpar (Clear) apagar\u00e1 o painel de texto,\ne bot\u00e3o Restaurar (Revert) far\u00e1 o painel voltar a representar a express\u00e3o atual.\nObservar que as express\u00f5es editadas ser\u00e3o perdidas se voc\u00ea editar a\ntabela-verdade.\nAl\u00e9m dos sinais de multiplica\u00e7\u00e3o e adi\u00e7\u00e3o em lugar das portas AND e OR,\numa express\u00e3o poder\u00e1 conter qualquer tipo de operadores l\u00f3gicos em\nC/Java,\nbem como as pr\u00f3prias palavras (AND, OR, NOT).\nmaior preced\u00eancia:~ ! NOT\n(nada) & && AND\n^ XOR\nmenor preced\u00eancia:+ | || OR\nOs exemplos a seguir s\u00e3o representa\u00e7\u00f5es v\u00e1lidas de uma mesma express\u00e3o. Voc\u00ea tamb\u00e9m\npoder\u00e1 misturar os operadores.\n~a (b + c)\n!a && (b || c)\nNOT a AND (b OR c)\nEm geral, os par\u00eanteses sobre uma sequ\u00eancia de ANDs (ou ORs ou XORs) n\u00e3o importam.\n(Em particular, se criar um circuito correspondente no Logisim, ele ir\u00e1 ignor\u00e1-los.)\nA guia Minimizada (Minimized)\n(Figura do original em ingl\u00eas)\nA \u00faltima guia exibe uma soma de produtos minimizada correspondente\na uma coluna da tabela-verdade. Voc\u00ea poder\u00e1 selecionar qual a express\u00e3o\nminimizada de sa\u00edda dever\u00e1 ser exibida usando o seletor na parte superior.\nSe houver quatro entradas ou menos, um mapa de Karnaugh correspondente\n\u00e0 vari\u00e1vel ir\u00e1 aparecer abaixo do seletor. Voc\u00ea poder\u00e1 clicar no\nmapa de Karnaugh para alterar os valores na tabela-verdade. O mapa de Karnaugh\ntamb\u00e9m apresentar\u00e1 os termos selecionados para a express\u00e3o minimizada por meio de\nret\u00e2ngulos arredondados, s\u00f3lidos, semitransparentes.\nEmbaixo estar\u00e1 a express\u00e3o minimizada, formatada como mostrado na guia\nExpress\u00e3o (Expression). Se houver mais de quatro entradas, o mapa de Karnaugh\nn\u00e3o aparecer\u00e1, mas a express\u00e3o minimizada ainda ser\u00e1 calculada.\n(O Logisim usa o algoritmo de Quine-McCluskey para calcular a express\u00e3o minimizada.\nIsso \u00e9 equivalente a um mapa de Karnaugh, mas se aplica a qualquer n\u00famero de vari\u00e1veis\nde entrada.)\nO bot\u00e3o Definir Como Express\u00e3o (Set As Expression) permitir\u00e1 selecionar\na express\u00e3o minimizada como aquela correspondente \u00e0 vari\u00e1vel. Isso geralmente\nn\u00e3o ser\u00e1 necess\u00e1rio, j\u00e1 que editar a tabela-verdade resultar\u00e1 no uso da\nexpress\u00e3o minimizada para a coluna alterada, mas se voc\u00ea digitar uma express\u00e3o\natrav\u00e9s da guia apropriada, esta tamb\u00e9m poder\u00e1 ser uma maneira conveniente\npara se alterar a express\u00e3o minimizada correspondente."
  },
  {
    "id": 27,
    "title": "Para gerar um circuito",
    "url": "/pt/html/guide/analyze/gen.html",
    "text": "Gerar um circuito\nGerar um circuito\nO bot\u00e3o Gerar Circuito (Build Circuit) ir\u00e1 construir um circuito cujas portas\ncorresponder\u00e3o \u00e0s express\u00f5es correntes escolhidas para cada sa\u00edda. As\nentradas e sa\u00eddas do circuito ser\u00e3o exibidas em ordem de cima para baixo\ncorrespondente \u00e0 forma como elas aparecem sob as guias Entradas (Inputs) e Sa\u00eddas\n(Outputs). De modo geral, o circuito ser\u00e1 constru\u00eddo de forma bem clara; na verdade,\numa aplica\u00e7\u00e3o do m\u00f3dulo de An\u00e1lise Combinacional do Logisim \u00e9 posicionar bem circuitos\nmesmo que mal desenhados. Ainda assim, como acontece com qualquer formata\u00e7\u00e3o autom\u00e1tica,\nn\u00e3o ir\u00e1 expressar os detalhes estruturais como um circuito desenhado por um humano faria.\nQuando voc\u00ea clicar no bot\u00e3o Gerar Circuito (Build Circuit), uma caixa de di\u00e1logo\nir\u00e1 aparecer solicitando que voc\u00ea escolha em qual projeto desejar\u00e1 colocar o circuito\ne que nome quer lhe dar. Se voc\u00ea digitar o nome de um circuito j\u00e1 existente,\nent\u00e3o esse circuito ser\u00e1 substitu\u00eddo (ap\u00f3s o Logisim perguntar se voc\u00ea realmente\nquer fazer isso).\nA caixa de di\u00e1logo Gerar Circuito (Build Circuit) inclui duas op\u00e7\u00f5es. A op\u00e7\u00e3o\npara Usar Portas Com Apenas Duas Entradas especifica que voc\u00ea deseja que todas\nas portas usadas a partir de ent\u00e3o tenham duas entradas. (As portas NOT, \u00e9 claro,\nconstituem uma exce\u00e7\u00e3o a essa regra.) A op\u00e7\u00e3o Usar Apenas Portas NAND especifica\nque voc\u00ea gostaria que o circuito fosse traduzido usando apenas essas portas.\nVoc\u00ea poder\u00e1 selecionar ambas as op\u00e7\u00f5es, se quiser usar apenas portas NAND de duas\nentradas.\nO Logisim n\u00e3o poder\u00e1 construir um circuito somente com portas NAND para uma\nexpress\u00e3o contendo operadores XOR. Essa op\u00e7\u00e3o, portanto, ser\u00e1 desativada\nse qualquer das express\u00f5es de sa\u00eddas contiver XOR's."
  },
  {
    "id": 28,
    "title": "Refer\u00eancia para menus",
    "url": "/pt/html/guide/menu/index.html",
    "text": "Menu Refer\u00eancia (Reference)\nMenu Refer\u00eancia (Reference)\nEsta se\u00e7\u00e3o explica os seis menus que acompanham a janela principal do Logisim.\nO menu Arquivo\nO menu Editar\nO menu Projeto\nO menu Simular\nOs menus Janela e Ajuda\nMuitos itens do menu se referem especificamente ao projeto em foco.\nMas algumas janelas do Logisim (particularmente\nAn\u00e1lise Combinacional\ne\nPrefer\u00eancias da Aplica\u00e7\u00e3o )\nn\u00e3o est\u00e3o associadas aos projetos. Para essas janelas, os itens de menu espec\u00edficos\nde projeto estar\u00e3o desativados."
  },
  {
    "id": 29,
    "title": "O menu Arquivo",
    "url": "/pt/html/guide/menu/file.html",
    "text": "O menu Arquivo (File)\nO menu Arquivo (File)\nNovo\nAbrir um novo projeto em uma nova janela. O projeto ir\u00e1\ninicialmente ser uma c\u00f3pia do\ngabarito atualmente selecionado.\nAbrir ...\nAbrir um arquivo existente como um projeto em uma nova janela.\nFechar\nFechar todas as janelas associadas atualmente com o projeto em foco.\nSalvar\nSalvar o projeto atualmente em foco, substituindo o que estiver\nanteriormente no arquivo.\nSalvar como ...\nSalvar o projeto atualmente em foco, solicitando que o usu\u00e1rio\nsalve em um arquivo diferente do anterior.\nExportar imagem ...\nCriar arquivo de imagem (ou imagens) correspondente(s) aos circuitos.\nA caixa de di\u00e1logo de configura\u00e7\u00e3o ser\u00e1 descrita abaixo.\nImprimir ...\nEnviar circuito(s) para uma impressora. A caixa de di\u00e1logo de configura\u00e7\u00e3o\nser\u00e1 descrita abaixo.\nPrefer\u00eancias ...\nExibir a janela\nprefer\u00eancias da aplica\u00e7\u00e3o\n(Em sistemas Mac OS, isso ir\u00e1 aparecer no menu do Logisim.)\nSair\nFechar todos os projetos atualmente abertos e terminar o Logisim.\n(Em sistemas Mac OS, isso ir\u00e1 aparecer como Quit no menu do Logisim.)\nConfigurar exporta\u00e7\u00e3o\nAo selecionar Exportar imagem ..., o Logisim exibir\u00e1 uma caixa de di\u00e1logo\ncom quatro op\u00e7\u00f5es:\nCircuitos:\nUma lista onde voc\u00ea poder\u00e1 selecionar um ou mais circuitos\nque dever\u00e3o ser exportados em arquivos de imagem. (Circuitos em branco n\u00e3o ser\u00e3o\nexibidos como op\u00e7\u00f5es.)\nFormato da Imagem:\nVoc\u00ea poder\u00e1 criar PNG, GIF e JPEG. Recomendamos os\narquivos PNG. O formato GIF \u00e9 bem antigo, e no formato JPEG poder\u00e3o ser\nintroduzidos outros elementos na imagem, uma vez que esse formato \u00e9 realmente mais\nsignificativo para imagens fotogr\u00e1ficas.\nFator de escala:\nVoc\u00ea poder\u00e1 dimensionar as imagens que ser\u00e3o\ntransferidas para os arquivos de imagem usando esse controle.\nPr\u00e9via da impress\u00e3o:\nSe quiser usar\n\" pr\u00e9via da impress\u00e3o \" ao exportar circuitos.\nAp\u00f3s clicar em OK, o Logisim ir\u00e1 mostrar uma janela de sele\u00e7\u00e3o de arquivos\nem caixa de di\u00e1logo. Se voc\u00ea j\u00e1 tiver selecionado um circuito, indicar ent\u00e3o\no arquivo no qual a imagem dever\u00e1 ser colocada. Se voc\u00ea tiver selecionado v\u00e1rios\ncircuitos, escolher uma pasta (diret\u00f3rio) onde os arquivos dever\u00e3o\nser colocados;\no Logisim providenciar\u00e1 os nomes das imagens com base nos nomes dos circuitos\n( main.png , por exemplo).\nConfigurar impress\u00e3o\nQuando voc\u00ea escolher Imprimir ..., o Logisim exibir\u00e1 uma caixa de di\u00e1logo para\nconfigurar o que ser\u00e1 impresso.\nCircuitos:\nExibir\u00e1 uma lista onde voc\u00ea poder\u00e1 selecionar um ou mais\ncircuitos para serem impressos. (Circuitos em branco n\u00e3o ser\u00e3o exibidos como op\u00e7\u00f5es).\nO Logisim ir\u00e1 imprimir um circuito por p\u00e1gina. Se o circuito for muito\ngrande para a p\u00e1gina, a imagem ser\u00e1 redimensionada convenientemente.\nCabe\u00e7alho:\nMostrar\u00e1 o texto que dever\u00e1 aparecer centrado na parte\nsuperior de cada p\u00e1gina. As seguintes substitui\u00e7\u00f5es ser\u00e3o feitas no texto.\nn%\nNome\ndo circuito na p\u00e1gina\n% p\nN\u00famero de p\u00e1gina\n%\nP\nTotal de p\u00e1ginas\n%%\nUm \u00fanico sinal ('%')\nGirar para ajustar:\nSe estiver assinalada, ir\u00e1 o Logisim rotacionar\ncada circuito em 90 graus, quando o circuito for\nmuito grande para\ncaber a p\u00e1gina, e n\u00e3o precisar ser escalado para menor, se puder ser girado em\n90 graus.\nPr\u00e9via da impress\u00e3o:\nSe quiser usar\n\" pr\u00e9via da impress\u00e3o \" antes de imprimir\nos circuitos.\nAp\u00f3s clicar em OK, o Logisim ir\u00e1 mostrar a configura\u00e7\u00e3o da p\u00e1gina padr\u00e3o\nem uma caixa de di\u00e1logo antes de imprimir os circuitos."
  },
  {
    "id": 30,
    "title": "O menu Editar",
    "url": "/pt/html/guide/menu/edit.html",
    "text": "O menu Editar\nO menu Editar\nDesfazer\nXX\nDesfazer a a\u00e7\u00e3o executada mais recentemente que afetar\u00e1 a forma como o\ncircuito ser\u00e1 salvo em arquivo. Notar que isso n\u00e3o incluir\u00e1 mudan\u00e7as no estado\ndo circuito (como acontece com as manipula\u00e7\u00f5es executadas pela ferramenta Testar (Poke).\nRecortar\nRemover os componentes atualmente selecionados a partir do circuito para a\n\u00e1rea de transfer\u00eancia do Logisim.\nNota:\nA \u00e1rea da transfer\u00eancia do Logisim \u00e9 mantida em separado\nda \u00e1rea que serve o sistema global; como resultado, recortar, copiar e\ncolar n\u00e3o ir\u00e3o funcionar em diferentes aplica\u00e7\u00f5es, incluindo at\u00e9 mesmo outras\nque estejam executando c\u00f3pias do Logisim. Se, no entanto, voc\u00ea tiver outros\nprojetos abertos no \u00e2mbito do mesmo processo Logisim, ent\u00e3o voc\u00ea ser\u00e1\ncapaz de copiar, recortar e colar entre eles.\nCopiar\nCopiar os componentes selecionados atualmente no circuito para\n\u00e1rea de transfer\u00eancia do Logisim.\n(Ver nota do menu Recortar acima.)\nColar\nColar os componentes da \u00e1rea de transfer\u00eancia do Logisim segundo\na sele\u00e7\u00e3o atual.\n(Ver nota no item do menu Recortar).\nQuando voc\u00ea colar os componentes, isso n\u00e3o ser\u00e1 imediatamente realizado,\nem vez disso, eles ser\u00e3o desenhados em cinza claro. Eles, na verdade,\nn\u00e3o ser\u00e3o \"efetivados\" no circuito at\u00e9 que voc\u00ea mova a sele\u00e7\u00e3o, ou\na altere para que os componentes n\u00e3o estejam mais nela.\nA raz\u00e3o para esse comportamento estranho \u00e9 o seguinte: para ser coerente com\nseu pr\u00f3prio comportamento, o Logisim dever\u00e1 imediatamente mesclar quaisquer conex\u00f5es\nt\u00e3o logo sejam inseridas em um circuito; isso mudaria processo de fus\u00e3o das\nconex\u00f5es j\u00e1 existentes. Quando voc\u00ea colar as conex\u00f5es transferidas, no entanto,\nvoc\u00ea poder\u00e1 coloc\u00e1-las em um local diferente, e evitar a mudan\u00e7a inerente ao processo\nde fus\u00e3o que for contra a sua vontade.\nExcluir\nRemover todos os componentes da sele\u00e7\u00e3o atual do circuito,\nsem modificar a \u00e1rea de transfer\u00eancia.\nDuplicar\nCriar uma c\u00f3pia de todos os componentes na sele\u00e7\u00e3o atual. Isso \u00e9 como\nselecionar, copiar e colar, exceto que a duplica\u00e7\u00e3o n\u00e3o ir\u00e1 modificar ou usar\na \u00e1rea de transfer\u00eancia.\nSelecionar tudo\nSelecionar todos os componentes do circuito.\nElevar a sele\u00e7\u00e3o\nDispon\u00edvel somente durante a edi\u00e7\u00e3o como deve ser a apar\u00eancia de um circuito,\nesse item de menu elevar\u00e1 o(s) objeto(s) selecionado(s) a ser(em) desenhado(s)\nsobre outro quando houver sobreposi\u00e7\u00f5es. Se o objeto selecionado for sobreposto por\noutros, ele ser\u00e1 elevado apenas sobre o que estiver mais por baixo;\nselecionar o item de menu repetidamente at\u00e9 ficar na ordem que desejar.\n(Determinar se dois objetos arbitr\u00e1rios se sobrep\u00f5em \u00e9 dif\u00edcil. O Logisim usa\num algoritmo de sele\u00e7\u00e3o de v\u00e1rios pontos aleat\u00f3rios em cada um dos dois objetos,\ne verifica se algum ponto pertence tamb\u00e9m ao outro objeto. \u00c0s vezes, ele poder\u00e1\ndeixar de detectar alguma sobreposi\u00e7\u00e3o se essa for pequena - digamos, menos de 5% de\num dos objetos.)\nBaixar a sele\u00e7\u00e3o\nDispon\u00edvel apenas ao editar a apar\u00eancia de um circuito, esse item de menu\nbaixar\u00e1 o(s) objeto(s) selecionado(s) a ser(em) desenhado(s) sob outro, quando houver\nsobreposi\u00e7\u00f5es. Se houver v\u00e1rias sobreposi\u00e7\u00f5es, ela s\u00f3 abaixar\u00e1 em rela\u00e7\u00e3o ao mais\nelevado; selecionar o item de menu v\u00e1rias vezes at\u00e9 ficar na ordem que desejar.\nElevar ao topo\nDispon\u00edvel apenas ao editar a apar\u00eancia de um circuito, esse item de menu\nelevar\u00e1 o(s) objeto(s) selecionado(s) a ser(em) desenhados acima de todos os outros\n(A \u00e2ncora e as portas s\u00e3o exce\u00e7\u00f5es. - Elas estar\u00e3o sempre no topo.)\nBaixar ao fundo\nDispon\u00edvel apenas ao editar a apar\u00eancia de um circuito, esse item de menu\nabaixar\u00e1 o(s) objeto(s) selecionado(s) para que todos os outros objetos sejam desenhados\npor cima dele(s).\nAdicionar v\u00e9rtice\nDispon\u00edvel apenas na edi\u00e7\u00e3o apar\u00eancia de um circuito, e um ponto tenha sido\nselecionado em uma linha, poligonal ou pol\u00edgono, esse item de menu inserir\u00e1 um novo\nv\u00e9rtice para a forma. Anterior \u00e0 inser\u00e7\u00e3o, o ponto selecionado ser\u00e1 desenhado como um\nlosango.\nRemover v\u00e9rtice\nDispon\u00edvel apenas na edi\u00e7\u00e3o apar\u00eancia de um circuito, e um v\u00e9rtice j\u00e1\nexistente tenha sido selecionado em uma poligonal ou pol\u00edgono, esse item de menu\nremover\u00e1 o v\u00e9rtice selecionado. Anterior \u00e0 exclus\u00e3o, o v\u00e9rtice selecionado ser\u00e1\ndesenhado como um losango dentro do quadrado que o representar. O Logisim n\u00e3o\npermitir\u00e1 remo\u00e7\u00e3o de um v\u00e9rtice de um pol\u00edgono com apenas tr\u00eas v\u00e9rtices, ou em\numa poligonal com apenas dois v\u00e9rtices."
  },
  {
    "id": 31,
    "title": "O menu Projeto",
    "url": "/pt/html/guide/menu/project.html",
    "text": "O menu Projeto (Project)\nO menu Projeto (Project)\nAdicionar Circuito ... (Add Circuit ...)\nAdicionar um novo circuito para o projeto atual.\nLogisim ir\u00e1 requerer o nome do novo circuito.\nO nome n\u00e3o dever\u00e1 coincidir com o de outros circuitos existentes no projeto.\nCarregar Biblioteca (Load Library)\nhref=\"../attrlib/explore.html\"> Carregar uma biblioteca\npara o\nprojeto. Voc\u00ea poder\u00e1 carregar tr\u00eas tipos de bibliotecas, como explicado\nem outras partes do\nGuia do Usu\u00e1rio.\nDecarregar Bibliotecas ... (Unload Libraries ...)\nDescarregar bibliotecas atualmente no projeto.\nO Logisim n\u00e3o permitir\u00e1 que voc\u00ea descarregue bibliotecas em uso,\nincluindo aquelas cujos componentes que aparecerem em quaisquer circuitos do projeto,\nbem como aquelas com itens que aparecerem na barra de ferramentas ou\nque estiverem mapeados para o mouse.\nMover Circuito Para Cima (Move Circuit Up)\nMover o circuito exibido atualmente uma posi\u00e7\u00e3o para cima na lista de\ncircuitos do projeto, como mostrado no painel do Explorer.\nMover Circuito Para Baixo (Move Circuit Down)\nMover o circuito exibido atualmente uma posi\u00e7\u00e3o para baixo na lista de\ncircuitos do projeto, como mostrado no painel do Explorer.\nDefinir Como Circuito Principal (Set As Main Circuit)\nDefinir o circuito a ser exibido no momento como\ncircuito principal\ndo projeto. (Esse item de menu ficar\u00e1 cinza se o circuito atual for o principal.)\nIsso significa que ele ser\u00e1 o circuito a aparecer primeiro quando o arquivo do projeto\nfor aberto.\nRestaurar Forma Padr\u00e3o (Revert To Default Appearance)\nSe a forma (apar\u00eancia) do circuito tiver sido editada, esse item de menu ir\u00e1 restaurar\na forma padr\u00e3o para o ret\u00e2ngulo com entalhe.\nO item de menu ser\u00e1 ativado somente quando houver edi\u00e7\u00e3o da forma (apar\u00eancia) do circuito.\nVer Ferramentas\nAlterar o painel do explorador para exibir uma lista dos circuitos do projeto\ne as bibliotecas que tiverem sido carregadas.\nVer Simula\u00e7\u00e3o\nAlterar o painel do explorador para exibir a hierarquia dos subcircuitos\nna simula\u00e7\u00e3o corrente.\nEditar Layout do Circuito (Edit Circuit Layout)\nPermitir editar o layout dos componentes que\ndeterminam como o circuito trabalha. Isso \u00e9 o que o programa faz ao iniciar-se,\ne como voc\u00ea provavelmente ir\u00e1 editar layouts de circuitos na maioria das vezes\nusando o pr\u00f3prio Logisim, esse item de menu normalmente estar\u00e1 desativado.\nEditar Forma do Circuito (Edit Circuit Appearance)\nPermitir editar o circuito que estiver representado\nquando ele \u00e9 usado como um subcircuito dentro de outro.\nPor padr\u00e3o, o circuito ser\u00e1 representado por um ret\u00e2ngulo com um\nentalhe cinza\nem sua face norte, mas essa op\u00e7\u00e3o de menu lhe permitir\u00e1 desenhar uma forma (apar\u00eancia)\ndiferente para o subcircuito.\nRemover Circuito (Remove Circuit)\nRemover o circuito do projeto em exibi\u00e7\u00e3o.\nO Logisim ir\u00e1 impedir a remo\u00e7\u00e3o de circuitos estejam em uso como subcircuitos,\nbem como imped\u00ed-lo de retirar o \u00faltimo circuito de um projeto.\nAnalisar Circuito (Analyze Circuit)\nComputar a tabela-verdade e express\u00f5es l\u00f3gicas correspondentes\nao circuito, exibindo-as na janela\nAn\u00e1lise Combinat\u00f3ria.\nO processo de an\u00e1lise s\u00f3 ser\u00e1 v\u00e1lido para circuitos combinacionais.\nUma descri\u00e7\u00e3o completa do processo de an\u00e1lise \u00e9 descrita na se\u00e7\u00e3o\nAn\u00e1lise Combinat\u00f3ria.\nObter Estat\u00edsticas Do Circuito (Get Circuit Statistics)\nMostrar janela contendo as estat\u00edsticas sobre os componentes utilizados pelo\ncircuito atual. O di\u00e1logo ter\u00e1 uma tabela com cinco colunas:\nComponente: O nome do componente\nBiblioteca: O nome da biblioteca de origem do componente\nSimples: O n\u00famero de vezes que o componente aparecer diretamente no circuito visto .\nExclusivas: O n\u00famero de vezes que o componente aparecer na hierarquia do circuito,\nononde cada subcircuito dentro da hierarquia ser\u00e1 contabilizado apenas uma vez.\nRecursivas: O n\u00famero de vezes que o componente aparecer na hierarquia do circuito,\nononde cada subcircuito ser\u00e1 contado quantas vezes aparecer na hierarquia.\nA distin\u00e7\u00e3o entre\nexclusivas e\nrecursivas \u00e9 mais f\u00e1cil de se\nexplicar considerando o multiplexador 4:1 constru\u00eddo com tr\u00eas multiplexadores 2:1\ncomo na se\u00e7\u00e3o\nUsando subcircuitos\n.\nO multiplexador 2:1 cont\u00e9m duas portas AND (e o circuito 4:1, nenhuma),\nsendo que a contagem\nexclusiva de portas AND seria 2,\nmas se voc\u00ea fosse construir o multiplexador 4:1 utilizando esse\ndiagrama, voc\u00ea realmente precisaria de 2 portas AND para cada um dos\ntr\u00eas multiplexadores 2:1, assim a contagem\nrecursiva seria 6.\nSe voc\u00ea usar circuitos de uma biblioteca Logisim, os componentes ser\u00e3o\nconsiderado\ncaixas pretas : o conte\u00fado dos circuitos da biblioteca n\u00e3o ser\u00e3o\nusados na contagem original e recursiva.\nMostrar Barra De Projeto (Show Project Toolbar)\nQuando selecionado, esse item de menu mostrar\u00e1 uma pequena barra de ferramentas\nacima do painel Explorer, permitindo que o usu\u00e1rio tenha f\u00e1cil acesso aos itens\nadicionar, renomear, reordenar e remover circuitos em um projeto.\nA barra de ferramentas tamb\u00e9m oferecer\u00e1 suporte a altern\u00e2ncia entre\na edi\u00e7\u00e3o de layout e a apar\u00eancia do circuito.\nOp\u00e7\u00f5es ... (Options ...)\nAbrir a janela Op\u00e7\u00f5es de Projeto."
  },
  {
    "id": 32,
    "title": "O menu Simular",
    "url": "/pt/html/guide/menu/simulate.html",
    "text": "O menu Simular (Simulate)\nO menu Simular (Simulate)\nSimula\u00e7\u00e3o ativada\nSe marcada, os circuitos ser\u00e3o vistos \"ao vivo\". Isso \u00e9, os\nvalores de propaga\u00e7\u00e3o atrav\u00e9s do circuito ser\u00e3o atualizado a cada\nteste ou altera\u00e7\u00e3o no circuito.\nA op\u00e7\u00e3o ser\u00e1 automaticamente desmarcada se\noscila\u00e7\u00e3o no circuito\nfor\ndetectada.\nReiniciar simula\u00e7\u00e3o (Reset Simulation)\nLimpar tudo sobre o estado atual do circuito, de modo que\nser\u00e1 como se voc\u00ea tivesse acabado de abrir o arquivo novamente. Se voc\u00ea estiver vendo\no estado de um subcircuito, a hierarquia inteira ser\u00e1 eliminada.\nSimula\u00e7\u00e3o passo-a-passo (Step Simulation)\nAvan\u00e7ar a simula\u00e7\u00e3o um passo \u00e0 frente. Por exemplo, um sinal pode acabar\nentrando em uma porta durante uma etapa, mas a porta n\u00e3o ir\u00e1 mostrar um sinal diferente\nat\u00e9 o pr\u00f3ximo passo da simula\u00e7\u00e3o. Para ajudar a identificar quais pontos mudaram no\ncircuito em geral, todos os pontos cujos valores forem modificados ser\u00e3o\nindicados por um c\u00edrculo azul; se um subcircuito contiver todos os seus pontos\nalterados (ou em seus subcircuitos, recursivamente), ent\u00e3o ele ser\u00e1 desenhado\ncom um contorno azul.\nIr para estado (Go Out To State)\nQuando voc\u00ea\ndesviar para um estado de um\nsubcircuito , atrav\u00e9s do menu pop-up, a op\u00e7\u00e3o\nIr para estado\nlistar\u00e1 os circuitos acima daquele em foco. Se selecionar um deles,\no circuito correspondente ser\u00e1 mostrado.\nSeguir a partir do Estado (Go In To State)\nSe voc\u00ea j\u00e1 entrou em um estado de subcircuito e depois desviou-se\npara fora, esse submenu listar\u00e1 os subcircuitos subjacentes aos atuais.\nSe selecionar um deles, o circuito correspondente ser\u00e1 mostrado.\nPulso unit\u00e1rio (Tick Once)\nExecutar um passo na simula\u00e7\u00e3o. Isso pode ser \u00fatil\nquando voc\u00ea acionar o clock manualmente, em especial quando ele estiver\nem circuito diferente daquele que estiver sendo visto.\nPulsos ativados (Ticks Enabled)\nIniciar automaticamente altern\u00e2ncias do clock. Isso ter\u00e1 efeito\nsomente se o circuito contiver dispositivos do tipo clock (na biblioteca Base).\nA op\u00e7\u00e3o \u00e9 desabilitada por padr\u00e3o.\nFrequ\u00eancia de pulso (Tick Frequency)\nSelecionar com que frequ\u00eancia ocorrer\u00e3o as altern\u00e2ncias do clock.\nPor exemplo, 8 Hz significa que as varia\u00e7\u00f5es ocorrer\u00e3o oito vezes por segundo.\nUm pulso (tick) \u00e9 a unidade b\u00e1sica de medida para a velocidade do clock.\nNotar que a velocidade do clock ser\u00e1 menor do que a dos ciclos:\na varia\u00e7\u00e3o mais r\u00e1pida do clock dever\u00e1 passar por um ciclo em n\u00edvel alto\ne outro em n\u00edvel baixo; esse clock teria um per\u00edodo de 4 Hz enquanto a\naltern\u00e2ncia de ciclos ocorrer ocorrem em 8 Hz.\nRegistro ...\nEntrar no\nm\u00f3dulo Registro, o que\nfacilitar\u00e1 o anotar e guardar valores automaticamente em um circuito a medida\nem que a simula\u00e7\u00e3o avan\u00e7ar."
  },
  {
    "id": 33,
    "title": "Os menus Janela e Ajuda",
    "url": "/pt/html/guide/menu/winhelp.html",
    "text": "Menus Janela (Window) e Ajuda (Help)\nMenu Janela (Window)\nMinimizar (Minimize)\nMinimizar a janela atual.\nMaximizar (Maximize)\n( Zoom\nno MacOS)\nRedimensionar a janela atual para tamanho de sua prefer\u00eancia.\nAn\u00e1lise Combinacional\nMostrar a janela\nAn\u00e1lise Combinacional\ncorrente, sem alterar qualquer conte\u00fado.\nT\u00edtulos de janela individual\nTrazer a janela respectiva para o foco.\nMenu Ajuda (Help)\nTutorial\nAbrir o sistema de ajuda na se\u00e7\u00e3o\n\" Tutorial para o principiante \" do\nGuia para ser um usu\u00e1rio do Logisim\n.\nGuia do usu\u00e1rio\nAbrir o sistema de ajuda no\nGuia para ser um usu\u00e1rio do Logisim\n.\nBiblioteca de Refer\u00eancia\nAbrir o sistema de ajuda na\nBiblioteca de Refer\u00eancia\n.\nSobre ...\nExibir uma janela contendo o n\u00famero da vers\u00e3o, bem como a tela de\napresenta\u00e7\u00e3o.\n(Em MacOS, esse item ficar\u00e1 no menu do Logisim.)"
  },
  {
    "id": 34,
    "title": "Componentes de mem\u00f3ria",
    "url": "/pt/html/guide/mem/index.html",
    "text": "Componentes de mem\u00f3ria\nbgcolor=\"FFFFFF\">\nComponentes de mem\u00f3ria\nOs componentes RAM e ROM s\u00e3o dois dos tipos mais \u00fateis de\ncomponentes nas bibliotecas predefinidas no Logisim. No entanto, devido ao\nvolume de informa\u00e7\u00f5es que poder\u00e3o armazenar, eles ser\u00e3o tamb\u00e9m dois\ndos componentes mais complexos.\nA documenta\u00e7\u00e3o sobre como eles funcionam dentro de um circuito poder\u00e1\nser encontrada em\nRAM\ne\nROM\np\u00e1ginas de\nBiblioteca de Refer\u00eancia . Esta se\u00e7\u00e3o do\nGuia do usu\u00e1rio\nexplicar\u00e1 a interface que lhe permitir\u00e1 visualizar e editar o conte\u00fado da mem\u00f3ria.\nTestar mem\u00f3ria\nMenus pop-up e arquivos\nEditor hexadecimal integrado do Logisim"
  },
  {
    "id": 35,
    "title": "Para testar mem\u00f3ria",
    "url": "/pt/html/guide/mem/poke.html",
    "text": "Testar mem\u00f3ria\nTestar mem\u00f3ria\nVoc\u00ea poder\u00e1 manipular o conte\u00fado da mem\u00f3ria usando a ferramenta Testar (Poke),\nmas a interface para isso \u00e9 severamente limitada por restri\u00e7\u00f5es de espa\u00e7o:\nPor mais que a simples edi\u00e7\u00e3o, voc\u00ea provavelmente ir\u00e1\nachar o editor hexadecimal integrado\nmuito mais\nconveniente.\nNo entanto, para visualizar e editar os valores dentro do circuito,\na ferramenta Testar (Poke) tem dois modos de opera\u00e7\u00e3o:\nvoc\u00ea poder\u00e1 editar o endere\u00e7o exibido, e tamb\u00e9m poder\u00e1 editar um valor individual.\nPara editar o endere\u00e7o exibido, clicar fora do ret\u00e2ngulo mostrado.\nO Logisim ir\u00e1 desenhar um ret\u00e2ngulo vermelho em torno do endere\u00e7o.\nSe entrar com d\u00edgitos hexadecimais ir\u00e1 mudar o endere\u00e7o de acordo.\nSe digitar a tecla Enter ir\u00e1 rolar para baixo uma linha.\nSe digitar a tecla Backspace ir\u00e1 rolar uma linha para cima.\nSe digitar a barra de espa\u00e7o ir\u00e1 rolar uma p\u00e1gina (quatro linhas).\nPara editar determinado conte\u00fado, clicar no valor dentro do\nret\u00e2ngulo mostrado. Logisim ir\u00e1 desenhar um ret\u00e2ngulo vermelho em torno desse endere\u00e7o.\nSe entrar com d\u00edgitos hexadecimais ir\u00e1 mudar o valor do endere\u00e7o atual de acordo.\nSe apertar a tecla Enter ir\u00e1 editar o valor mostrado logo abaixo\n(uma linha para baixo).\nSe apertar a tecla Backspace ir\u00e1 editar o valor na endere\u00e7o anterior.\nSe apertar a barra de espa\u00e7o ir\u00e1 editar o valor no endere\u00e7o seguinte."
  },
  {
    "id": 36,
    "title": "Menus pop-up e arquivos",
    "url": "/pt/html/guide/mem/menu.html",
    "text": "Menus pop-up e arquivos\nMenus pop-up e arquivos\nO menu pop-up para a mem\u00f3ria inclui quatro op\u00e7\u00f5es al\u00e9m\ndas op\u00e7\u00f5es comuns a todos os componentes:\nEditar conte\u00fado: Abrir um editor hexadecimal para editar o conte\u00fado\nde mem\u00f3ria.\nLimpar conte\u00fado: Redefinir todos os valores na mem\u00f3ria como 0\nCarregar imagem...: Redefinir todos os valores na mem\u00f3ria com base em valores\nencontrados em um arquivo usando o formato descrito abaixo.\nSalvar imagem...: Armazenar todos os valores na mem\u00f3ria em um arquivo usando\no formato descrito abaixo.\nO formato de arquivo usado para arquivos de imagem \u00e9 intencionalmente simples;\nisso lhe permitir\u00e1 escrever um programa, como um montador, que\ngerar\u00e1 imagens de conte\u00fados que poder\u00e3o ser carregados na mem\u00f3ria.\nComo exemplo desse formato de arquivo, se tivermos uma mem\u00f3ria de 256-bytes cujos\ncinco primeiros bytes de 2, 3, 0, 20, e -1, e todos os valores subsequentes\nforem 0, a imagem em arquivo texto teria o seguinte conte\u00fado:\nv2.0 raw\n02\n03\n00\n14\nff\nA primeira linha identifica o formato de arquivo usado (atualmente, s\u00f3 existe\num formato de arquivo reconhecido). Valores subsequentes listados em\nhexadecimal, a partir de endere\u00e7o 0. Voc\u00ea poder\u00e1 colocar v\u00e1rios desses\nem uma mesma linha. Se houver mais posi\u00e7\u00f5es de mem\u00f3ria que as identificadas\nno arquivo, o Logisim ir\u00e1 carregar 0 nessas outras posi\u00e7\u00f5es.\nO arquivo de imagem poder\u00e1 usar codifica\u00e7\u00e3o do tipo run-length. Por exemplo,\nao inv\u00e9s de listar o valor\n00 dezesseis vezes em sequ\u00eancia, o arquivo\npoder\u00e1 incluir\n16*00. Alerto que o n\u00famero de repeti\u00e7\u00f5es \u00e9 escrito em base 10.\nArquivos produzidos pelo Logisim usar\u00e3o essa codifica\u00e7\u00e3o para todos os casos com\npelo menos quatro valores.\nVoc\u00ea poder\u00e1 colocar coment\u00e1rios no arquivo usando o s\u00edmbolo '#'. Todos os caracteres\nna linha a partir do s\u00edmbolo \"#\" ser\u00e3o ignorado pelo Logisim."
  },
  {
    "id": 37,
    "title": "Editor hexadecimal",
    "url": "/pt/html/guide/mem/hex.html",
    "text": "Editor hexadecimal\nEditor hexadecimal\nO Logisim inclui um editor hexadecimal integrado para visualizar e editar\no conte\u00fado da mem\u00f3ria. Para acess\u00e1-lo, basta abrir um menu pop-up para\no componente de mem\u00f3ria e selecionar Editar conte\u00fado...\nPara componentes ROM, cujo conte\u00fado de mem\u00f3ria faz parte do\nvalor do atributo, voc\u00ea tamb\u00e9m poder\u00e1 acessar o editor hexadecimal ao clicar\no valor do atributo correspondente.\nOs n\u00fameros em it\u00e1lico \u00e0 esquerda mostram endere\u00e7os de mem\u00f3ria,\nescritos em hexadecimal. Os outros n\u00fameros exibem valores\na partir desse endere\u00e7o de mem\u00f3ria, o editor hexadecimal poder\u00e1 exibir\nquatro, oito ou dezesseis valores por linha, dependendo do que couber\nna janela. Para ajudar a contar, cada grupo de quatro valores\nter\u00e1 um espa\u00e7o maior entre eles.\nVoc\u00ea poder\u00e1 navegar atrav\u00e9s de mem\u00f3ria usando a barra de rolagem, ou\nusando o teclado (as teclas de setas, home, end, page up e\np\u00e1gina para baixo). Escrever caracteres hexadecimais alterar\u00e1 o\nvalor selecionado.\nVoc\u00ea poder\u00e1 selecionar um intervalo de valores, arrastando o mouse,\ncom shift-click do mouse, ou navegando atrav\u00e9s de mem\u00f3ria com\no teclado, enquanto pressionar a tecla shift. Os valores poder\u00e3o ser\ncopiados e colados usando o menu Editar; a \u00e1rea de transfer\u00eancia tamb\u00e9m poder\u00e1 ser\nusada em outras aplica\u00e7\u00f5es."
  },
  {
    "id": 38,
    "title": "Registro",
    "url": "/pt/html/guide/log/index.html",
    "text": "Registro\nRegistro\nAo testar um circuito maior, e para documentar seu comportamento,\num registro poder\u00e1 ser guardado. Essa \u00e9 a finalidade do m\u00f3dulo de registro do Logisim,\nque lhe permitir\u00e1 selecionar os componentes cujos valores dever\u00e3o ser registrados,\nopcionalmente, voc\u00ea poder\u00e1 especificar um arquivo onde o registro dever\u00e1 ser colocado.\nNota:\nO m\u00f3dulo de registro est\u00e1 em fase alfa, e poder\u00e1\napresentar defeitos, bem como estar sujeito a altera\u00e7\u00f5es significativas no futuro.\nEnquanto relat\u00f3rios de bugs e sugest\u00f5es s\u00e3o bem-vindos para todos os casos,\neles ser\u00e3o particularmente bem-vindos a respeito desse recurso relativamente novo.\nSe voc\u00ea n\u00e3o enviar coment\u00e1rios, ent\u00e3o ele provavelmente n\u00e3o sofrer\u00e1 altera\u00e7\u00f5es.\nVoc\u00ea poder\u00e1 entrar no m\u00f3dulo atrav\u00e9s da op\u00e7\u00e3o Registro (Logging)...\nno menu Simular (Simulate). Ela abrir\u00e1 uma janela com tr\u00eas guias.\nVamos discutir cada uma dessas guias separadamente.\nA guia Sele\u00e7\u00e3o\nA guia Tabela\nA guia Arquivo\nCada projeto tem apenas uma janela de registro; quando voc\u00ea alternar\npara a visualiza\u00e7\u00e3o de outro circuito dentro do projeto, haver\u00e1 troca de janelas,\ne automaticamente o foco ir\u00e1 mudar para o outro circuito. Ou seja, ele far\u00e1\nisso a menos que voc\u00ea esteja\nmovendo para cima ou\npara baixo dentro da mesma simula\u00e7\u00e3o , caso em que o m\u00f3dulo de registro n\u00e3o\nir\u00e1 se alterar.\nObserve que, quando as op\u00e7\u00f5es de m\u00f3dulo de registro mudarem para outra\nsimula\u00e7\u00e3o, ela deixar\u00e1 de gravar qualquer registro em arquivo. Se voc\u00ea alternar\nde volta para a simula\u00e7\u00e3o novamente, ele ir\u00e1 se lembrar da configura\u00e7\u00e3o para\na simula\u00e7\u00e3o anterior, mas voc\u00ea ter\u00e1 que reativar o registro manualmente."
  },
  {
    "id": 39,
    "title": "A aba Sele\u00e7\u00e3o",
    "url": "/pt/html/guide/log/selection.html",
    "text": "A guia Sele\u00e7\u00e3o (Selection)\nA guia Sele\u00e7\u00e3o (Selection)\nA guia Sele\u00e7\u00e3o permite selecionar que valores dever\u00e3o ser inclu\u00eddos no registro.\nA janela abaixo corresponde ao seguinte circuito.\nA guia est\u00e1 dividida em tr\u00eas \u00e1reas verticais. A primeira (mais \u00e0 esquerda) \u00e9\numa lista de todos os componentes no circuito cujos valores poder\u00e3o ser registrados.\nEntre as bibliotecas predefinidas, os seguintes tipos de componentes t\u00eam suporte\npara registro:\nBiblioteca Conex\u00e3o: componentes Pino (Pin), Ponta de Prova (Probe) e Clock\nBiblioteca E/S: componentes Bot\u00e3o (Button) e LED\nBiblioteca Mem\u00f3ria: todos os componentes, exceto ROM\nPara os componentes que tenham r\u00f3tulos a eles associados, seus nomes corresponder\u00e3o\na esses r\u00f3tulos; outros nomes poder\u00e3o especificar seu tipo e sua localiza\u00e7\u00e3o dentro\ndo circuito.\nQuaisquer subcircuitos que aparecerem na lista, n\u00e3o poder\u00e3o ser selecionados\npara registro, mas os componentes eleg\u00edveis dentro deles poder\u00e3o ser.\nObservar que o componente RAM exige a escolha de quais endere\u00e7os da mem\u00f3ria dever\u00e3o\nser registrados, mas lhe permitir\u00e1 registrar apenas os 256 primeiros endere\u00e7os.\nA \u00faltima \u00e1rea vertical (\u00e0 direita) enumera os componentes que foram selecionados.\nAl\u00e9m disso, indicar\u00e1 em que base os valores do componente multibit ser\u00e3o registrados,\na base n\u00e3o tem um efeito significativo sobre valores de um bit s\u00f3.\nA coluna do meio permitir\u00e1 a manipula\u00e7\u00e3o dos itens dentro da sele\u00e7\u00e3o.\nAcrescentar\nadicionar\u00e1 um ou mais itens escolhidos \u00e0 esquerda\nna sele\u00e7\u00e3o.\nAlterar Base\nmudar\u00e1 a base atual para componente selecionado\nentre 2 (bin\u00e1rio), 10 (decimal), e 16 (hexadecimal).\nMover para cima\ndeslocar\u00e1 o componente que estiver selecionado\npara a cima uma posi\u00e7\u00e3o.\nMover para baixo\ndeslocar\u00e1 o componente que estiver selecionado\npara baixo uma posi\u00e7\u00e3o.\nRemover\napagar\u00e1 o componente que estiver selecionado."
  },
  {
    "id": 40,
    "title": "A aba Tabela",
    "url": "/pt/html/guide/log/table.html",
    "text": "A guia Tabela (Table)\nA guia Tabela (Table)\nA guia Tabela exibe o registro atual graficamente.\nA tabela cont\u00e9m uma coluna para cada componente na sele\u00e7\u00e3o.\nCada linha da tabela apresenta um instant\u00e2neo da simula\u00e7\u00e3o ap\u00f3s\nas propaga\u00e7\u00f5es de valores terem sido conclu\u00eddas.\nAs linhas duplicadas n\u00e3o ser\u00e3o adicionadas ao registro.\nNotar que apenas as 400 linhas mais recentes ser\u00e3o exibidas.\nAlgumas linhas poder\u00e3o ter entradas vazias, se o componente\nque lhes corresponder n\u00e3o estiver na sele\u00e7\u00e3o no momento\nem que a linha for computada.\nO quadro apresentado \u00e9 apenas para ilustra\u00e7\u00e3o. Ele n\u00e3o \u00e9 interativo."
  },
  {
    "id": 41,
    "title": "A aba Arquivo",
    "url": "/pt/html/guide/log/file.html",
    "text": "A guia Arquivos (File)\nA guia Arquivos (File)\nA guia Arquivo (File) permitir\u00e1 que voc\u00ea especifique onde o registro dever\u00e1\nser colocado.\nNa parte superior h\u00e1 um indicador se existir registro em andamento e\num bot\u00e3o para ativ\u00e1-lo ou desativ\u00e1-lo. (Note que voc\u00ea n\u00e3o poder\u00e1 habilit\u00e1-lo\nat\u00e9 que um arquivo seja selecionado mais abaixo.) Um bot\u00e3o lhe permitir\u00e1\nsuspender e reiniciar grava\u00e7\u00f5es no arquivo. Quando voc\u00ea escolher a janela do projeto\npara a visualiza\u00e7\u00e3o outra simula\u00e7\u00e3o, o arquivo de registros ir\u00e1 parar automaticamente\ne, se voc\u00ea retornar ao original, e quiser continuar a registrar, voc\u00ea precisar\u00e1\nreativar a grava\u00e7\u00e3o manualmente utilizando o bot\u00e3o na parte superior.\nNo meio, h\u00e1 um indicador do que est\u00e1 sendo gravado no arquivo. Para\nalter\u00e1-lo, deve-se usar o bot\u00e3o Selecionar (Select). Ao fazer isso, a grava\u00e7\u00e3o\nser\u00e1 iniciada automaticamente. Se voc\u00ea selecionar um arquivo pr\u00e9-existente, o Logisim\nperguntar\u00e1 se voc\u00ea deseja substituir o arquivo ou acrescentar novos\nregistros ao seu final.\nNa parte inferior voc\u00ea poder\u00e1 controlar se uma linha de cabe\u00e7alho dever\u00e1\nser colocada no arquivo para indicar quais itens estar\u00e3o na sele\u00e7\u00e3o. Se linhas de\ncabe\u00e7alho forem adicionadas, ent\u00e3o, uma nova linha de cabe\u00e7alho tamb\u00e9m ser\u00e1 colocada\nno arquivo sempre que a sele\u00e7\u00e3o for alterada.\nFormato de arquivo\nAs entradas ser\u00e3o colocadas no arquivo em formato delimitado por tabula\u00e7\u00f5es\ncorrespondentes o mais pr\u00f3ximo poss\u00edvel do que aparecer sob a guia Tabela. (Uma\ndiferen\u00e7a \u00e9 que todas as linhas de cabe\u00e7alho ir\u00e3o fornecer o caminho completo\npara os componentes em subcircuitos.) O formato \u00e9 intencionalmente simples,\nde modo que voc\u00ea poder\u00e1 submet\u00ea-lo a outro programa para ser processado, como um\nscript Python/Perl ou um gerenciador de planilhas.\nAssim um script poder\u00e1 processar o arquivo, ao mesmo tempo em que o Logisim\nestiver em execu\u00e7\u00e3o, liberando novos registros para o disco a cada\n500 ms. Note-se que Logisim tamb\u00e9m poder\u00e1 fechar intermitentemente e depois\nreabrir o arquivo durante a simula\u00e7\u00e3o, especialmente se alguns segundos\ndecorrerem sem que qualquer novo registro tenha sido adicionado."
  },
  {
    "id": 42,
    "title": "Verifica\u00e7\u00e3o por linha de comando",
    "url": "/pt/html/guide/verify/index.html",
    "text": "Verifica\u00e7\u00e3o pela linha de comando\nVerifica\u00e7\u00e3o pela linha de comando\nSubse\u00e7\u00f5es:\nSubstituir bibliotecas\nOutras op\u00e7\u00f5es para verifica\u00e7\u00e3o\nTestar m\u00faltiplos arquivos\nO Logisim inclui suporte b\u00e1sico para a execu\u00e7\u00e3o de circuitos a partir\nda linha de comando.\nIsso destina-se tanto para ajudar a verifica\u00e7\u00e3o orientada de projetos de circuitos,\nquanto para que instrutores realizem testes automatizados em solu\u00e7\u00f5es feitas por alunos.\nVamos come\u00e7ar por mostrar como executar um circuito pela linha de comando.\nPara o nosso exemplo, vamos supor que tenhamos constru\u00eddo o circuito a seguir\nem um arquivo chamado\nadder-test.circ.\nEle utilizar\u00e1 um somador de dois bits como um subcircuito\ne iterar\u00e1 atrav\u00e9s de um contador com todas as 16 poss\u00edveis entradas para ele.\nAp\u00f3s esse circuito ter sido constru\u00eddo, executaremos a linha de comando do Logisim,\nfornecendo o nome do projeto e a op\u00e7\u00e3o -tty\nop\u00e7\u00e3o com o par\u00e2metro table.\njava -jar logisim-filename.jar adder-test.circ -tty table\nSem abrir qualquer janela, o Logisim carregar\u00e1 o circuito e come\u00e7ar\u00e1 a execut\u00e1-lo,\nvariando qualquer clock t\u00e3o r\u00e1pido quanto poss\u00edvel at\u00e9 concluir a propaga\u00e7\u00e3o\nentre cada instante.\nAp\u00f3s cada propaga\u00e7\u00e3o ter sido conclu\u00edda, o Logisim carregar\u00e1 os valores atuais dos\npinos de sa\u00edda; caso tenham mudado na propaga\u00e7\u00e3o anterior,\nos valores ser\u00e3o exibidos em formato delimitado por tabula\u00e7\u00f5es.\nSe houver um pino de sa\u00edda marcado com a palavra especial\nhalt ,\nsua sa\u00edda n\u00e3o ser\u00e1 exibida - mas uma vez que o valor do pino chegue a 1, depois\nque uma propaga\u00e7\u00e3o for conclu\u00edda, o Logisim terminar\u00e1 a simula\u00e7\u00e3o.\nPara o nosso exemplo, o Logisim mostrar\u00e1 a tabela abaixo.\nPor termos dois pinos de sa\u00edda correspondentes \u00e0s duas entradas\na\ne\nb\npara o somador de dois bits, essas sa\u00eddas ser\u00e3o inclu\u00eddas como\nas duas primeiras colunas da sa\u00edda.\nE como h\u00e1 outro pino de sa\u00edda correspondente no somador de dois bits, por isso,\nhaver\u00e1 uma terceira coluna.\nAs colunas ser\u00e3o ordenadas da esquerda para a direita de acordo com a ordem\nde cima para baixo dentro do circuito.\n00\n00\n000\n01\n00\n001\n10\n00\n010\n11\n00\n011\n00\n01\n001\n01\n01\n010\n10\n01\n011\n11\n01\n100\n00\n10\n010\n01\n10\n011\n10\n10\n100\n11\n10\n101\n00\n11\n011\n01\n11\n100\n10\n11\n101\n11\n11\n110"
  },
  {
    "id": 43,
    "title": "Para substituir bibliotecas",
    "url": "/pt/html/guide/verify/sub.html",
    "text": "Substituir bibliotecas\nSubstituir bibliotecas\nAgora suponha que tenhamos dois circuitos do Logisim que deveriam fazer a mesma coisa.\nComo instrutor, voc\u00ea poderia ter pedido aos seus alunos conclu\u00edrem uma tarefa.\nVoc\u00ea tem um arquivo que cont\u00e9m sua solu\u00e7\u00e3o, mas tamb\u00e9m v\u00e1rios arquivos de alunos\ncontendo seus trabalhos. Talvez a tarefa tenha sido construir um somador de dois bits.\nImaginarei dois arquivos, chamados\nadder-master.circ\ne\nadder-query.circ. Cada arquivo conter\u00e1 um circuito chamado\n2-bit adder\n(\u00e9 importante que o circuito para teste seja chamado\nexatamente igual), cuja apar\u00eancia poder\u00e1 ser a seguinte.\nadder-master.circ\nadder-query.circ\nComo voc\u00ea poder\u00e1 ver, o circuito principal usar\u00e1 o somador predefinido no Logisim,\nenquanto o circuito para teste usar\u00e1 dois subcircuitos representando uma meia-soma e\numa soma-completa (os quais ser\u00e3o constitu\u00eddos apenas por portas simples).\nPara os fins do nosso exemplo, o circuito para teste ter\u00e1 um erro est\u00fapido:\nO carry da meia-soma n\u00e3o estar\u00e1 conectado \u00e0 soma completa.\nN\u00f3s constru\u00edremos o nosso circuito de teste em um arquivo diferente.\nL\u00e1, carregaremos\nadder-master.circ\ncomo uma biblioteca do Logisim\n(Projeto > Carregar Biblioteca > Biblioteca do Logisim ...), e inserir seu\nsomador de 2 bits como um subcircuito. N\u00f3s poder\u00edamos executar esse circuito\ndiretamente para obter a sa\u00edda desejada para uma solu\u00e7\u00e3o perfeita.\njava\u00a0-jar\u00a0logisim-filename.jar\u00a0adder-test.circ\u00a0-tty\u00a0table\nMas queremos executar o circuito usando\nadder-query.circ\nao inv\u00e9s de\nadder-master.circ\ncomo o da biblioteca carregada.\nA abordagem ing\u00eanua seria abrir Logisim e carregar essa biblioteca de uma vez;\nou voc\u00ea poder\u00e1 simplesmente remover o\nadder-master.circ\ne renomear\nadder-query.circ\npara ser chamado de\nadder-master.circ\nem vez disso.\nMas Logisim inclui uma pr\u00e1tica op\u00e7\u00e3o\nsub\nque substituir\u00e1\ntemporariamente um arquivo por outro durante a sess\u00e3o - sem fazer quaisquer\naltera\u00e7\u00f5es em disco.\njava\u00a0-jar\u00a0logisim-filename.jar\u00a0adder-test.circ\u00a0-tty\u00a0table\u00a0-sub\u00a0adder-master.circ\u00a0adder-query.circ\nA sa\u00edda que voc\u00ea iria ver a partir disso \u00e9 mostrada abaixo, naturalmente \u00e9 diferente\ndaquela vista na\nse\u00e7\u00e3o anterior j\u00e1 que agora ser\u00e1 a\nexecu\u00e7\u00e3o usando o\nadder-query.circ\nerrado.\n00\n00\n0E0\n01\n00\n0E1\n10\n00\nEE0\n11\n00\nEE1\n00\n01\n0E1\n01\n01\n0E0\n10\n01\nEE1\n11\n01\nEE0\n00\n10\nEE0\n01\n10\nEE1\n10\n10\n1E0\n11\n10\n1E1\n00\n11\nEE1\n01\n11\nEE0\n10\n11\n1E1\n11\n11\n1E0"
  },
  {
    "id": 44,
    "title": "Outras op\u00e7\u00f5es para verifica\u00e7\u00e3o",
    "url": "/pt/html/guide/verify/other.html",
    "text": "Outras op\u00e7\u00f5es para verifica\u00e7\u00e3o\nOutras op\u00e7\u00f5es para verifica\u00e7\u00e3o\nExistem algumas op\u00e7\u00f5es adicionais relacionadas com a execu\u00e7\u00e3o pela linha de comandos.\nO par\u00e2metro\n-load\nna linha de comando\nUm circuito mais complexo poder\u00e1 incluir um componente de mem\u00f3ria RAM que precisar\u00e1\nser carregado com um programa para que o circuito possa us\u00e1-lo.\nVoc\u00ea poder\u00e1 especificar um arquivo de imagem da mem\u00f3ria na linha de comando,\nque ser\u00e1 carregado em qualquer componente de RAM no circuito antes da simula\u00e7\u00e3o come\u00e7ar.\n(Isso n\u00e3o funcionar\u00e1 quando se carregar a interface gr\u00e1fica - s\u00f3 servir\u00e1 para a\nexecu\u00e7\u00e3o de linha de comando.)\njava -jar logisim-filename.jar cpu.circ -tty table -load mem-image.txt\nA ordem dos par\u00e2metros n\u00e3o \u00e9 importante (exceto para o par\u00e2metro\ntable\nque dever\u00e1 ser imediatamente ap\u00f3s -tty , e o nome do arquivo de imagem da\nmem\u00f3ria que dever\u00e1 ser logo ap\u00f3s -load ).\nO arquivo de imagem dever\u00e1 estar no\nformato de imagem da\nmem\u00f3ria do Logisim .\nO Logisim pesquisar\u00e1 pela RAM recursivamente, de modo que esse continuar\u00e1 a\nfuncionar mesmo se a RAM estiver embutida em um subcircuito.\nN\u00e3o h\u00e1 maneira alguma, no entanto, de distinguir diferentes componentes do tipo RAM:\no Logisim ir\u00e1 tentar carregar o mesmo arquivo em todas as RAMs que puder encontrar.\nOp\u00e7\u00f5es para o par\u00e2metro -tty\nEm nossos exemplos at\u00e9 agora, sempre usamos tabela -tty\u00a0table\npara indicar que uma tabela de valores de sa\u00edda dever\u00e1 ser exibida. Voc\u00ea poder\u00e1\npersonalizar o comportamento de outras formas, listando uma ou mais op\u00e7\u00f5es,\nseparados por v\u00edrgulas. Por exemplo, voc\u00ea poder\u00e1 escrever\n-tty\u00a0table,halt,speed,\ne o programa ir\u00e1 executar todas os tr\u00eas comportamentos listados abaixo.\n(A ordem em que est\u00e3o listados n\u00e3o importa.)\nhalt\nAp\u00f3s a simula\u00e7\u00e3o terminar, aparecer\u00e1 uma mensagem de uma linha\nexplicando porque a simula\u00e7\u00e3o terminou. Condi\u00e7\u00f5es de erro - como uma oscila\u00e7\u00e3o detectada -\nser\u00e3o exibidas em qualquer caso.\nspeed\nSe voc\u00ea usar essa op\u00e7\u00e3o em conjunto com\n-tty\n,\nem seguida, depois que completar a simula\u00e7\u00e3o o Logisim ir\u00e1 exibir um resumo de\nqu\u00e3o r\u00e1pido o circuito foi simulado, tal como:\n714 Hz (509 ticks in 712 milliseconds)\nObservar que a exibi\u00e7\u00e3o de informa\u00e7\u00f5es durante a simula\u00e7\u00e3o\nfar\u00e1 a simula\u00e7\u00e3o ser muito mais lento. Como apenas uma compara\u00e7\u00e3o,\npara o mesmo circuito e imagem funcionou acima de 714 Hz com a op\u00e7\u00e3o\nspeed\ne apenas a 490 Hz com a op\u00e7\u00e3o table tamb\u00e9m.\nstatistics\nMostrar uma tabela delimitada por tabula\u00e7\u00f5es contendo dados estat\u00edsticos\nsobre os componentes utilizados pelo circuito\nprincipal\nno projeto.\nA tabela inclui quatro colunas:\nExclusiva: O n\u00famero de vezes que o componente aparecer na hierarquia do circuito,\nonde cada subcircuito dentro da hierarquia ser\u00e1 contabilizado apenas uma vez.\nRecursiva: O n\u00famero de vezes que o componente aparecer na hierarquia do circuito,\nonde contamos cada subcircuito quantas vezes ele aparecer na hierarquia.\nComponente: O nome do componente\nBiblioteca: O nome da biblioteca a partir do qual o componente veio\nA distin\u00e7\u00e3o entre\nexclusiva\ne\nrecursiva\ntamb\u00e9m est\u00e1 explicada\nna se\u00e7\u00e3o\nmenu de Projeto\n.\nSe o arquivo utilizar circuitos de uma biblioteca carregada do Logisim,\nos componentes ser\u00e3o considerado\ncaixas pretas : o conte\u00fado dos circuitos\nda biblioteca n\u00e3o ser\u00e3o inclu\u00eddos na contagem exclusiva ou recursiva.\n(Esse recurso pode ser \u00fatil para os instrutores que pe\u00e7am aos alunos para criar\nprojetos com um subconjunto de bibliotecas de Logisim.)\ntable\n(j\u00e1 visto)\ntty\nQuaisquer componentes TTY enviar\u00e3o suas sa\u00edda para a tela (sa\u00edda padr\u00e3o),\ne todas as informa\u00e7\u00f5es digitadas no teclado ser\u00e3o enviadas para todos os\nequivalentes no circuito.\nEsses componentes ser\u00e3o inclu\u00eddos, mesmo que sejam profundamente aninhados\n\u00e0 hierarquia do subcircuito."
  },
  {
    "id": 45,
    "title": "Para testar v\u00e1rios arquivos",
    "url": "/pt/html/guide/verify/multi.html",
    "text": "Testar m\u00faltiplos arquivos\nTestar m\u00faltiplos arquivos\nEm um exemplo de sala de aula, voc\u00ea poder\u00e1 ter v\u00e1rios arquivos que deseje testar\na equival\u00eancia, e voc\u00ea pode n\u00e3o querer ler as sa\u00eddas para cada uma das solu\u00e7\u00f5es do aluno.\nConstruir compara\u00e7\u00f5es de circuito\nUma abordagem \u00e9 a construir um circuito para testes que far\u00e1 a compara\u00e7\u00e3o direta.\nCriaremos um circuito adicional no arquivo para testes que conter\u00e1\nnosso circuito com a solu\u00e7\u00e3o. Nosso circuito de teste global, incluir\u00e1 o\nsubcircuito\nadder-master.circ\ne o subcircuio com solu\u00e7\u00e3o\nacoplados em um mesmo circuito. Conex\u00f5es ser\u00e3o feitas para que haja\napenas uma sa\u00edda, que ser\u00e1 1, quando os dois subcircuitos concordarem.\nAgora podemos simplesmente executar o Logisim substituindo cada arquivo de consulta.\nPara qualquer solu\u00e7\u00e3o correta, haver\u00e1 uma \u00fanica sa\u00edda igual a\n1 .\nUsar redirecionamento e \"shell scripts\"\nSe voc\u00ea estiver completamente confort\u00e1vel com a linha de comando,\nvoc\u00ea poder\u00e1 construir seu pr\u00f3prio shell script para fazer isso.\nAqui, vamos usar o redirecionamento (o operador>) para salvar a sa\u00edda de cada\ncircuito em um arquivo.\nPor exemplo, poder\u00edamos emitir os seguintes comandos para coletar a sa\u00edda\ndo circuito principal e do circuito de consulta.\njava\u00a0-jar\u00a0logisim-filename.jar\u00a0adder-test.circ\u00a0-tty\u00a0table\u00a0>\u00a0output-master.txt\njava\u00a0-jar\u00a0logisim-filename.jar\u00a0adder-test.circ\u00a0-tty\u00a0table\u00a0-sub\u00a0adder-master.circ\u00a0adder-query.circ\u00a0>\u00a0output-query.txt\nAgora teremos criado dois arquivos diferentes.\nPoderemos ent\u00e3o comparar os dois arquivos de sa\u00edda usando um programa constru\u00eddo para esse fim.\nEm Linux ou MacOS X, voc\u00ea poder\u00e1 usar o\ncmp\nou\ndiff\nutilit\u00e1rios de linha de comando. No Windows, voc\u00ea poder\u00e1 usar o WinMerge.\nPara processar v\u00e1rios arquivos de consulta, voc\u00ea poder\u00e1 construir um programa simples\ncomo um\nscript shell para percorrer cada um e comparar o resultado.\nAqui est\u00e1 como eu faria isso no Linux com\nbash\nRUN_TEST=\"java\u00a0-jar\u00a0logisim-filename.jar\u00a0adder-test.circ\u00a0-tty\u00a0table\"\n${RUN_TEST}\u00a0>\u00a0output-master.txt\nfor\u00a0QUERY_FILE\u00a0in\u00a0adder-query*.circ\ndo\nif\u00a0${RUN_TEST}\u00a0-sub\u00a0adder-master.circ\u00a0${QUERY_FILE}\u00a0|\u00a0cmp\u00a0-s\u00a0output-master.txt\nthen\necho\u00a0\"${QUERY_FILE}\u00a0OK\"\nelse\necho\u00a0\"${QUERY_FILE}\u00a0different\"\nfi\ndone"
  },
  {
    "id": 46,
    "title": "Prefer\u00eancias para a aplica\u00e7\u00e3o",
    "url": "/pt/html/guide/prefs/index.html",
    "text": "Prefer\u00eancias da aplica\u00e7\u00e3o\nPrefer\u00eancias da aplica\u00e7\u00e3o\nLogisim oferece dois tipos de op\u00e7\u00f5es para configura\u00e7\u00e3o:\nprefer\u00eancias para aplica\u00e7\u00e3o\ne\nop\u00e7\u00f5es para projeto .\nAs prefer\u00eancias para a aplica\u00e7\u00e3o abrangem todas os projetos abertos,\nenquanto as op\u00e7\u00f5es para projeto s\u00e3o espec\u00edficas para um projeto apenas.\nEsta se\u00e7\u00e3o apresentar\u00e1 as prefer\u00eancias para a aplica\u00e7\u00e3o;\nop\u00e7\u00f5es para projeto\nser\u00e3o descritas em outra\nse\u00e7\u00e3o.\nVoc\u00ea poder\u00e1 visualizar e editar as prefer\u00eancias para a aplica\u00e7\u00e3o atrav\u00e9s de\nPrefer\u00eancias ... op\u00e7\u00e3o no menu Arquivo (File) (ou, no Mac OS, no menu do Logisim),\nque far\u00e1 aparecer uma janela com v\u00e1rias guias. Apresentaremos essas guias\nseparadamente, e ent\u00e3o veremos como as prefer\u00eancias poder\u00e3o ser configuradas\na partir da linha de comando.\nA guia Gabarito\nA guia Internacional\nA guia Janela\nA guia Layout\nA guia Experimental\nA linha de comando"
  },
  {
    "id": 47,
    "title": "A aba Gabarito",
    "url": "/pt/html/guide/prefs/template.html",
    "text": "A guia Gabarito\nA guia Gabarito\nUm\ngabarito\n\u00e9 um arquivo do Logisim que ser\u00e1 usado como\nponto de partida (modelo) para se criar um novo projeto. Al\u00e9m disso,\nse voc\u00ea tiver um arquivo Logisim com um ambiente particularmente configurado,\nvoc\u00ea poder\u00e1 \"redefinir\" esse ambiente, utilizando o bot\u00e3o para restaurar o\nmodelo na janela de edi\u00e7\u00e3o das op\u00e7\u00f5es de projeto.\nEmbora os gabaritos sejam \u00fateis em outras situa\u00e7\u00f5es tamb\u00e9m, eles s\u00e3o\nparticularmente adequados para uso em sala de aula, onde um instrutor queira\ndistribuir um modelo para os alunos come\u00e7arem a trabalhar a partir dele. Isso \u00e9\nparticularmente prov\u00e1vel se a turma j\u00e1 usar o Logisim intensivamente, incluindo\nmuitos dos recursos mais avan\u00e7ados, caso em que o padr\u00e3o simples\nde configura\u00e7\u00e3o pode ser simples demais. Os gabaritos tamb\u00e9m podem ser \u00fateis em\nsala de aula quando o professor quiser abrir um arquivo enviado por\num aluno que tenha configurado o ambiente de forma mais significativa.\nPor padr\u00e3o, a op\u00e7\u00e3o \"Plain Template\" estar\u00e1 selecionada,\nutilizando o modelo padr\u00e3o que acompanha o Logisim. Se voc\u00ea quiser um\nconfigura\u00e7\u00e3o mais limpa, voc\u00ea poder\u00e1 escolher um \"gabarito vazio\".\nMas se voc\u00ea quiser designar um outro arquivo para usar como modelo,\nselecione-o atrav\u00e9s do bot\u00e3o Selecionar (Select)... e, em seguida, escolha o\na op\u00e7\u00e3o \"Gabarito personalizado\" op\u00e7\u00e3o."
  },
  {
    "id": 48,
    "title": "A aba Internacional",
    "url": "/pt/html/guide/prefs/intl.html",
    "text": "A guia International\nA guia International\nEssa guia oferece op\u00e7\u00f5es que permitem ao Logisim ser usado de acordo\ncom prefer\u00eancias regionais.\nForma da porta (Gate Shape):\no Logisim oferece tr\u00eas padr\u00f5es para portas:\nshaped, rectangular, e\nDIN 40700 .\nA tabela a seguir ilustrar\u00e1 a distin\u00e7\u00e3o.\nShaped\nRetangular\nDIN 40700\nAND\nOR\nO estilo shaped tende a ser mais popular nos EUA, enquanto o estilo\nrectangular tende a ser mais popular na Europa, algumas pessoas se referem ao\nesses estilos de acordo com essas regi\u00f5es, por isso os termos neutros\nshaped\ne\nrectangular\ntem sido os preferidos.\nA norma DIN 40700 foi um padr\u00e3o para a elabora\u00e7\u00e3o de componentes electr\u00f4nicos\ndigitais e anal\u00f3gicos, adotada pela DIN, uma organiza\u00e7\u00e3o para padr\u00f5es alem\u00e3es.\nA DIN adotou a norma retangular para componentes digitais em 1976, mas alguns\nos engenheiros continuam a usar o estilo mais antigo, mas isso parece ser\ncada vez mais raro.\nO Logisim n\u00e3o segue estritamente nenhuma norma, ele procura usar um meio\ntermo para permitir altern\u00e2ncia entre eles. Em particular, as portas em formato\nconvencional s\u00e3o mais quadradas que as dimens\u00f5es definidas pelos relevantes\npadr\u00f5es IEEE. E, apesar das portas XOR e XNOR devessem ser da mesma\nlargura, assim como as portas OR e NOR fossem mais retangulares, elas n\u00e3o o s\u00e3o\ndevido a dificuldades na compacta\u00e7\u00e3o da porta XOR convencional.\nIdioma:\nAlternar entre idiomas. A vers\u00e3o atual \u00e9 fornecida para os idiomas\ningl\u00eas, espanhol, russo, alem\u00e3o e portugu\u00eas.\nA tradu\u00e7\u00e3o para o\nalem\u00e3o\nfoi introduzida na vers\u00e3o 2.6.1 do Logisim e\ncontinua atual. Feita por Uwe Zimmermann, um membro do corpo docente da Universidade\nde Uppsala, na Su\u00e9cia.\nA tradu\u00e7\u00e3o para o\ngrego\nfoi introduzida na vers\u00e3o Logisim 2.7.0 e\ncontinua atual. Feita por Thanos Kakarountas, um membro do Technological Educational\nInstitute das Ilhas Ionian na Gr\u00e9cia.\nA tradu\u00e7\u00e3o para o\nportugu\u00eas\nfoi introduzida na vers\u00e3o 2.6.2 e continua\natual. Feita por Theldo Cruz Franqueira, um membro docente da Pontif\u00edcia Universidade\nCat\u00f3lica de Minas Gerais no Brasil.\nA tradu\u00e7\u00e3o para o\nrusso\nfoi introduzida na vers\u00e3o 2.4.0 do Logisim\ne continua atual. Feita por Ilia Lilov, da R\u00fassia.\nA tradu\u00e7\u00e3o para o\nespanhol\nestava completa na vers\u00e3o 2.1.0 do Logisim,\nmas vers\u00f5es posteriores Logisim acrescentaram novas op\u00e7\u00f5es que permanecem sem tradu\u00e7\u00e3o.\nA contribui\u00e7\u00e3o foi feita por Pablo Leal Ramos, da Espanha.\nTradu\u00e7\u00f5es do Logisim para outras l\u00ednguas s\u00e3o bem-vindas! Se voc\u00ea\nestiver interessado, contacte-me, Carl Burch. Isso n\u00e3o ser\u00e1 um compromisso.\nFicarei feliz em ouvir de seu interesse, e eu lhe direi\nse souber de algu\u00e9m que j\u00e1 esteja lidando com isso;\nprepararei uma vers\u00e3o para voc\u00ea trabalhar, e lhe enviarei instru\u00e7\u00f5es.\nO processo de tradu\u00e7\u00e3o n\u00e3o requer uma compreens\u00e3o de Java.\nSubstituir caracteres acentuados:\nAlgumas plataformas t\u00eam pouco apoio para caracteres (como\n\u00f1 ou \u00f6), que n\u00e3o aparecem dentre os caracteres ASCII de 7 bits.\nQuando isso for verificado, o Logisim ir\u00e1 substituir todas as inst\u00e2ncias da\ncaracteres com o equivalente adequado em caracteres ASCII de 7 bits.\nA op\u00e7\u00e3o estar\u00e1 desativada quando o idioma corrente n\u00e3o contiver\nqualquer equivalente dispon\u00edvel (como em ingl\u00eas)."
  },
  {
    "id": 49,
    "title": "A aba Janela",
    "url": "/en/html/guide/prefs/window.html",
    "text": "The Window tab\nThe Window tab\nThis tab includes preferences affecting the appearance of the main window used\nfor Logisim.\nShow tick rate: If checked, then when ticks are enabled, Logisim\ndisplays a measurement of the rate at which it has been able to complete ticks.\nThe tick rate is measured by averaging over the previous 1,000 ticks.\n(Disabling ticks or changing the maximum tick rate will clear its history.)\nThis actual tick rate may be much less than the selected tick rate, because\nLogisim cannot simulate larger circuits at a very fast rate. For example,\nLogisim's maximum speed for a\nreasonably large circuit might be 16 Hz; you can select a faster tick rate,\nbut the actual speed will not exceed 16 Hz.\nToolbar location: This drop-down menu configures the location of\nthe toolbar within the overall window. The toolbar may be placed\non any of the window's four borders, described as north, south,\neast, and west. It may also be hidden, or it can be placed \"down the\nmiddle\" - that is, to the left of the canvas but to the right of\nthe explorer pane and attribute table."
  },
  {
    "id": 50,
    "title": "A aba Layout",
    "url": "/en/html/guide/prefs/layout.html",
    "text": "The Layout tab\nThe Layout tab\nThis tab includes preferences affecting\nthe behavior of the circuit layout editor.\nPrinter view: Specifies whether\nto display the circuit on the screen in the same way it is displayed\nthrough the printer. Normally this is off, and Logisim displays the on-screen\ncircuit with indications of the current circuit state, and it displays some\nhints about component interface (most notably, it draws legs on OR\ngates to indicate where they would connect). The printer view, though,\nomits indications of state, and it omits such interface hints.\nShow attribute halo: Specifies whether to draw the pale teal oval\naround the component or tool whose attributes are currently displayed in\nthe attribute table.\nShow component tips: Specifies\nwhether to display the \"tool tips\" that will temporarily appear when\nthe mouse hovers over components supporting them. For example, if you hover\nover a subcircuit component's pin, it will display the label of the\ncorresponding pin within the subcircuit. Hovering over one of the\nends of a splitter will tell you the bits to which that end corresponds.\nIn addition, all components in the Plexers, Arithmetic, and Memory libraries will\nprovide information about their inputs and outputs via tips.\nKeep connections while moving: Indicates whether\nLogisim should add new wires when components are moved\nto preserve their connections. By default this is on \u2014 though it can\nbe turned off temporarily by pressing the shift key while moving the components.\nIf this box is unchecked, then the default will be not to add wires during a move\n\u2014 though you can turn it on temporarily by pressing the shift key during the move.\nShow Ghosts while adding: When checked, and when a tool for adding\na new component is selected, a light-gray outline of a component to be added\nis drawn as the mouse moves across the canvas. For example, if you select\nthe AND gate tool and move the mouse into the window (without\npressing the mouse's button), a gray outline of an AND gate will display\nwhere the AND gate will appear when the mouse is clicked.\nAfter adding component: By default, after adding each individual\ncomponent, Logisim switches back to the Edit Tool to allow you to move\ncomponents around and to add wires. The drop-down box allows you to change this\nbehavior so that Logisim stays at the same tool for adding more of the same\ncomponent, until you yourself opt to choose the Edit Tool. (This was Logisim's\ndefault behavior prior to Logisim 2.3.0. While more intuitive, this behavior\nrequires more mouse movement to switch between tools.)\nFirst radix when wire poked:\nConfigures how values are displayed when a wire is clicked using the Poke Tool.\nClicking a wire displays temporarily the value, staying until the user clicks\nelsewhere in the circuit.\nSecond radix when wire poked:\nConfigures the second part of how wire values are displayed."
  },
  {
    "id": 51,
    "title": "A aba Experimental",
    "url": "/pt/html/guide/prefs/exp.html",
    "text": "A guia Experimental\nA guia Experimental\nEssas prefer\u00eancias servem para habilitar recursos considerados experimentais,\ninseridos com o intuito de receber retorno dos usu\u00e1rios.\nAcelera\u00e7\u00e3o gr\u00e1fica:\nV\u00e1rios usu\u00e1rios relataram que o\nLogisim parece bastante lento na renderiza\u00e7\u00e3o gr\u00e1fica. Um usu\u00e1rio notou\nque a adi\u00e7\u00e3o de -Dsun.java2d.d3d = true\nna linha de comando pareceu\nresolver isso. Voc\u00ea poder\u00e1 tentar controlar isso usando um\nmenu drop-down. Eu mesmo n\u00e3o observei tais problemas com a velocidade\nem Logisim, por isso n\u00e3o posso avaliar a sua efic\u00e1cia; confiarei nos relat\u00f3rios\ndos usu\u00e1rios sobre se isso servir\u00e1 como ajuda. Notar certamente n\u00e3o ter\u00e1\nqualquer efeito at\u00e9 o Logisim seja reiniciado."
  },
  {
    "id": 52,
    "title": "A linha de comando",
    "url": "/pt/html/guide/prefs/cmdline.html",
    "text": "Op\u00e7\u00f5es para a linha de comandos\nOp\u00e7\u00f5es para a linha de comandos\nVoc\u00ea poder\u00e1 configurar as prefer\u00eancias do Logisim atrav\u00e9s de op\u00e7\u00f5es da linha\nde comando. Isso pode ser particularmente \u00fatil em um laborat\u00f3rio de\ncomputadores onde voc\u00ea queira que o Logisim inicie sempre da mesma forma\npara todos os alunos, independente da forma como tenham sido usados\ne configurados anteriormente.\nA sintaxe de linha de comando-geral \u00e9 a seguinte.\njava-jar\njarFileName\n[op\u00e7\u00f5es]\n[nomes]\nOs arquivos adicionais cujos nomes estiverem chamados na linha de comando ser\u00e3o\nabertos em janelas separadas dentro do Logisim.\nO exemplo a seguir iniciar\u00e1 Logisim em sua configura\u00e7\u00e3o b\u00e1sica.\njava-jar\njarFileName\n-plain -gates shaped -locale en\nAs op\u00e7\u00f5es oferecidas incluem:\n-plain\n-empty\n-template\ntemplateFile\nE servem para configurar o gabarito para o Logisim usar.\n-gates [ shaped\n| rectangular\n]\nServe para configura que tipo de portas ser\u00e1 usado.\nlocale LocaleIdentifier\nServe para configurar o idioma para o uso. Assim como este documento, os\nidiomas dispon\u00edveis s\u00e3o:\nde\nAlem\u00e3o\nen\nIngl\u00eas\nes\nEspanhol\npt\nPortugu\u00eas (Brasil)\nru\nRusso\n-accents\n[ yes\n|\nno ]\nEsse \u00e9 apenas relevante para as l\u00ednguas que usam caracteres\nfora do conjunto de caracteres ASCII de 7 bits, o que inclui\nidiomas com caracteres acentuados, e n\u00e3o seria o caso do Ingl\u00eas.\nSe no, os caracteres fora do conjunto de caracteres ASCII de 7 bits\nser\u00e3o substitu\u00eddos por equivalentes adequados \u00e0 linguagem;\nisso seria \u00fatil para as combina\u00e7\u00f5es Java/SO onde esses caracteres tamb\u00e9m\nn\u00e3o forem dispon\u00edveis.\n-nosplash\nServe para ocultar a tela de apresenta\u00e7\u00e3o inicial do Logisim.\n-help\nServe para exibir um resumo das op\u00e7\u00f5es de linha de comando.\n-version\nServe para exibir o n\u00famero da vers\u00e3o do Logisim."
  },
  {
    "id": 53,
    "title": "Op\u00e7\u00f5es de projeto",
    "url": "/pt/html/guide/opts/index.html",
    "text": "Op\u00e7\u00f5es de projeto\nOp\u00e7\u00f5es de projeto\nO Logisim oferece dois tipos de op\u00e7\u00f5es de configura\u00e7\u00e3o:\nprefer\u00eancias de aplica\u00e7\u00e3o\ne\nop\u00e7\u00f5es projeto .\nAs prefer\u00eancias do aplicativo abrangem todos os projetos abertos,\nenquanto as op\u00e7\u00f5es de projeto s\u00e3o espec\u00edficas para que um projeto apenas.\nEsta se\u00e7\u00e3o discutir\u00e1 as op\u00e7\u00f5es de projeto;\nprefer\u00eancias da aplica\u00e7\u00e3o\nser\u00e3o descritas em outra\nse\u00e7\u00e3o.\nVoc\u00ea poder\u00e1 visualizar e editar as op\u00e7\u00f5es de projeto atrav\u00e9s de \"Op\u00e7\u00f5es ...\nno menu de projeto. A janela Op\u00e7\u00f5es tem quatro guias.\nApresentaremos cada uma dessas guias separadamente.\nA guia Simula\u00e7\u00e3o\nA guia Barra de Ferramentas\nO guia Mouse\nNa parte inferior da janela est\u00e1 o bot\u00e3o para restaurar ao modelo\ndo gabarito. Quando clicado, todas as op\u00e7\u00f5es e altera\u00e7\u00f5es nos atributos de ferramenta\nvoltar\u00e3o \u00e0s defini\u00e7\u00f5es do gabarito atual (tal como selecionado no \u00e2mbito das\nprefer\u00eancias da aplica\u00e7\u00e3o ).\nA aba Simula\u00e7\u00e3o."
  },
  {
    "id": 54,
    "title": "A aba Simula\u00e7\u00e3o",
    "url": "/pt/html/guide/opts/simulate.html",
    "text": "A guia Simula\u00e7\u00e3o (Simulation)\nA guia Simula\u00e7\u00e3o (Simulation)\nA guia de simula\u00e7\u00e3o permite configurar o algoritmo usado para\nsimula\u00e7\u00e3o de circuitos. Esses par\u00e2metros s\u00e3o aplic\u00e1veis a todos os circuitos\nque estejam simulados na mesma janela, mesmo que os circuitos estejam em outras\nbibliotecas carregadas pelo projeto.\nAs\nItera\u00e7\u00f5es At\u00e9 Oscila\u00e7\u00e3o\nserve para especificar\npor quanto tempo dever\u00e1 simular um circuito antes de decidir que \u00e9 oscilante.\nO n\u00famero representa a quantidade de cliques no rel\u00f3gio interno oculto\n(um porta simples, leva apenas um clique). O valor padr\u00e3o 1000 \u00e9 suficiente para\nquase todos os fins, inclusive para os circuitos de grande porte. Mas voc\u00ea\npoder\u00e1 aumentar o n\u00famero de itera\u00e7\u00f5es, caso estiver trabalhando com um\ncircuito onde o Logisim reporte oscila\u00e7\u00f5es falsas. \u00c9 pouco prov\u00e1vel que isso seja\num problema na pr\u00e1tica; uma dessas circunst\u00e2ncias \u00e9 a de um circuito que incorpora\nmuitos latches que podem travar quando a op\u00e7\u00e3o ru\u00eddo aleat\u00f3rio \u00e9 habilitada.\nVoc\u00ea poder\u00e1 querer diminuir o n\u00famero de itera\u00e7\u00f5es, se estiver trabalhando com um\ncircuito que \u00e9 propenso a oscilar e estiver usando um processador extremamente lento.\nA\nSa\u00edda da Porta Quando Indefinida\nserve para configurar\ncomo as portas l\u00f3gicas internas se comportar\u00e3o quando algumas entradas n\u00e3o estiverem\nligadas ou forem flutuantes. Por padr\u00e3o, o Logisim ignora tais entradas, permitindo\numa porta trabalhar sobre menos entradas do que aquelas para as quais foi projetado.\nNo entanto, na vida real, uma porta ir\u00e1 se comportar imprevisivelmente em tal situa\u00e7\u00e3o,\ne por isso esse menu drop-down permitir\u00e1 que se mudem as portas para tratar\nas entradas desconectadas como erros.\nO\nAdicionar Ru\u00eddo Aos Atrasos de Componente\npermitir\u00e1 ativar ou desativar o ru\u00eddo aleat\u00f3rio a ser adicionado aos\natrasos de componentes. A simula\u00e7\u00e3o interna usa um rel\u00f3gio oculto para\nsua simula\u00e7\u00e3o, e para fornecer maior verossimilhan\u00e7a, cada\ncomponente (excluindo conex\u00f5es e distribuidores) tem um atraso entre o momento em que\nrecebe uma entrada e quando ele emitir\u00e1 uma sa\u00edda. Se esta op\u00e7\u00e3o for\nhabilitada, o Logisim ocasionalmente (uma vez a cada 16\nrea\u00e7\u00f5es do componente) far\u00e1 com que ele tenha um clique a mais que\nnormal. Essa aleatoriedade \u00e9 adicionada especificamente para se lidar com a trava\ncircuito (conforme abaixo): sem o ru\u00eddo aleat\u00f3rio, o circuito oscila,\numa vez que as duas portas v\u00e3o trabalhar em sintonia, mas com ru\u00eddo aleat\u00f3rio\nacrescentado, um porta finalmente ultrapassar\u00e1 a outra.\nRecomendo manter essa op\u00e7\u00e3o, j\u00e1 que esta t\u00e9cnica implica na introdu\u00e7\u00e3o de\nerros raros em circuitos normais."
  },
  {
    "id": 55,
    "title": "A aba Ferramentas",
    "url": "/pt/html/guide/opts/toolbar.html",
    "text": "A guia Barra de Tarefas (Toolbar)\nA guia Barra de Tarefas (Toolbar)\nEssa guia lhe permitir\u00e1 configurar que ferramentas devem aparecer na\na barra de ferramentas.\nNo lado esquerdo fica um explorador, listando todas as ferramentas dispon\u00edveis,\ne do lado direito localiza-se o conte\u00fado atual da barra de ferramentas.\n(\"---\" Tr\u00eas tra\u00e7os indicam um\nseparador , que \u00e9 desenhada com uma linha cinza).\nEntre o explorador e a lista est\u00e3o cinco bot\u00f5es e as op\u00e7\u00f5es:\nAdicionar Ferramenta\nserve para acrescentar a ferramenta\nselecionada ao explorador \u00e0 esquerda, ao seu final.\nAdicionar Separador\nserve para adicionar um separador\nao final da barra de ferramentas.\nMover Para Cima\nserve para mover o item selecionado\nda barra para cima/esquerda uma posi\u00e7\u00e3o.\nMover Para Baixo\nserve para mover o item selecionado\nda barra de baixo/direita uma posi\u00e7\u00e3o.\nRemover\nserve para apagar o item selecionado\nda barra de ferramentas.\nLocaliza\u00e7\u00e3o\nserve para configurar a posi\u00e7\u00e3o da\nbarra de ferramentas na janela global. A barra de ferramentas pode ser colocada\nem qualquer uma das quatro bordas da janela, descritas como norte, sul,\nleste e oeste. Tamb\u00e9m pode ficar oculta, ou poder\u00e1 ser colocada \"abaixo do\ncentro\" - isto \u00e9, \u00e0 esquerda da tela, mas \u00e0 direita do painel do explorador\ne a tabela de atributos.\nOs atributos associados \u00e0s ferramentas n\u00e3o ser\u00e3o exibidas nessa janela,\nem vez disso, voc\u00ea poder\u00e1 visualiz\u00e1-las e edit\u00e1-las no \u00e2mbito da janela principal."
  },
  {
    "id": 56,
    "title": "A aba Mouse",
    "url": "/pt/html/guide/opts/mouse.html",
    "text": "A guia Mouse\nA guia Mouse\nPor padr\u00e3o, quando voc\u00ea clicar com o mouse na \u00e1rea de desenho do Logisim,\na ferramenta selecionada no momento ser\u00e1 utilizada. Se voc\u00ea clicar com o bot\u00e3o\ndireito ou control-click, ele ir\u00e1 exibir um menu pop-up para o componente\nsob o mouse.\nO Logisim lhe permite modificar esse comportamento, aliviando-lhe a\nnecessidade de ir \u00e0 barra de ferramentas e/ou ao explorador o tempo todo.\n(Isto tamb\u00e9m poder\u00e1 ser \u00fatil se voc\u00ea for canhoto). Cada combina\u00e7\u00e3o de um\nbot\u00e3o do mouse e uma tecla modificadora (qualquer subconjunto de setas para deslocamento,\ncontrol e alt) poder\u00e1 ser mapeado para uma ferramenta diferente.\nA guia do mouse lhe permitir\u00e1 configurar esses mapeamentos.\nNo lado esquerdo est\u00e1 um explorador, onde voc\u00ea poder\u00e1 escolher a ferramenta\nque desejar mapear.\nNo lado superior direito est\u00e1 um ret\u00e2ngulo no qual voc\u00ea pode clicar\nusando a combina\u00e7\u00e3o do mouse. Por exemplo, se voc\u00ea pretende criar novas conex\u00f5es,\narrastando-as, em seguida, voc\u00ea dever\u00e1 primeiro selecionar a ferramenta Conex\u00f5es\n(Wiring) no explorador (na biblioteca Base) e ent\u00e3o fazer shift-click onde\nestiver \"Clicar usando uma combina\u00e7\u00e3o para mapear a ferramenta para conex\u00e3o\".\nSe essa combina\u00e7\u00e3o j\u00e1 estiver sendo usada, o mapeamento logo em seguida ser\u00e1\nsubstitu\u00eddo pela nova ferramenta.\nAbaixo desta \u00e1rea est\u00e1 uma lista dos mapeamentos correntes. Note-se que\ntodas as combina\u00e7\u00f5es que n\u00e3o estiverem listadas simplesmente usar\u00e3o a ferramenta\nselecionada.\nMais abaixo est\u00e1 o bot\u00e3o Remover, por meio do qual voc\u00ea poder\u00e1 excluir\no mapeamento que estiver atualmente selecionado na tabela acima dele. No\nfuturo, ent\u00e3o, que essa combina\u00e7\u00e3o de mouse seria mapeada para qualquer ferramenta\nque estiver selecionada na barra de ferramentas ou no painel de explorador.\nPor \u00faltimo est\u00e1 uma lista de atributos para a ferramenta selecionada\nno momento na lista de mapeamentos. Cada ferramenta de mapeamento de mouse tem\nseu pr\u00f3prio conjunto de atributos, diferentes daqueles utilizados no painel do\nexplorador e na barra de ferramentas. Voc\u00ea poder\u00e1 editar os valores de atributo ali."
  },
  {
    "id": 57,
    "title": "Propaga\u00e7\u00e3o de sinal",
    "url": "/pt/html/guide/prop/index.html",
    "text": "Propaga\u00e7\u00e3o de valor\nPropaga\u00e7\u00e3o de valor\nO algoritmo do Logisim para simular a propaga\u00e7\u00e3o de valores atrav\u00e9s\ncircuitos n\u00e3o \u00e9 algo com que voc\u00ea normalmente precise se preocupar. Basta\ndizer que o algoritmo \u00e9 sofisticado o suficiente para dar conta dos atrasos\nem portas, mas n\u00e3o \u00e9 realista o bastante para lidar com fen\u00f4menos mais\ncomplexos como varia\u00e7\u00f5es de voltagens ou condi\u00e7\u00f5es conflitantes.\nVoc\u00ea ainda quer saber mais?\nAtrasos de portas\nErros de oscila\u00e7\u00e3o\nDefici\u00eancias"
  },
  {
    "id": 58,
    "title": "Atrasos de portas",
    "url": "/pt/html/guide/prop/delays.html",
    "text": "Atrasos em porta (Gate delays)\nAtrasos em porta (Gate delays)\nComo um exemplo do n\u00edvel de sofistica\u00e7\u00e3o do algoritmo do Logisim,\nconsidere o circuito a seguir.\n\"Obviamente\" sempre ter\u00e1 sa\u00eddas em 0. Mas, na verdade, as portas n\u00e3o\nreagem instantaneamente \u00e0s suas entradas, e nem tampouco o Logisim.\nComo resultado, quando as entradas nesse circuito variam de 0 para 1, a\nporta AND brevemente ver\u00e1 duas entradas iguais a 1, e ir\u00e1 emitir um breve 1.\nVoc\u00ea n\u00e3o vai v\u00ea-lo na tela. Mas esse efeito \u00e9 percept\u00edvel quando se\nutilizar a sa\u00edda da porta AND como entrada de clock de um flip-flop\ntipo D.\nSe testar a entrada, variando de 0 para 1, isso levar\u00e1 a um valor instant\u00e2neo\nigual a 1 que ir\u00e1 para o flip-flop tipo D e, portanto,\no valor do flip-flop ir\u00e1 alternar cada vez que o circuito de entrada\nfor de 0 para 1.\nCada componente tem um atraso associado a ele. Componentes mais sofisticados\nconstru\u00eddos em Logisim tendem a ter atrasos maiores, mas esses atrasos s\u00e3o um tanto\narbitr\u00e1rios e podem n\u00e3o refletir a realidade.\nDo ponto de vista t\u00e9cnico, \u00e9 relativamente f\u00e1cil lidar com\nesse n\u00edvel de sofistica\u00e7\u00e3o em um \u00fanico circuito. Lidar com atrasos de porta\nem subcircuitos, por\u00e9m, \u00e9 um pouco mais complexo; o Logisim tem a pretens\u00e3o de\nabordar isso corretamente, colocando todos os valores primitivos de propaga\u00e7\u00e3o\ndo componente em uma programa\u00e7\u00e3o \u00fanica, independentemente do subcircuito em que o\ncomponente se encontrar.\n(Via a op\u00e7\u00e3o\nOp\u00e7\u00f5es de projeto\nna janela\nSimula\u00e7\u00e3o, voc\u00ea poder\u00e1 configurar o Logisim\npara adicionar um atraso aleat\u00f3rio, ocasional, para a propaga\u00e7\u00e3o de um componente.\nIsso tem o objetivo de simular a desigualdade de circuitos reais. Em particular, um\nlatch SR constru\u00eddo com duas portas NOR ir\u00e1 oscilar sem essa aleatoriedade,\nj\u00e1 que ambas as portas ir\u00e3o processar suas entradas em sincronia. Essa aleatoriedade \u00e9\ndesabilitada por padr\u00e3o.)\nNotar que pararei de dizer o Logisim sempre tratar\u00e1 bem atrasos de porta.\nMas pelo menos ele tentar\u00e1."
  },
  {
    "id": 59,
    "title": "Erros de oscila\u00e7\u00e3o",
    "url": "/pt/html/guide/prop/oscillate.html",
    "text": "Erros de oscila\u00e7\u00e3o\nErros de oscila\u00e7\u00e3o\nO algoritmo de propaga\u00e7\u00e3o, que normalmente trabalha silenciosamente, sem qualquer\nproblemas, vai se tornar mair vis\u00edvel quando voc\u00ea criar um circuito que oscile.\nEsse circuito est\u00e1 em condi\u00e7\u00e3o est\u00e1vel. Mas se voc\u00ea mudar a entrada para 1,\no circuito ir\u00e1 efetivamente entrar em um loop infinito.\nDepois um tempo, o Logisim simplesmente desistir\u00e1 e mostrar\u00e1 a mensagem\n\"oscila\u00e7\u00e3o aparente\" dizendo que ele acredita que o circuito esteja oscilando.\nEle ir\u00e1 exibir os valores que tiver no momento em que desistir. Esses valores\nparecer\u00e3o errados - nessa tela, a porta AND estar\u00e1 emitindo 1\napesar de uma de suas entradas serem 0, mas poderia ser porque a porta NOT\ntem uma entrada em 1 e uma sa\u00edda em um 1.\nO Logisim prestativamente exibir\u00e1 c\u00edrculos em vermelho em cada local que\npossa estar envolvido na oscila\u00e7\u00e3o. Se um ponto envolvido estiver em um\nsubcircuito, o Logisim ir\u00e1 colocar todo o contorno do subcircuito em vermelho.\nQuando Logisim detectar oscila\u00e7\u00e3o, ele desligar\u00e1 todas as simula\u00e7\u00f5es.\nVoc\u00ea poder\u00e1 reativar a simula\u00e7\u00e3o usando o menu Simula\u00e7\u00e3o e a op\u00e7\u00e3o Simula\u00e7\u00e3o Ativada.\nO Logisim detecta oscila\u00e7\u00f5es usando uma t\u00e9cnica bastante simples: se a\nsimula\u00e7\u00e3o dos circuitos aparecer em muitas itera\u00e7\u00f5es, ent\u00e3o ele ir\u00e1 simplesmente\ndesistir e reportar\u00e1 oscila\u00e7\u00e3o. (Os pontos que identificar como envolvidos ser\u00e3o\naqueles que forem afetados nos \u00faltimos 25% do total das itera\u00e7\u00f5es.)\nAssim, ele poderia erroneamente relatar oscila\u00e7\u00e3o, especialmente se voc\u00ea estiver\ntrabalhando com um circuito excepcionalmente grande, mas isso seria um bem maior\ndo que qualquer outro que eu j\u00e1 tenha constru\u00eddo com o Logisim.\nEm qualquer caso, se voc\u00ea estiver confiante de que a mensagem seja um erro, voc\u00ea\npoder\u00e1 configurar o n\u00famero de itera\u00e7\u00f5es conclu\u00eddas antes da oscila\u00e7\u00e3o ocorra atrav\u00e9s\nda janela\nOp\u00e7\u00f5es de projeto\nem\nGuia da simula\u00e7\u00e3o."
  },
  {
    "id": 60,
    "title": "Defici\u00eancias",
    "url": "/pt/html/guide/prop/shortcome.html",
    "text": "Limita\u00e7\u00f5es\nLimita\u00e7\u00f5es\nO algoritmo de propaga\u00e7\u00e3o do Logisim \u00e9 sofisticado o suficiente\npara quase todos os fins educativos, mas n\u00e3o \u00e9 sofisticado o bastante\npara o projeto de um circuito industrial. Em ordem das mais para as menos\ncontundentes, as defici\u00eancias da t\u00e9cnica de propaga\u00e7\u00e3o do Logisim\nincluem:\nExceto para os problemas de atrasos em portas, o Logisim n\u00e3o trata de forma\nparticular quest\u00f5es de temporiza\u00e7\u00e3o. \u00c9 muito idealizada, de modo que um par de portas NOR\nconfiguradas em um latch SR ir\u00e1 mudar em sincronia infinitamente, melhor\nque, eventualmente, o circuito chegue a um estado permanente.\nO Logisim n\u00e3o pode simular subcircuitos cujos pinos, \u00e0s vezes, se comportem\ncomo entradas e \u00e0s vezes como sa\u00eddas. Componentes criados usando Java poder\u00e3o ter\ntais pinos, como \u00e9 o caso nas bibliotecas predefinidas, do circuito de mem\u00f3ria da\nbiblioteca RAM que cont\u00e9m um pino D, que pode atuar tanto como entrada e como sa\u00edda.\nO Logisim suspender\u00e1 sua simula\u00e7\u00e3o ap\u00f3s um n\u00famero fixo de itera\u00e7\u00f5es\nsupondo haver um erro de oscila\u00e7\u00e3o.\n\u00c9 conceb\u00edvel, que em um grande circuito isso n\u00e3o se trate de problema que possa levar\n\u00e0 oscila\u00e7\u00e3o.\nO Logisim n\u00e3o faz nada com rela\u00e7\u00e3o \u00e0 discrimina\u00e7\u00e3o entre n\u00edveis de tens\u00e3o:\nUm bit poder\u00e1 estar apenas ligado, desligado, n\u00e3o especificado, e em erro.\nH\u00e1 outras lacunas, tamb\u00e9m, que eu tenha omitido porque elas podem ser t\u00e3o\nobscuras que se estivesse ciente delas, seria \u00f3bvio que o Logisim nem perto\nchegaria a esse n\u00edvel. Como um exemplo extremo, tenho um amigo que trabalha para\num grande fabricante de chips, e seu trabalho \u00e9 de se preocupar com \"bolhas\" em\nfios de chips com largura crescente em nan\u00f4metros e que possam levar a desconex\u00e3o\naleat\u00f3ria.\nMesmo fora isso, n\u00e3o sou um especialista em projeto de circuito, assim,\npoder\u00e3o existir erros na t\u00e9cnica de propaga\u00e7\u00e3o da qual n\u00e3o tenha conhecimento.\nCongratularei-me com as corre\u00e7\u00f5es de especialistas."
  },
  {
    "id": 61,
    "title": "Bibliotecas JAR",
    "url": "/pt/html/guide/jar/index.html",
    "text": "Bibliotecas JAR\nBibliotecas JAR\nUso de bibliotecas JAR\nO Logisim tem dois tipos de componentes de circuito: os que\ns\u00e3o concebidos dentro Logisim como combina\u00e7\u00f5es de outros; e os primitivos,\nque s\u00e3o escritos em Java. Os circuitos do Logisim s\u00e3o mais f\u00e1ceis de projetar,\nmas eles n\u00e3o podem oferecer suporte mais sofisticado \u00e0 intera\u00e7\u00e3o com o usu\u00e1rio,\ne s\u00e3o relativamente ineficientes.\nO Logisim cont\u00e9m uma cole\u00e7\u00e3o bastante completa de bibliotecas predefinidas\nde componentes em Java, mas poder\u00e1 tamb\u00e9m acomodar bibliotecas adicionais escritas\npor voc\u00ea ou por outros. Uma vez em posse do c\u00f3digo de uma biblioteca, voc\u00ea poder\u00e1\nimport\u00e1-lo em seu projeto ao clicar em Projeto no painel de explorador (linha superior)\ne escolher carregar a biblioteca (Load Library > JAR Library)... Ent\u00e3o, o Logisim\npedir\u00e1 para voc\u00ea selecionar o arquivo JAR.\n(Em algumas circunst\u00e2ncias, voc\u00ea poder\u00e1 ter que digitar o nome da classe inicial,\nquando solicitado, isso dever\u00e1 ser previsto pelo desenvolvedor da biblioteca.\nNo entanto, um desenvolvedor normalmente dever\u00e1 configurar a biblioteca JAR para\nevitar isso (ao incluir no\nmanifesto\ndo arquivo JAR um atributo\nLibrary-Class especificando o principal nome da classe).)\nCriar bibliotecas JAR\nO restante desta se\u00e7\u00e3o ser\u00e1 dedicado a uma s\u00e9rie de exemplos\nbem comentados que ilustram como desenvolver bibliotecas do Logisim.\nVoc\u00ea s\u00f3 dever\u00e1 tentar fazer isso, se for um programador Java experiente.\nAl\u00e9m desses exemplos, voc\u00ea ir\u00e1 encontrar documenta\u00e7\u00e3o bastante escassa.\nVoc\u00ea poder\u00e1 baixar um arquivo JAR que lhe permitir\u00e1 importar esses exemplos\ndo website do Logisim na se\u00e7\u00e3o Links. Esse arquivo JAR tamb\u00e9m conter\u00e1\no c\u00f3digo-fonte desses exemplos.\nIncrementador em c\u00f3digo de Gray\nIlustra os elementos essenciais de qualquer tipo de componente\npor meio de um exemplo simples de um componente que tem uma entrada multibit\ne calcula o valor do pr\u00f3ximo c\u00f3digo de Gray que o segue.\nBiblioteca de classes\nIlustra como definir uma biblioteca. Este \u00e9 o ponto de entrada\npara qualquer arquivo JAR - a classe cujo nome o usu\u00e1rio fornecer\u00e1 quando\nfor carregar a biblioteca JAR.\nhref=\"simpctr.html\"> Contador simples em c\u00f3digo Gray\nIlustra como fazer um componente que tem estado interno;\nem particular, um contador de 8 bits que itera em c\u00f3digo de Gray.\nContador em c\u00f3digo de Gray\nDemonstra um componente completo, bem mais sofisticado, com o qual\no usu\u00e1rio poder\u00e1 interagir. Ele implementa um contador em c\u00f3digo de Gray, onde o\nn\u00famero de bits guardado \u00e9 customiz\u00e1vel, e onde o usu\u00e1rio poder\u00e1 editar o valor\ncorrente, ao clicar nele com a ferramenta Testar e digitar um novo valor.\nhref=\"guide.html\"> Orienta\u00e7\u00f5es\nInforma\u00e7\u00f5es gerais para as bibliotecas com desenvolvimento por terceiros.\nLicense\nThe code in this example JAR library is released under the MIT license,\na more permissive license than the GPL, under which the rest of Logisim is\nreleased.\nCopyright (c) 2009, Carl Burch.\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "id": 62,
    "title": "Incrementador em c\u00f3digo de Gray",
    "url": "/pt/html/guide/jar/incr.html",
    "text": "Incrementador em c\u00f3digo de Gray\nIncrementador em c\u00f3digo de Gray\nCada componente inclu\u00eddo em uma biblioteca \u00e9 definido atrav\u00e9s da cria\u00e7\u00e3o de\numa subclasse de\nInstanceFactory\nencontrada no pacote\ncom.cburch.logisim.instance. Esta subclasse tem todo\no c\u00f3digo necess\u00e1rio.\n(Aqui descreveremos a API para a vers\u00e3o atual do Logisim.\nVoc\u00ea poder\u00e1 encontrar algumas bibliotecas desenvolvidas para vers\u00f5es anteriores\ndo Logisim, para componentes que foram desenvolvidos atrav\u00e9s da defini\u00e7\u00e3o de duas\nclasses, uma extens\u00e3o\nComponent\ne outra que estende\nComponentFactory.\nVers\u00e3o 2.3.0 introduziu uma API muito mais simples a\nInstanceFactory,\na t\u00e9cnica anterior est\u00e1 obsoleta.)\nTr\u00eas pacotes do Logisim resumem a maioria das classes relevantes para a defini\u00e7\u00e3o\nbibliotecas de componentes.\ncom.cburch.logisim.instance\nCont\u00e9m classes especificamente relacionadas com a defini\u00e7\u00e3o de componentes,\nincluindo as classes\nInstanceFactory,\nInstanceState,\nInstancePainter e\nInstance.\ncom.cburch.logisim.data\nCont\u00e9m classes relacionadas com os elementos de dados associados aos\ncomponentes, como a classe\nBounds\npara representar ret\u00e2ngulos lim\u00edtrofes,\nou a classe\nValue\npara representar os valores que possam\nexistir em uma conex\u00e3o.\ncom.cburch.logisim.tools\nCont\u00e9m classes relacionadas com a defini\u00e7\u00e3o da biblioteca.\nAcerca dos c\u00f3digos de Gray\nAntes de prosseguir, descreverei brevemente o c\u00f3digo Gray em que estes\nexemplos se baseiam. N\u00e3o \u00e9 realmente importante para se entender como esses\nexemplos funcionam, assim voc\u00ea poder\u00e1 pular para o c\u00f3digo abaixo, se desejar -\nespecialmente se voc\u00ea j\u00e1 conhecer os c\u00f3digos de Gray.\nO c\u00f3digo de Gray \u00e9 uma t\u00e9cnica (em homenagem a Frank Gray) para iterar\nn\nsequ\u00eancias de bits com apenas uma ligeira modifica\u00e7\u00e3o em cada etapa.\nComo exemplo, considere os 4 bits do c\u00f3digo de Gray listados abaixo.\n0000\n0001\n0011\n0010\n0110\n0111\n0101\n0100\n1100\n1101\n1111\n1110\n1010\n1011\n1001\n1000\nCada valor tem o bit sublinhado que ir\u00e1 mudar no pr\u00f3ximo valor da\nsequ\u00eancia. Por exemplo, depois de 0000 vir\u00e1 0001, no qual o bit final foi\nalterado, por isso o \u00faltimo bit ser\u00e1 sublinhado.\nOs componentes predefinidos do Logisim n\u00e3o incluem recurso para se trabalhar\ncom c\u00f3digos de Gray.\nPor\u00e9m, os projetistas eletr\u00f4nicos consideram os c\u00f3digos de Gray \u00fateis \u00e0s vezes. Um\nexemplo de aplica\u00e7\u00e3o particularmente not\u00e1vel dos c\u00f3digos de Gray \u00e9 sobre os eixos em\nmapas de Karnaugh.\nGrayIncrementer\nEste \u00e9 um pequeno exemplo que ilustra os elementos essenciais para se definir\num componente. Esse componente em particular \u00e9 um incrementador,\nque tem uma entrada multibit e produz o c\u00f3digo de Gray imediatamente seguinte a ele\nem sequ\u00eancia.\npackage com.cburch.gray;\nimport com.cburch.logisim.data.Attribute;\nimport com.cburch.logisim.data.BitWidth;\nimport com.cburch.logisim.data.Bounds;\nimport com.cburch.logisim.data.Value;\nimport com.cburch.logisim.instance.InstanceFactory;\nimport com.cburch.logisim.instance.InstancePainter;\nimport com.cburch.logisim.instance.InstanceState;\nimport com.cburch.logisim.instance.Port;\nimport com.cburch.logisim.instance.StdAttr;\n/** This component takes a multibit input and outputs the value that follows it\n* in Gray Code. For instance, given input 0100 the output is 1100. */\nclass GrayIncrementer extends InstanceFactory {\n/* Note that there are no instance variables. There is only one instance of\n* this class created, which manages all instances of the component. Any\n* information associated with individual instances should be handled\n* through attributes. For GrayIncrementer, each instance has a \"bit width\"\n* that it works with, and so we'll have an attribute. */\n/** The constructor configures the factory. */\nGrayIncrementer() {\nsuper(\"Gray Code Incrementer\");\n/* This is how we can set up the attributes for GrayIncrementers. In\n* this case, there is just one attribute - the width - whose default\n* is 4. The StdAttr class defines several commonly occurring\n* attributes, including one for \"bit width.\" It's best to use those\n* StdAttr attributes when appropriate: A user can then select several\n* components (even from differing factories) with the same attribute\n* and modify them all at once. */\nsetAttributes(new Attribute[] { StdAttr.WIDTH },\nnew Object[] { BitWidth.create(4) });\n/* The \"offset bounds\" is the location of the bounding rectangle\n* relative to the mouse location. Here, we're choosing the component to\n* be 30x30, and we're anchoring it relative to its primary output\n* (as is typical for Logisim), which happens to be in the center of the\n* east edge. Thus, the top left corner of the bounding box is 30 pixels\n* west and 15 pixels north of the mouse location. */\nsetOffsetBounds(Bounds.create(-30, -15, 30, 30));\n/* The ports are locations where wires can be connected to this\n* component. Each port object says where to find the port relative to\n* the component's anchor location, then whether the port is an\n* input/output/both, and finally the expected bit width for the port.\n* The bit width can be a constant (like 1) or an attribute (as here).\n*/\nsetPorts(new Port[] {\nnew Port(-30, 0, Port.INPUT, StdAttr.WIDTH),\nnew Port(0, 0, Port.OUTPUT, StdAttr.WIDTH),\n});\n}\n/** Computes the current output for this component. This method is invoked\n* any time any of the inputs change their values; it may also be invoked in\n* other circumstances, even if there is no reason to expect it to change\n* anything. */\npublic void propagate(InstanceState state) {\n// First we retrieve the value being fed into the input. Note that in\n// the setPorts invocation above, the component's input was included at\n// index 0 in the parameter array, so we use 0 as the parameter below.\nValue in = state.getPort(0);\n// Now compute the output. We've farmed this out to a helper method,\n// since the same logic is needed for the library's other components.\nValue out = nextGray(in);\n// Finally we propagate the output into the circuit. The first parameter\n// is 1 because in our list of ports (configured by invocation of\n// setPorts above) the output is at index 1. The second parameter is the\n// value we want to send on that port. And the last parameter is its\n// \"delay\" - the number of steps it will take for the output to update\n// after its input.\nstate.setPort(1, out, out.getWidth() + 1);\n}\n/** Says how an individual instance should appear on the canvas. */\npublic void paintInstance(InstancePainter painter) {\n// As it happens, InstancePainter contains several convenience methods\n// for drawing, and we'll use those here. Frequently, you'd want to\n// retrieve its Graphics object (painter.getGraphics) so you can draw\n// directly onto the canvas.\npainter.drawRectangle(painter.getBounds(), \"G+1\");\npainter.drawPorts();\n}\n/** Computes the next gray value in the sequence after prev. This static\n* method just does some bit twiddling; it doesn't have much to do with\n* Logisim except that it manipulates Value and BitWidth objects. */\nstatic Value nextGray(Value prev) {\nBitWidth bits = prev.getBitWidth();\nif(!prev.isFullyDefined()) return Value.createError(bits);\nint x = prev.toIntValue();\nint ct = (x >> 16) ^ x; // compute parity of x\nct = (ct >> 8) ^ ct;\nct = (ct >> 4) ^ ct;\nct = (ct >> 2) ^ ct;\nct = (ct >> 1) ^ ct;\nif((ct & 1) == 0) { // if parity is even, flip 1's bit\nx = x ^ 1;\n} else { // else flip bit just above last 1\nint y = x ^ (x & (x - 1)); // first compute the last 1\ny = (y << 1) & bits.getMask();\nx = (y == 0 ? 0 : x ^ y);\n}\nreturn Value.createKnown(bits, x);\n}\n}\nEste exemplo, por si s\u00f3 n\u00e3o \u00e9 suficiente para se criar um arquivo JAR funcional;\nvoc\u00ea tamb\u00e9m dever\u00e1 prover uma classe Library, conforme ilustrado na p\u00e1gina a seguir."
  },
  {
    "id": 63,
    "title": "Classe Biblioteca",
    "url": "/pt/html/guide/jar/library.html",
    "text": "Classe Library\nClass Library\nO ponto de acesso para uma biblioteca JAR \u00e9 uma classe derivada que estende a\nclasse original\nLibrary . O trabalho principal da biblioteca \u00e9\nlistar as ferramentas que est\u00e3o dispon\u00edveis atrav\u00e9s da biblioteca, na maioria das vezes,\nas ferramentas s\u00e3o todas aquelas necess\u00e1rias para se adicionar os v\u00e1rios componentes\ndefinidos - ou seja, inst\u00e2ncias da classe\nAddTool\nao se trabalhar\ncom\ndiferentes f\u00e1bricas de componentes.\nComponents\npackage com.cburch.gray;\nimport java.util.Arrays;\nimport java.util.List;\nimport com.cburch.logisim.tools.AddTool;\nimport com.cburch.logisim.tools.Library;\n/** The library of components that the user can access. */\npublic class Components extends Library {\n/** The list of all tools contained in this library. Technically,\n* libraries contain tools, which is a slightly more general concept\n* than components; practically speaking, though, you'll most often want\n* to create AddTools for new components that can be added into the circuit.\n*/\nprivate List<AddTool> tools;\n/** Constructs an instance of this library. This constructor is how\n* Logisim accesses first when it opens the JAR file: It looks for\n* a no-arguments constructor method of the user-designated class.\n*/\npublic Components() {\ntools = Arrays.asList(new AddTool[] {\nnew AddTool(new GrayIncrementer()),\nnew AddTool(new SimpleGrayCounter()),\nnew AddTool(new GrayCounter()),\n});\n}\n/** Returns the name of the library that the user will see. */\npublic String getDisplayName() {\nreturn \"Gray Tools\";\n}\n/** Returns a list of all the tools available in this library. */\npublic List<AddTool> getTools() {\nreturn tools;\n}\n}"
  },
  {
    "id": 64,
    "title": "Contador simples em c\u00f3digo de Gray",
    "url": "/pt/html/guide/jar/simpctr.html",
    "text": "Contador simples em c\u00f3digo de Gray\nContador simples em c\u00f3digo de Gray\nMuitas vezes queremos componentes que n\u00e3o s\u00e3o exclusivamente combinacionais\nem sua natureza - ou seja, queremos que o componente tenha alguma mem\u00f3ria.\nH\u00e1 uma sutileza importante na defini\u00e7\u00e3o de tais componentes: voc\u00ea\nn\u00e3o poder\u00e1 ter o componente armazenando por si mesmo o estado, porque um\ncomponente individual poder\u00e1 aparecer v\u00e1rias vezes no mesmo circuito.\nEle poder\u00e1 at\u00e9 n\u00e3o aparecer diretamente dentro de um circuito, mas\npoder\u00e1 ser contado mais de uma vez se existir em um subcircuito que\nseja usado v\u00e1rias vezes.\nA solu\u00e7\u00e3o ser\u00e1 criar uma nova classe para representar o estado atual do objeto\ne, associar inst\u00e2ncias a esse componente atrav\u00e9s do estado do circuito do qual\nfor herdado. Neste exemplo, que implementa um contador em c\u00f3digo de Gray de 4 bits\nsens\u00edvel \u00e0 borda, definimos uma classe\nCounterData\npara representar\no estado do contador, al\u00e9m da subclasse\nInstanceFactory\ncomo\nilustrado anteriormente.\nUm objeto\nCounterData\nse lembrar\u00e1 tanto do valor atual do contador,\nbem como da entrada de clock visto pela \u00faltima vez (para detectar a borda de subida).\nCounterData\npackage com.cburch.gray;\nimport com.cburch.logisim.data.BitWidth;\nimport com.cburch.logisim.data.Value;\nimport com.cburch.logisim.instance.InstanceData;\nimport com.cburch.logisim.instance.InstanceState;\n/** Represents the state of a counter. */\nclass CounterData implements InstanceData, Cloneable {\n/** Retrieves the state associated with this counter in the circuit state,\n* generating the state if necessary.\n*/\npublic static CounterData get(InstanceState state, BitWidth width) {\nCounterData ret = (CounterData) state.getData();\nif(ret == null) {\n// If it doesn't yet exist, then we'll set it up with our default\n// values and put it into the circuit state so it can be retrieved\n// in future propagations.\nret = new CounterData(null, Value.createKnown(width, 0));\nstate.setData(ret);\n} else if(!ret.value.getBitWidth().equals(width)) {\nret.value = ret.value.extendWidth(width.getWidth(), Value.FALSE);\n}\nreturn ret;\n}\n/** The last clock input value observed. */\nprivate Value lastClock;\n/** The current value emitted by the counter. */\nprivate Value value;\n/** Constructs a state with the given values. */\npublic CounterData(Value lastClock, Value value) {\nthis.lastClock = lastClock;\nthis.value = value;\n}\n/** Returns a copy of this object. */\npublic Object clone() {\n// We can just use what super.clone() returns: The only instance variables are\n// Value objects, which are immutable, so we don't care that both the copy\n// and the copied refer to the same Value objects. If we had mutable instance\n// variables, then of course we would need to clone them.\ntry { return super.clone(); }\ncatch(CloneNotSupportedException e) { return null; }\n}\n/** Updates the last clock observed, returning true if triggered. */\npublic boolean updateClock(Value value) {\nValue old = lastClock;\nlastClock = value;\nreturn old == Value.FALSE && value == Value.TRUE;\n}\n/** Returns the current value emitted by the counter. */\npublic Value getValue() {\nreturn value;\n}\n/** Updates the current value emitted by the counter. */\npublic void setValue(Value value) {\nthis.value = value;\n}\n}\nSimpleCounter\npackage com.cburch.gray;\nimport com.cburch.logisim.data.BitWidth;\nimport com.cburch.logisim.data.Bounds;\nimport com.cburch.logisim.data.Direction;\nimport com.cburch.logisim.instance.InstanceFactory;\nimport com.cburch.logisim.instance.InstancePainter;\nimport com.cburch.logisim.instance.InstanceState;\nimport com.cburch.logisim.instance.Port;\nimport com.cburch.logisim.util.GraphicsUtil;\nimport com.cburch.logisim.util.StringUtil;\n/** Manufactures a simple counter that iterates over the 4-bit Gray Code. This\n* example illustrates how a component can maintain its own internal state. All\n* of the code relevant to state, though, appears in CounterData class. */\nclass SimpleGrayCounter extends InstanceFactory {\nprivate static final BitWidth BIT_WIDTH = BitWidth.create(4);\n// Again, notice how we don't have any instance variables related to an\n// individual instance's state. We can't put that here, because only one\n// SimpleGrayCounter object is ever created, and its job is to manage all\n// instances that appear in any circuits.\npublic SimpleGrayCounter() {\nsuper(\"Gray Counter (Simple)\");\nsetOffsetBounds(Bounds.create(-30, -15, 30, 30));\nsetPorts(new Port[] {\nnew Port(-30, 0, Port.INPUT, 1),\nnew Port(\n0, 0, Port.OUTPUT, BIT_WIDTH.getWidth()),\n});\n}\npublic void propagate(InstanceState state) {\n// Here I retrieve the state associated with this component via a helper\n// method. In this case, the state is in a CounterData object, which is\n// also where the helper method is defined. This helper method will end\n// up creating a CounterData object if one doesn't already exist.\nCounterData cur = CounterData.get(state, BIT_WIDTH);\nboolean trigger = cur.updateClock(state.getPort(0));\nif(trigger) cur.setValue(GrayIncrementer.nextGray(cur.getValue()));\nstate.setPort(1, cur.getValue(), 9);\n// (You might be tempted to determine the counter's current value\n// via state.getPort(1). This is erroneous, though, because another\n// component may be pushing a value onto the same point, which would\n// \"corrupt\" the value found there. We really do need to store the\n// current value in the instance.)\n}\npublic void paintInstance(InstancePainter painter) {\npainter.drawBounds();\npainter.drawClock(0, Direction.EAST); // draw a triangle on port 0\npainter.drawPort(1); // draw port 1 as just a dot\n// Display the current counter value centered within the rectangle.\n// However, if the context says not to show state (as when generating\n// printer output), then skip this.\nif(painter.getShowState()) {\nCounterData state = CounterData.get(painter, BIT_WIDTH);\nBounds bds = painter.getBounds();\nGraphicsUtil.drawCenteredText(painter.getGraphics(),\nStringUtil.toHexString(BIT_WIDTH.getWidth(), state.getValue().toIntValue()),\nbds.getX() + bds.getWidth() / 2,\nbds.getY() + bds.getHeight() / 2);\n}\n}\n}"
  },
  {
    "id": 65,
    "title": "Contador em c\u00f3digo de Gray",
    "url": "/pt/html/guide/jar/counter.html",
    "text": "Contador em c\u00f3digo de Gray\nContador em c\u00f3digo de Gray\nEsta orienta\u00e7\u00e3o sobre bibliotecas do Logisim apresenta um sofisticado\ncontador em c\u00f3digo de Gray, que permite ao usu\u00e1rio alterar seu valor atual\nusando a ferramenta Testar (Poke) e colocar um r\u00f3tulo sobre o componente\nusando a ferramenta de texto (Text Tool). Tamb\u00e9m personaliza o \u00edcone que\naparece no explorador, associado \u00e0 ferramenta.\nGrayCounter\npackage com.cburch.gray;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport com.cburch.logisim.data.Attribute;\nimport com.cburch.logisim.data.BitWidth;\nimport com.cburch.logisim.data.Bounds;\nimport com.cburch.logisim.data.Direction;\nimport com.cburch.logisim.instance.Instance;\nimport com.cburch.logisim.instance.InstanceFactory;\nimport com.cburch.logisim.instance.InstancePainter;\nimport com.cburch.logisim.instance.InstanceState;\nimport com.cburch.logisim.instance.Port;\nimport com.cburch.logisim.instance.StdAttr;\nimport com.cburch.logisim.util.GraphicsUtil;\nimport com.cburch.logisim.util.StringUtil;\n/** Manufactures a counter that iterates over Gray codes. This demonstrates\n* several additional features beyond the SimpleGrayCounter class. */\nclass GrayCounter extends InstanceFactory {\npublic GrayCounter() {\nsuper(\"Gray Counter\");\nsetOffsetBounds(Bounds.create(-30, -15, 30, 30));\nsetPorts(new Port[] {\nnew Port(-30, 0, Port.INPUT, 1),\nnew Port(\n0, 0, Port.OUTPUT, StdAttr.WIDTH),\n});\n// We'll have width, label, and label font attributes. The latter two\n// attributes allow us to associate a label with the component (though\n// we'll also need configureNewInstance to configure the label's\n// location).\nsetAttributes(\nnew Attribute[] { StdAttr.WIDTH, StdAttr.LABEL, StdAttr.LABEL_FONT },\nnew Object[] { BitWidth.create(4), \"\", StdAttr.DEFAULT_LABEL_FONT });\n// The following method invocation sets things up so that the instance's\n// state can be manipulated using the Poke Tool.\nsetInstancePoker(CounterPoker.class);\n// These next two lines set it up so that the explorer window shows a\n// customized icon representing the component type. This should be a\n// 16x16 image.\nURL url = getClass().getClassLoader().getResource(\"com/cburch/gray/counter.gif\");\nif(url != null) setIcon(new ImageIcon(url));\n}\n/** The configureNewInstance method is invoked every time a new instance\n* is created. In the superclass, the method doesn't do anything, since\n* the new instance is pretty thoroughly configured already by default. But\n* sometimes you need to do something particular to each instance, so you\n* would override the method. In this case, we need to set up the location\n* for its label. */\nprotected void configureNewInstance(Instance instance) {\nBounds bds = instance.getBounds();\ninstance.setTextField(StdAttr.LABEL, StdAttr.LABEL_FONT,\nbds.getX() + bds.getWidth() / 2, bds.getY() - 3,\nGraphicsUtil.H_CENTER, GraphicsUtil.V_BASELINE);\n}\npublic void propagate(InstanceState state) {\n// This is the same as with SimpleGrayCounter, except that we use the\n// StdAttr.WIDTH attribute to determine the bit width to work with.\nBitWidth width = state.getAttributeValue(StdAttr.WIDTH);\nCounterData cur = CounterData.get(state, width);\nboolean trigger = cur.updateClock(state.getPort(0));\nif(trigger) cur.setValue(GrayIncrementer.nextGray(cur.getValue()));\nstate.setPort(1, cur.getValue(), 9);\n}\npublic void paintInstance(InstancePainter painter) {\n// This is essentially the same as with SimpleGrayCounter, except for\n// the invocation of painter.drawLabel to make the label be drawn.\npainter.drawBounds();\npainter.drawClock(0, Direction.EAST);\npainter.drawPort(1);\npainter.drawLabel();\nif(painter.getShowState()) {\nBitWidth width = painter.getAttributeValue(StdAttr.WIDTH);\nCounterData state = CounterData.get(painter, width);\nBounds bds = painter.getBounds();\nGraphicsUtil.drawCenteredText(painter.getGraphics(),\nStringUtil.toHexString(width.getWidth(), state.getValue().toIntValue()),\nbds.getX() + bds.getWidth() / 2,\nbds.getY() + bds.getHeight() / 2);\n}\n}\n}\nCounterPoker\npackage com.cburch.gray;\nimport java.awt.Color;\nimport java.awt.Graphics;\nimport java.awt.event.KeyEvent;\nimport java.awt.event.MouseEvent;\nimport com.cburch.logisim.data.BitWidth;\nimport com.cburch.logisim.data.Bounds;\nimport com.cburch.logisim.data.Value;\nimport com.cburch.logisim.instance.InstancePainter;\nimport com.cburch.logisim.instance.InstancePoker;\nimport com.cburch.logisim.instance.InstanceState;\nimport com.cburch.logisim.instance.StdAttr;\n/** When the user clicks a counter using the Poke Tool, a CounterPoker object\n* is created, and that object will handle all user events. Note that\n* CounterPoker is a class specific to GrayCounter, and that it must be a\n* subclass of InstancePoker in the com.cburch.logisim.instance package. */\npublic class CounterPoker extends InstancePoker {\npublic CounterPoker() { }\n/** Determines whether the location the mouse was pressed should result\n* in initiating a poke.\n*/\npublic boolean init(InstanceState state, MouseEvent e) {\nreturn state.getInstance().getBounds().contains(e.getX(), e.getY());\n// Anywhere in the main rectangle initiates the poke. The user might\n// have clicked within a label, but that will be outside the bounds.\n}\n/** Draws an indicator that the caret is being selected. Here, we'll draw\n* a red rectangle around the value. */\npublic void paint(InstancePainter painter) {\nBounds bds = painter.getBounds();\nBitWidth width = painter.getAttributeValue(StdAttr.WIDTH);\nint len = (width.getWidth() + 3) / 4;\nGraphics g = painter.getGraphics();\ng.setColor(Color.RED);\nint wid = 7 * len + 2; // width of caret rectangle\nint ht = 16; // height of caret rectangle\ng.drawRect(bds.getX() + (bds.getWidth() - wid) / 2,\nbds.getY() + (bds.getHeight() - ht) / 2, wid, ht);\ng.setColor(Color.BLACK);\n}\n/** Processes a key by just adding it onto the end of the current value. */\npublic void keyTyped(InstanceState state, KeyEvent e) {\n// convert it to a hex digit; if it isn't a hex digit, abort.\nint val = Character.digit(e.getKeyChar(), 16);\nBitWidth width = state.getAttributeValue(StdAttr.WIDTH);\nif(val < 0 || (val & width.getMask()) != val) return;\n// compute the next value\nCounterData cur = CounterData.get(state, width);\nint newVal = (cur.getValue().toIntValue() * 16 + val) & width.getMask();\nValue newValue = Value.createKnown(width, newVal);\ncur.setValue(newValue);\nstate.fireInvalidated();\n// You might be tempted to propagate the value immediately here, using\n// state.setPort. However, the circuit may currently be propagating in\n// another thread, and invoking setPort directly could interfere with\n// that. Using fireInvalidated notifies the propagation thread to\n// invoke propagate on the counter at its next opportunity.\n}\n}"
  },
  {
    "id": 66,
    "title": "Orienta\u00e7\u00f5es",
    "url": "/pt/html/guide/jar/guide.html",
    "text": "Orienta\u00e7\u00f5es\nOrienta\u00e7\u00f5es\nAprender mais\nAl\u00e9m da sequ\u00eancia de exemplos apresentados aqui, o c\u00f3digo-fonte do Logisim\nfornece exemplos adicionais, embora nem sempre eles ilustrem\na mesma aten\u00e7\u00e3o para com a legibilidade e o bom design.\nPara maior portabilidade considerando vers\u00f5es futuras, voc\u00ea dever\u00e1 manter\ntanto quanto poss\u00edvel as classes em pacotes de ...\ninst\u00e2ncias ,\n...\ndados , e ...\nferramentas . Claro, voc\u00ea poder\u00e1 usar\noutras APIs, mas elas poder\u00e3o ser mais vulner\u00e1veis \u00e0s altera\u00e7\u00f5es futuras.\nEm geral, estou disposto a responder a eventuais pedidos de ajuda. Relat\u00f3rios\ncom bugs e sugest\u00f5es de melhorias, \u00e9 claro, ser\u00e3o sempre bem vindos.\nDistribui\u00e7\u00e3o\nVoc\u00ea \u00e9 livre para distribuir qualquer arquivo JAR que desenvolver, sem restri\u00e7\u00f5es.\nAs restri\u00e7\u00f5es GPL se aplicar\u00e3o, por\u00e9m, se trechos de seu trabalho forem\nderivados de partes do c\u00f3digo-fonte do Logisim (liberado sob a GPL).\nDeriva\u00e7\u00f5es do c\u00f3digo de exemplo nesta se\u00e7\u00e3o do\nGuia do Usu\u00e1rio\nn\u00e3o incorrem em tais restri\u00e7\u00f5es, esses exemplos est\u00e3o cobertos nos termos da\nlicen\u00e7a do MIT.\nSe voc\u00ea quiser de compartilhar sua biblioteca com outros usu\u00e1rios Logisim,\nestarei disposto a fornecer um link para uma p\u00e1gina Web de hospedagem ou para\no arquivo JAR atrav\u00e9s do site do Logisim. Se voc\u00ea achar que sua biblioteca\ndever\u00e1 ser incorporada \u00e0 distribui\u00e7\u00e3o b\u00e1sica do Logisim, ent\u00e3o tamb\u00e9m me\ncongratularei com a sua sugest\u00e3o, e terei prazer em reconhecer sua contribui\u00e7\u00e3o\nem futuros lan\u00e7amentos do Logisim, que inclu\u00edrem o trabalho."
  },
  {
    "id": 67,
    "title": "Sobre o programa",
    "url": "/pt/html/guide/about/index.html",
    "text": "Sobre o programa\nSobre o programa\nO Logisim \u00e9 um programa de c\u00f3digo aberto. O c\u00f3digo-fonte est\u00e1 inclu\u00eddo\nna pasta src contida no arquivo JAR.\nSe voc\u00ea considerar o Logisim \u00fatil, por favor me avise.\nPrincipalmente\nse voc\u00ea estiver ligado a uma institui\u00e7\u00e3o de ensino, pois suas informa\u00e7\u00f5es poder\u00e3o\nme ajudar na obten\u00e7\u00e3o de maior apoio para manter esse trabalho.\nAgrade\u00e7o o envio de emails sobre Logisim, que incluam relat\u00f3rios de bugs, sugest\u00f5es,\ne corre\u00e7\u00f5es. Quando voc\u00ea me enviar algum, por favor, esteja ciente de que tenho\ntrabalhado duro para manter o Logisim sem qualquer \u00f4nus da sua parte. Se voc\u00ea quiser ter\no direito de reclamar sobre o programa, ent\u00e3o sugiro direcionar seu or\u00e7amento para\nprogramas concorrentes do Logisim. (N\u00e3o conhe\u00e7o outro com c\u00f3digo aberto que seja t\u00e3o\nrico em recursos como o Logisim). No entanto, mantenho meu interesse em continuar a\nmelhorar o Logisim e suas sugest\u00f5es ser\u00e3o muito bem-vindas.\nComunica\u00e7\u00e3o de direitos autorais\nCopyright (c) 2005, Carl Burch.\nO Logisim \u00e9 um programa gratuito; poder\u00e1 ser redistribu\u00eddo e/ou modificado\nsob os termos da GNU General Public License\ncomo publicada pela Free Software Foundation; quer seja na vers\u00e3o 2 dessa\nlicen\u00e7a, ou qualquer outra posterior.\nO Logisim \u00e9 distribu\u00eddo na inten\u00e7\u00e3o de que possa ser \u00fatil,\nmas SEM QUALQUER GARANTIAS; nem mesmo aquela impl\u00edcita para\nCOMERCIALIZA\u00c7\u00c3O ou ADEQUA\u00c7\u00c3O PARA UM DETERMINADO PROP\u00d3SITO.\nFavor consultar a GNU General Public License para maiores detalhes.\nAgradecimentos\nO c\u00f3digo fonte do Logisim \u00e9 basicamente trabalho meu, devo\nagradecer meus empregadores por financiar minhas atividades como professor,\ndentre elas o desenvolvimento desse programa: o qual iniciei, na Saint John's\nUniversity (Collegeville, Minnesota, EUA) em 2000-2004, e tenho mantido\nno Hendrix College (Conway, Arkansas, EUA) desde 2004 at\u00e9\no presente. Sou muito grato a essas institui\u00e7\u00f5es por me conceder\ntempo e recursos para trabalhar nesse projeto. Tomara todas as faculdades\ne universidades pudessem agir em conjunto e serem t\u00e3o zelosas com o\nensino quanto essas excelentes institui\u00e7\u00f5es o fazem!\nAlgumas outras pessoas t\u00eam sido particularmente \u00fateis:\nIlia Lilov, Pablo Leal Ramos, e Uwe Zimmermann, que contribu\u00edram\ncom as tradu\u00e7\u00f5es que acompanham o Logisim. Mais informa\u00e7\u00f5es sobre as tradu\u00e7\u00f5es\npodem ser encontrados em International Preferences.\nA turma CS61C da Primavera de 2005 na Universidade da Calif\u00f3rnia, Berkeley,\nque experimentou as vers\u00f5es beta do Logisim 2.0. Esses alunos tiveram que lidar com\nmuitos\nerros, e eu estou\nmuito\ngrato pela sua\npaci\u00eancia e por suas sugest\u00f5es!\nAs turmas CSCI 150 da Primavera de 2001 no College of Saint Benedict e na\nSaint John's University, que usaram as vers\u00f5es mais rudimentares de Logisim\nenquanto ainda estava sendo desenvolvido.\nDiversas partes do Logisim t\u00eam origem em outros programas; e v\u00e1rias dessas\npartes s\u00e3o distribu\u00eddas como parte do mesmo:\nJava API da Sun (obviamente)\nSun projeto JavaHelp\nFornece o sistema integrado no menu Ajuda.\nMRJAdapter, de Steve Roy\nFornece a integra\u00e7\u00e3o com a plataforma Macintosh OS X.\nlaunch4j, de Grzegorz Kowalt\nPermite a distribui\u00e7\u00e3o de Logisim como um execut\u00e1vel do Windows.\nGIFEncoder, desde Ad\u00e3o Doppelt\nSalva imagens como arquivos GIF. Isso foi feito com base no c\u00f3digo C\nescrito por Sverre H. Huseby.\nColorPicker, de Jeremy Wood\nFornece a caixa de di\u00e1logo que aparece quando da configura\u00e7\u00e3o de cores\n(como acontece com o componente LED).\nJFontChooser, de Christos Bohoris\nFornece a fonte da caixa de di\u00e1logo que aparece ao selecionar os atributos\nde fonte (como o \"Label Font\" dos r\u00f3tulos de muitos componentes).\nTableSorter, atribu\u00eddo a Philip Milne, McLean Brendon, Dan van Enckevort,\nParwinder Sekhon e ouroborus@ouroborus.org\nOferece a capacidade de ordenar a tabela no di\u00e1logo\nObter Estat\u00edsticas do Circuito\nao clicar o cabe\u00e7alho de cada colunas.\nE finalmente, quero agradecer a todos os usu\u00e1rios que entraram em contato comigo -\nquer seja pelo envio de relat\u00f3rios de bugs, sugest\u00f5es, ou apenas para me dizer\ncomo est\u00e3o usando o Logisim em suas aulas. Devo deixar essas contribui\u00e7\u00f5es\nan\u00f4nimas, j\u00e1 que n\u00e3o tenho permiss\u00e3o para mencion\u00e1-las aqui, mas de qualquer forma:\nobrigado!"
  },
  {
    "id": 68,
    "title": "GNU General Public License",
    "url": "/pt/html/guide/about/gpl.html",
    "text": "Sobre o programa\nGNU GENERAL PUBLIC LICENSE\nVersion 2, June 1991\nCopyright (C) 1989, 1991 Free Software Foundation, Inc.\n51 Franklin St, Fifth Floor, Boston, MA\n02110-1301\nUSA\nEveryone is permitted to copy and distribute verbatim copies\nof this license document, but changing it is not allowed.\nPreamble\nThe licenses for most software are designed to take away your\nfreedom to share and change it.\nBy contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.\nThis\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.\n(Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)\nYou can apply it to\nyour programs, too.\nWhen we speak of free software, we are referring to freedom, not\nprice.\nOur General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\nTo protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\nFor example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.\nYou must make sure that they, too, receive or can get the\nsource code.\nAnd you must show them these terms so they know their\nrights.\nWe protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\nAlso, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.\nIf the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\nFinally, any free program is threatened constantly by software\npatents.\nWe wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.\nTo prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\nThe precise terms and conditions for copying, distribution and\nmodification follow.\nGNU GENERAL PUBLIC LICENSE\nTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.\nThe \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.\n(Hereinafter, translation is included without limitation in\nthe term \"modification\".)\nEach licensee is addressed as \"you\".\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.\nThe act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\na) You must cause the modified files to carry prominent notices\nstating that you changed the files and the date of any change.\nb) You must cause any work that you distribute or publish, that in\nwhole or in part contains or is derived from the Program or any\npart thereof, to be licensed as a whole at no charge to all third\nparties under the terms of this License.\nc) If the modified program normally reads commands interactively\nwhen run, you must cause it, when started running for such\ninteractive use in the most ordinary way, to print or display an\nannouncement including an appropriate copyright notice and a\nnotice that there is no warranty (or else, saying that you provide\na warranty) and that users may redistribute the program under\nthese conditions, and telling the user how to view a copy of this\nLicense.\n(Exception: if the Program itself is interactive but\ndoes not normally print such an announcement, your work based on\nthe Program is not required to print an announcement.)\nThese requirements apply to the modified work as a whole.\nIf\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.\nBut when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\na) Accompany it with the complete corresponding machine-readable\nsource code, which must be distributed under the terms of Sections\n1 and 2 above on a medium customarily used for software interchange; or,\nb) Accompany it with a written offer, valid for at least three\nyears, to give any third party, for a charge no more than your\ncost of physically performing source distribution, a complete\nmachine-readable copy of the corresponding source code, to be\ndistributed under the terms of Sections 1 and 2 above on a medium\ncustomarily used for software interchange; or,\nc) Accompany it with the information you received as to the offer\nto distribute corresponding source code.\n(This alternative is\nallowed only for noncommercial distribution and only if you\nreceived the program in object code or executable form with such\nan offer, in accord with Subsection b above.)\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.\nFor an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.\nHowever, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.\nAny attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n5. You are not required to accept this License, since you have not\nsigned it.\nHowever, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.\nThese actions are\nprohibited by law if you do not accept this License.\nTherefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.\nYou may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.\nIf you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.\nFor example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.\nMany people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.\nIn such case, this License incorporates\nthe limitation as if written in the body of this License.\n9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.\nSuch new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.\nIf the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.\nIf the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.\nFor software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.\nOur decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\nNO WARRANTY\n11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\nTHE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.\nSHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\nEND OF TERMS AND CONDITIONS\n(Nota do tradutor: Preservado o texto original na \u00edntegra por raz\u00f5es legais.)"
  },
  {
    "id": 69,
    "title": "Refer\u00eancias para bibliotecas",
    "url": "/pt/html/libs/index.html",
    "text": "Refer\u00eancias para bibliotecas\nRefer\u00eancias para bibliotecas\nUma biblioteca do Logisim possui um\nconjunto de ferramentas\nque lhe permitir\u00e1 interagir com um circuito clicando-o e arrastando-o com o mouse na\n\u00e1rea de desenho. Na maioria das vezes, uma ferramenta tem por fun\u00e7\u00e3o adicionar\ncomponentes de um determinado tipo em um circuito, mas algumas das\nferramentas mais importantes, como a Testar e a Selecionar permitem que voc\u00ea\ninteraja com componentes de outras maneiras.\nTodas as ferramentas inclu\u00eddas nas bibliotecas predefinidas do Logisim's\nser\u00e3o documentadas nessas refer\u00eancias.\nBiblioteca Base\nFerramenta Testar\nFerramenta Editar\nFerramenta Selecionar\nFerramenta Conectar\nFerramenta Texto\nFerramenta Menu\nDistribuidor\nPino\nT\u00fanel\nResistor\nPonta de prova\nClock\nExtensor de bits\nR\u00f3tulo\nBiblioteca de portas\nConstante\nPorta NOT\nBuffer\nPortas AND/OR/NAND/NOR\nPortas XOR/XNOR/Paridade \u00edmpar/Paridade par\nBuffer/Inversor controlados\nBiblioteca Plexers\nMultiplexadores\nDemultiplexadores\nDecodificador\nCodificador de prioridades\nSeletor de bits\nBiblioteca aritm\u00e9tica\nSomador\nSubtrator\nMultiplicador\nDivisor\nNegador\nComparador\nDeslocador\nContador de bits\nProcurador de bits\nBiblioteca de mem\u00f3ria\nFlip-Flops D/T/J-K/S-R\nRegistrador\nContador\nRegistrador de deslocamento\nGerador aleat\u00f3rio\nRAM\nROM\nBiblioteca de entrada/sa\u00edda\nBot\u00e3o\nJoystick\nTeclado\nLED\nDisplay de 7-segmentos\nDisplay hexadecimal\nMatriz de LED\nTTY\nBiblioteca legada\nFlip-Flop D/J-K do Logisim 1.0\nRegistrador de 8-bits do Logisim 1.0"
  },
  {
    "id": 70,
    "title": "Biblioteca Conex\u00e3o",
    "url": "/en/html/libs/wiring/index.html",
    "text": "Wiring Library\nWiring Library\nThe Wiring library includes basic elements that are needed for most circuits.\nSplitter \u2014 join or split wires into buses\nPin \u2014 input to and output from a circuit\nProbe \u2014 display values on wires\nTunnel \u2014 make connections without drawing wires\nClock \u2014 oscillates between zero and one\nConstant \u2014 like an input, but with a fixed value\nBit Extender \u2014 zero-extend or sign-extend binary numbers\nUp to Library Reference"
  },
  {
    "id": 71,
    "title": "Distribuidor",
    "url": "/en/html/libs/wiring/splitter.html",
    "text": "Splitter\nSplitter\nLibrary:\nWiring\nIntroduced:\n2.0 Beta 1 (in Base library, moved to Wiring in 2.7.0)\nAppearance:\nBehavior\nThe splitter creates a correspondence between a multi-bit value and several\nseparate subsets of those bits. Despite its name, it can either\nsplit a multi-bit value into component parts, or it can combine\ncomponent parts into a multi-bit value; or it can do both at once.\nA more complete description of splitters is found in the 'Splitters' section of the\nUser's Guide.\nLogisim treats splitters specially when propagating values within a\ncircuit: Whereas all other components have a computed delay for purposes\nof simulating their behavior, values propagate through splitters (as\nwell as wires) instantaneously.\nNote: The term splitter is a non-standard\nterm, which is unique to Logisim as far as I know. I am unaware of any\nstandard term for such a concept; the only term I have heard used is\nbus ripper, but this term is unnecessarily violent for my\ntastes.\nPins\nTo distinguish the several connecting points for a splitter, we refer\nto the single connecting point one side as its combined end,\nand we refer to the multiple connecting points on the other side as its\nsplit ends.\nCombined end (input/output bit width matches Bit Width In attribute)\nA value holding all of the bits traveling through the splitter.\nSplit ends (input/output, bit width computed based on Bit x attributes)\nThe number of split ends is specified in the Fan Out attribute, and\neach split end has an index that is at least 0 and less than the Fan Out\nattribute. For each split end, all bits for which Bit x\nrefers to its index travels through that split end; the order of these\nbits is the same as their order within the combined end.\nAttributes\nWhen the component is selected or being added,\nthe digits '0' through '9' alter its Fan Out attribute,\nAlt-0 through Alt-9 alter both the Fan Out and Bit Width In attributes,\nand the arrow keys alter its Facing attribute.\nFacing\nThe location of the split ends relative to the combined end.\nFan Out\nThe number of split ends.\nBit Width In\nThe bit width of the combined end.\nAppearance\nSupports different ways of depicting the splitter in the circuit.\nThe Left-handed option (the default) draws a spine going left from the\ncombined end, with a labeled line coming from the spine for each split end.\nThe Right-handed option is the same except the spine goes right (if you're\nfacing according to the Facing attribute).\nThe Centered option centers the spine so it goes in roughly equal directions\nleft and right.\nAnd the Legacy option draws diagonal lines to each split end, without labels;\nthis option is primarily for compatibility with versions\nolder than 2.7.0, when this was the only option for splitter appearance.\nSpacing\nControls how far appart the split end pins are placed.\nBit x\nThe index of the split end to which bit x of the combined\nend corresponds. The split ends are indexed starting from 0 at the top\n(for a splitter facing east or west) or from 0 at the left/west (for a\nsplitter facing north or south). A bit can be specified to correspond to\nnone of the split ends. There is no way for a bit to correspond to\nmultiple split ends.\nSometimes you can avoid twiddling each individual Bit x attribute\nby bringing up the pop-up menu for a splitter (usually by right-clicking or\ncontrol-clicking it). The pop-up menu includes options labeled Distribute Ascending\nand Distribute Descending. The Distribute Ascending option distributes the bits\nso that each split end receives the same number of bits, starting from end 0.\n(If the number of split ends doesn't divide exactly into the number of bits,\nthen the bits are distributed as evenly as possible.)\nDistribute Descending does the same but starts from the highest-numbered end.\nPoke Tool Behavior\nNone.\nFPGA SynthesisSupports VHDL and Verilog synthesis.\nUp to Library Reference"
  },
  {
    "id": 72,
    "title": "Pino",
    "url": "/en/html/libs/wiring/pin.html",
    "text": "Pin\nPin\nLibrary:\nWiring\nIntroduced:\n2.0 Beta 1 (in Base library, moved to Wiring in 2.7.0)\nAppearance:\nBehavior\nA pin serves as an output from a circuit or as an input to a circuit, depending on the value\nof its 'Type' attribute. Logisim represents output\npins using a circle or rounded rectangle, and input pins are represented\nusing squares or rectangles. In either case, the individual bits of the\nvalue being sent or received is displayed within the component (except\nin printer view, when the bit width is shown instead).\nA pin is a convenient component for interacting with a circuit, and\nbeginning Logisim users need not use them in any other way. But a\nuser building a circuit using several subcircuits (as described in the\n`Subcircuits' section of\nthe User's Guide) will use pins also\nto specify the interface between an outer\ncircuit and the subcircuits it contains. In particular, a circuit layout's pin\ncomponents define the pins that appear on the subcircuit component when\nthe layout is used within another circuit. In such a circuit, the values\nsent and received to those locations on the subcircuit component are\ntied to the pins within the subcircuit layout.\nPins\nA pin component has only one pin. Counterintuitively, when the Pin\ncomponent's type is set to 'input', the pin will actually be an output\u2014\nthe Pin component in this case is taking input from the user (or from some other\ncircuit in which this layout is embedded) and outputting that value to the\nconnected wire. Conversely, when the Pin's type is set to 'output' the pin takes\ninput from the connected wire and outputs it to the screen for the user to see\n(or to some other circuit in which thhis layout is embedded). In either case,\nits bit width matches the Data Bits attribute, and its location depends on the\nFacing attribute.\nAttributes\nWhen the component is selected or being added,\nAlt-0 through Alt-9 alter its Data Bits attribute,\nthe arrow keys alter its Facing attribute,\nand Alt with an arrow key alters its Label Location attribute.\nFacing\nThe side of the component where its input/output pin should be.\nType\nSpecifies whether the component is used to input values into the circuit, or\nto output values from the circuit.\nData Bits\nThe number of bits for the value that the pin handles.\nBehavior\nControls how an input pin behaves in several special cases, mostly involving\nerror and unknown values. Output pins do not have a Behavior attribute, as they\nwork the same in all circumstances: whatever value is carried by the connected\nwire is shown to the user and passed up to any parent circuit, and if no wire is\nconnected, an 'X' is used instead to indicate a floating value. For input pins,\nseveral behaviors are available:\nSimple. In most cases \"Simple\" behavior should be sufficient.\nFor an input controled by the user, the user can select either zero or one\n(or any combination of zeros and ones for a multi-bit input pin). For an\ninput controlled by a parent circuit, whatever value the parent sends (0, 1,\nE, or X, or some combination of them) is passed to the circuit, or zero is\nused if the parent does not have a wire connected to that pin. Note that\nwith \"Simple\" behavior, an input pin will never create a new floating value\n(X) or error value (E), though it can passes them along from a parent\ncircuit.\nTri-State. This behavior is nearly identical to \"Simple\"\nbehavior, except that for input pins controlled by the user, the user can\nadditional select \"X\" to indicate a floating input.\nPull Down and Pull Up. This behavior is nearly identical\nto \"Simple\" behavior, except that for input pins controlled by a parent\ncircuit: if the parent circuit attempts to send an unknown value (X) to this\npin, it will be converted automatically to either zero (for Pull Down) or one (for Pull\nUp) before being sent into the circuit. Note that this does not affect the\nparent circuit in any way\u2014the parent circuit wire will still show X,\nwhile the subcircuit will receive a zero or one.\nLabel\nThe text within the label associated with the component.\nLabel Location\nThe location of the label relative to the component.\nLabel Font\nThe font with which to render the label.\nRadix\nThe number base used for displaying values (and entering values for input\npins).\nPoke Tool Behavior\nClicking an output pin has no effect, although the pin's attributes\nwill be displayed.\nClicking an input pin will toggle the bit that is clicked or, when the\n'Radix' is set to something other than binary, iterate through different\npossible values. The keyboard can also be used to enter values using the Poke\ntool.\nWhen viewing the state of a subcircuit\nas described in the `Debugging\nSubcircuits' of the User's Guide,\nthe value of each input pin is tied (\"pinned\") to whatever value the subcircuit\nis receiving from the containing parent circuit. Manually change the value of\nthe input pin break this link between the subcircuit's state and the containing\ncircuit's state, essentially creating a new isolated simulation of just this one\ncircuit, independent from any parent circuit. In this situation, any attempting\nto change the input pin's value using the Poke Tool will cause Logisim to warn\nthe user and confirm whether breaking this link is actually desired.\nFPGA SynthesisSupports VHDL and Verilog synthesis.\nUp to Library Reference"
  },
  {
    "id": 73,
    "title": "Ponta de prova",
    "url": "/en/html/libs/wiring/probe.html",
    "text": "Probe\nProbe\nLibrary:\nWiring\nIntroduced:\n2.0.3 (in Base library, moved to Wiring in 2.7.0)\nAppearance:\nBehavior\nA probe is an element that simply displays the value at a given point\nin a circuit. It does not itself interact with other components.\nIn most respects, the probe component duplicates the functionality found in a\nPin component configured as an output pin. The difference\nis that if the circuit is used as a subcircuit component, then an output pin\nwill be a part of that interface, whereas a probe is not. They also are\ndifferent in that the probe automatically adapts its width to whatever it is\nconnected to. Graphically, a probe looks like a pin but has a thinner, gray\nborder and a yellow background.\nPins\nA probe component has only one pin, which acts as an input to\nthe probe. The width that this pin accepts is adaptive: The probe will\nadapt to inputs of any width.\nAttributes\nWhen the component is selected or being added,\nthe arrow keys alter its Facing attribute.\nFacing\nThe side of the component where its input pin should be.\nLabel\nThe text within the label associated with the component.\nLabel Location\nThe location of the label relative to the component.\nLabel Font\nThe font with which to render the label.\nRadix\nThe base (for example, binary, decimal, or hexadecimal) in which\nthe value is displayed.\nPoke Tool Behavior\nNone.\nFPGA SynthesisNone, but Probe components will be silently\nignored during FPGA synthesis.\nUp to Library Reference"
  },
  {
    "id": 74,
    "title": "T\u00fanel",
    "url": "/en/html/libs/wiring/tunnel.html",
    "text": "Tunnel\nTunnel\nLibrary:\nWiring\nIntroduced:\n2.5.0 (in Base library, moved to Wiring in 2.7.0)\nAppearance:\nBehavior\nA tunnel acts like a wire in that it binds points together,\nbut unlike a wire the connection is not explicitly drawn.\nThis is helpful when you need to connect points far apart in the circuit\nand a network of wires would make the circuit much more ugly.\nThe below illustration illustrates how this works.\nHere, all three tunnels have the same label, a, and so\nthe three points to which the tunnels point are connected.\n(If one of the tunnels were labeled something else, like b,\nthen it would be part of a different set of tunnels.)\nThe tristate buffer at top emits a floating output\nsince its lower input is 0.\nThis normally leads the wire coming from the tristate buffer to be blue;\nbut here it is dark green because the floating output combines\nthrough the tunnel with the 0 from the pin at bottom.\nIf the control input into the tristate buffer changes to 1,\nthen the tristate buffer would feed 1 into the tunnel,\nwhich would combine with 0 from the pin at bottom to result in an error value; thus, we would then see red wires feeding through all three tunnels.\nPins\nA tunnel has only one pin, whose bit width matches the tunnel's\nData Bits attribute. This pin is bidirection, allowing values to flow in either\ndirection through the tunnel.\nAttributes\nWhen the component is selected or being added,\nAlt-0 through Alt-9 alter its Data Bits attribute\nand the arrow keys alter its Facing attribute.\nFacing\nThe direction toward which the tunnel points.\nData Bits\nThe number of bits for the tunnel.\nLabel\nThe text within the label associated with the tunnel.\nThis tunnel is connected to all other tunnels with exactly the same label.\nLabel Font\nThe font with which to render the label.\nPoke Tool Behavior\nNone.\nFPGA SynthesisSupports VHDL and Verilog synthesis.\nUp to Library Reference"
  },
  {
    "id": 75,
    "title": "Resistor para ajuste",
    "url": "/en/html/libs/wiring/pull.html",
    "text": ""
  },
  {
    "id": 76,
    "title": "Clock",
    "url": "/en/html/libs/wiring/clock.html",
    "text": "Clock\nClock\nLibrary:\nWiring\nIntroduced:\n2.0 Beta 13 (in Base library, moved to Wiring in 2.7.0)\nAppearance:\nBehavior\nThe clock toggles its output value on a regular schedule as long as\nauto-ticks are enabled via the\nSimulate menu, or when a manual\nhalf-tick or full-tick is selected from the same menu.\n(Auto-ticking are disabled by default.)\nA \"tick\" is Logisim's unit of time; the speed at which ticks occur can\nbe selected from the Simulate menu's Auto-Tick Frequency submenu.\nEach clock component's duty cycle can be independently configured using its High\nDuration and Low Duration attributes.\nNote that Logisim's simulation of clocks is quite unrealistic: In\nreal circuits, multiple clocks will drift from one another and will\nnever move in lockstep. But in Logisim, all clocks experience ticks at\nthe same rate.\nWarning: The auto-tick frequency is best-effort\u2014Logisim will\nattempt to toggle the clocks at the selected frequency, but does not provide\nany guarantees. Complex circuits will necessarily require more actual time\nto simulate, and will not be able to keep up with high clock frequencies.\nThe actual simulated frequency can be displayed (see the 'Window' tab of the\nLogisim Preferences).\nPins\nA clock has only one pin, an output with a bit width of 1, whose\nvalue will represent the current value of the clock. The location of\nthis pin is specified in the Facing attribute. The clock's value\nwill toggle on its schedule whenever ticks are enabled, and it will\ntoggle whenever it is clicked using the Poke\nTool.\nAttributes\nWhen the component is selected or being added,\nthe arrow keys alter its Facing attribute.\nFacing\nThe side of the component where its output pin should be.\nHigh Duration\nThe length of time within each cycle that the clock's output should\nbe 1.\nLow Duration\nThe length of time within each cycle that the clock's output should\nbe 0.\nLabel\nThe text within the label associated with the clock component.\nLabel Location\nThe location of the label relative to the component.\nLabel Font\nThe font with which to render the label.\nPoke Tool Behavior\nClicking a clock component will toggle its current output value\nimmediately. Note that all clocks are tied to the same simulated notion\nof time, so poking any one clock will toggle all clocks in the current\nsimulation.\nFPGA SynthesisSupports VHDL and Verilog synthesis.\nUp to Library Reference"
  },
  {
    "id": 77,
    "title": "Constante",
    "url": "/en/html/libs/wiring/constant.html",
    "text": "Constant\nConstant\nLibrary:\nWiring\nIntroduced:\n2.0 Beta 1 (in Gates library, moved to Wiring in 2.7.0)\nAppearance:\nBehavior\nEmits the value specified in its Value attribute.\nPins\nThere is only one pin, an output whose bit width matches the Data Bits\nattribute. The location of this pin is specified in the Facing\nattribute. The component constantly outputs on this pin whatever\nvalue specified in the Value attribute.\nAttributes\nWhen the component is selected or being added,\nthe hexademical digits '0' through '9' and 'a' through 'f' alter its Value attribute,\nAlt-0 through Alt-9 alter its Data Bits attribute,\nand the arrow keys alter its Facing attribute.\nFacing\nThe direction in which the pin is located relative to where the\nvalue is drawn.\nData Bits\nThe bit width of the value placed onto the wire.\nValue\nThe value, written in hexademical, that is emitted by the component.\nThe number of bits used to specify the value cannot exceed the\ncomponent's bit width.\nPoke Tool Behavior\nNone.\nFPGA SynthesisSupports VHDL and Verilog synthesis.\nUp to Library Reference"
  },
  {
    "id": 78,
    "title": "Fonte/Terra",
    "url": "/en/html/libs/wiring/const01.html",
    "text": ""
  },
  {
    "id": 79,
    "title": "Transistor",
    "url": "/en/html/libs/wiring/transist.html",
    "text": ""
  },
  {
    "id": 80,
    "title": "Transmissor",
    "url": "/en/html/libs/wiring/transmis.html",
    "text": ""
  },
  {
    "id": 81,
    "title": "Extensor de Bit",
    "url": "/en/html/libs/wiring/extender.html",
    "text": "Bit Extender\nBit Extender\nLibrary:\nWiring\nIntroduced:\n2.5.0 (in Base library, moved to Wiring in 2.7.0)\nAppearance:\nBehavior\nThe bit extender transforms a value into a value of another bit width.\nFor values being transformed into a smaller bit width,\nthe value is simply truncated to keep the lowest-order bits.\nFor values being transformed into a large bit width,\nthe lowest-order bits are kept the same,\nand you have a choice about what the additional high-order bits will be:\nThey can all be 0, all be 1, all match the input's sign bit\n(its highest-order bit), or the bit extender component can have an additional one-bit\ninput that determines the value for the upper bits.\nPins\nWest edge (input, bit width from Bit Width In attribute)\nThe multi-bit input whose value is to be transformed.\nEast edge (output, bit width from Bit Width Out attribute)\nThe computed output.\nNorth edge (input, bit width 1)\nSpecifies what the additional bits in the output should be.\nThis pin is available only when the Extension Type attribute is Input.\nAttributes\nWhen the component is selected or being added,\nthe digits 0 through 9 alter the Bit Width In attribute\nand Alt-0 through Alt-9 alter its Bit Width Out attribute.\nBit Width In\nThe input's bit width.\nBit Width Out\nThe output's bit width.\nExtension Type\nAssuming the output bit width exceeds the input bit width,\nthis attribute configures what the additional output bits should be.\nIf Zero or One, the additional bits are 0 or 1 accordingly.\nIf Sign, the additional bits are taken to match the highest-order bit in the input.\nAnd if Input, the component has a second input on its north side whose one-bit value is used for the additional bits.\nPoke Tool Behavior\nNone.\nFPGA SynthesisSupports VHDL and Verilog synthesis.\nUp to Library Reference"
  },
  {
    "id": 82,
    "title": "Biblioteca Portas",
    "url": "/pt/html/libs/gates/index.html",
    "text": "Biblioteca Portas\nBiblioteca Portas\nA biblioteca Portas inclui uma variedade de componentes simples,\ntodos com uma sa\u00edda cujo valor \u00e9 ditado inteiramente pelas suas entradas correntes.\nConstante\nPorta NOT\nBuffer\nPortas AND/OR/NAND/NOR\nPortas XOR/XNOR/Paridade \u00cdmpar/Paridade Par\nBuffer/Inversor Controlado"
  },
  {
    "id": 83,
    "title": "Porta NOT",
    "url": "/pt/html/libs/gates/not.html",
    "text": "Porta NOT\nPorta NOT\nBiblioteca:\nBase\nIntrodu\u00e7\u00e3o:\n2.0 Beta 1\nApar\u00eancia:\nComportamento\nA porta NOT emitir\u00e1 o complemento de qualquer entrada que receba.\nA tabela-verdade para a porta NOT \u00e9 a que se segue.\nxout\n01\n10\nSe alguma entrada n\u00e3o for especificada (ou seja, flutuante), ent\u00e3o a sa\u00edda\ntamb\u00e9m n\u00e3o ser\u00e1 especificada - a menos que a op\u00e7\u00e3o \"Sa\u00edda de Porta Quando Indefinida\"\nseja \"Erro para Entradas Indefinidas\", caso onde a sa\u00edda ser\u00e1 um valor de erro. Se\na entrada for um valor de erro, a sa\u00edda tamb\u00e9m o ser\u00e1.\nA porta NOT multibit executar\u00e1 a mesma opera\u00e7\u00e3o descrita acima bit a bit\nsobre a sua entrada.\nPinos (supondo o component voltado para leste)\nNa face oeste (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nA entrada do componente.\nNa face leste (sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nA sa\u00edda, cujo valor ser\u00e1 o complemento daquele \u00e0 entrada.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados,\ne as teclas com setas poder\u00e3o alterar o seu atributo\nDire\u00e7\u00e3o.\nDire\u00e7\u00e3o\nA dire\u00e7\u00e3o do componente (a posi\u00e7\u00e3o das sa\u00eddas em rela\u00e7\u00e3o \u00e0s entradas).\nBits de Dados\nA largura em bits da entrada e da sa\u00edda do componente.\nTamanho da Porta\nServe para determinar se \u00e9 para desenhar uma vers\u00e3o maior ou menor do\ncomponente.\nR\u00f3tulo\nO texto para o r\u00f3tulo associado \u00e0 porta.\nFonte do R\u00f3tulo\nA fonte com a qual o r\u00f3tulo ser\u00e1 mostrado.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nPermite que o r\u00f3tulo associado \u00e0 porta seja editado."
  },
  {
    "id": 84,
    "title": "Buffer",
    "url": "/pt/html/libs/gates/buffer.html",
    "text": "Buffer\nBuffer\nBiblioteca:\nBase\nIntrodu\u00e7\u00e3o:\n2.0 Beta 1\nApar\u00eancia:\nComportamento\nO buffer simplesmente passa para a sa\u00edda \u00e0 direita o conte\u00fado recebido\nna entrada do lado esquerdo.\nA tabela-verdade para o buffer de um bit \u00e9 a que se segue.\nxout\n00\n11\nSe a entrada n\u00e3o for especificada (ou seja, flutuante), ent\u00e3o a sa\u00edda\ntamb\u00e9m n\u00e3o ser\u00e1 especificada - a menos que a op\u00e7\u00e3o \"Sa\u00edda de Porta Quando Indefinida\"\nseja \"Erro para Entradas Indefinidas\", caso onde a sa\u00edda ser\u00e1 um valor de erro. Se\na entrada for um valor de erro, a sa\u00edda tamb\u00e9m o ser\u00e1.\nBuffers s\u00e3o os componentes de menor import\u00e2ncia dentre os dispon\u00edveis\npelo Logisim;\nsua presen\u00e7a na biblioteca Gates \u00e9 uma quest\u00e3o de completude\n(um componente para cada valor de um bit poss\u00edvel na tabela-verdade), pois \u00e9\ninteressante proporcionar uma funcionalidade equivalente a um elemento real.\nAinda assim, pode ser ocasionalmente \u00fatil para garantir que valores se propaguem\nem apenas uma dire\u00e7\u00e3o ao longo de uma conex\u00e3o.\nPinos (supondo o component voltado para leste)\nNa face oeste (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nA entrada para o componente.\nNa face leste (sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nA sa\u00edda, que sempre concordar\u00e1 com a entrada do lado esquerdo.\nAttributes\nQuando o componente for selecionado ou estiver sendo acrescentado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados,\ne as teclas com setas poder\u00e3o alterar o seu atributo\nDire\u00e7\u00e3o.\nDire\u00e7\u00e3o\nA dire\u00e7\u00e3o do componente (a posi\u00e7\u00e3o das sa\u00eddas em rela\u00e7\u00e3o \u00e0s entradas).\nBits de Dados\nA largura em bits da entrada e da sa\u00edda do componente.\nR\u00f3tulo\nO texto para o r\u00f3tulo associado \u00e0 porta.\nFonte do R\u00f3tulo\nA fonte com a qual o r\u00f3tulo ser\u00e1 mostrado.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nPermite que o r\u00f3tulo associado \u00e0 porta seja editado."
  },
  {
    "id": 85,
    "title": "Portas AND/OR/NAND/NOR",
    "url": "/pt/html/libs/gates/basic.html",
    "text": "Portas AND/OR/NAND/NOR\nPortas AND/OR/NAND/NOR\nBiblioteca:\nBase\nIntrodu\u00e7\u00e3o:\n2.0 Beta 1\nApar\u00eancia:\nAND\nOR\nNAND\nNOR\nConvencional\nRetangular\nDIN 40700\nComportamento\nAs portas AND, OR, NAND, e NOT servem para calcular as respectivas\nfun\u00e7\u00f5es das entradas, e emitir o resultado \u00e0 sa\u00edda.\nPor padr\u00e3o, todos as entradas que n\u00e3o estiverem conectadas ser\u00e3o consideradas\ndesligadas e, portanto, ignoradas - isso \u00e9, se a entrada realmente n\u00e3o tiver algo\nligado a ela, nem mesmo um fio.\nDessa forma, voc\u00ea poder\u00e1 inserir um porta com 5 entradas, mas se conectar somente\nduas entradas, ele ir\u00e1 funcionar como uma porta de 2 entradas; isso ir\u00e1 alivi\u00e1-lo\ndo trabalho de ter de se preocupar com a configura\u00e7\u00e3o do n\u00famero de entradas cada\nvez que voc\u00ea criar uma porta.\n(Se todas as entradas estiverem desconectadas, a sa\u00edda ser\u00e1 o valor de erro X.)\nAlguns usu\u00e1rios, no entanto, preferem que o Logisim insista que todas as entradas\ndevam estar ligado, pois isso corresponde melhor \u00e0s portas do mundo real.\nVoc\u00ea poder\u00e1 permitir esse comportamento, se usar em Projeto > Op\u00e7\u00f5es ...\nna guia Simula\u00e7\u00e3o, o item de menu\nErro para entradas indefinidas para\nSa\u00edda de Porta Quando Indefinida.\nA tabela-verdade para portas de duas entradas \u00e9 a que se segue.\n(A letra X representar\u00e1 o valor de erro,\ne a letra Z representar\u00e1 o valor flutuante.)\nAND\n01X/Z\n0000\n101X\nX/Z0XX\nOR\n01X/Z\n001X\n1111\nX/ZX1X\nNAND\n01X/Z\n0111\n110X\nX/Z1XX\nNOR\n01X/Z\n010X\n1000\nX/ZX0X\nEm resumo, esses componentes funcionar\u00e3o como esperado, enquanto todas as entradas\nforem 0 ou 1.\nSe uma entrada n\u00e3o for nem 0 nem 1 (for flutuante, ou tiver o valor de erro)\nent\u00e3o, o componente a tratar\u00e1 como se fosse ambos 0\ne\n1:\nse a sa\u00edda depender prioritariamente de um deles,\n(como quando uma porta AND tem uma entrada que \u00e9, definitivamente, 0\ne uma segunda entrada question\u00e1vel), esse ser\u00e1 o valor de sa\u00edda;\nmas se a sa\u00edda mudar dependendo se ele for 0 ou 1,\na sa\u00edda ter\u00e1 o valor de erro.\nAs vers\u00f5es multibit de cada porta ir\u00e1 realizar a opera\u00e7\u00e3o bit a bit\npara cada uma de suas entradas.\nPinos (supondo o component voltado para leste)\nNa face oeste (entradas, com largura em bits de acordo com o\natributo Bits de Dados)\nAs entradas para o componente. Haver\u00e1 tantas delas quanto\na quantidade especificada pelo atributo N\u00famero de Entradas.\nObservar que se voc\u00ea estiver usando portas convencionais, o lado oeste das\nportas OR e NOR ser\u00e3o curvos. No entanto, os pinos de entrada estar\u00e3o sobre uma linha.\nO Logisim ir\u00e1 tra\u00e7ar marcas curtas para indicar essas entradas; se voc\u00ea ultrapassar\nessas indica\u00e7\u00f5es, ele ir\u00e1 supor que a inten\u00e7\u00e3o seria apenas atingi-los.\nEm \"Pr\u00e9via da Impress\u00e3o\", essas marcas n\u00e3o ser\u00e3o desenhadas a menos que estejam\nconectados a fios.\nNa face leste (sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nA porta de sa\u00edda, cujo valor ser\u00e1 calculado com base nos valores atuais\ndas entradas conforme descrito acima.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nos d\u00edgitos de '0 'a '9' poder\u00e3o alterar o atributo\nN\u00famero de Entradas ,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados ,\ne as teclas com setas poder\u00e3o alterar o seu atributo\nDire\u00e7\u00e3o .\nDire\u00e7\u00e3o\nA dire\u00e7\u00e3o do componente (a posi\u00e7\u00e3o das sa\u00eddas em rela\u00e7\u00e3o \u00e0s entradas).\nBits de Dados\nA largura em bits das entradas e das sa\u00eddas do componente.\nTamanho da Porta\nServe para determinar se \u00e9 para desenhar uma vers\u00e3o maior ou menor do\ncomponente. Isso n\u00e3o afetar\u00e1 o n\u00famero de entradas, o que ser\u00e1 especificada\npelo atributo N\u00famero de Entradas. No entanto, se portas convencionais forem\nselecionadas, ent\u00e3o a porta ser\u00e1 desenhada com\n\"asas\"\npara acomodar\nas entradas adicionais al\u00e9m daquelas normalmente oferecidas.\nN\u00famero de Entradas\nServe para determinar quantos pinos o componente ter\u00e1 em sua face oeste.\nR\u00f3tulo\nO texto para o r\u00f3tulo associado \u00e0 porta.\nFonte do R\u00f3tulo\nA fonte com a qual o r\u00f3tulo ser\u00e1 mostrado.\nNegar x\nSe sim, a entrada ser\u00e1 negada antes de ser introduzida no porta.\nAs entradas ser\u00e3o contadas de cima para baixo, se a frente estiver a leste ou a oeste,\ne ser\u00e3o contados da esquerda para a direita, se a frente estiver ao norte ou ao sul.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nPermite que o r\u00f3tulo associado \u00e0 porta seja editado."
  },
  {
    "id": 86,
    "title": "Portas XOR/XNOR/Paridade par/\u00edmpar",
    "url": "/pt/html/libs/gates/xor.html",
    "text": "Portas XOR/XNOR/Paridade \u00cdmpar/Paridade Par\nPortas XOR/XNOR/Paridade \u00cdmpar/Paridade Par\nBiblioteca:\nBase\nIntrodu\u00e7\u00e3o:\n2.0 Beta 1 para XOR/Paridade \u00cdmpar/Par; 2.0 Beta 6 para XNOR\nApar\u00eancia:\nComportamento\nPortas XOR/XNOR/Paridade \u00cdmpar/Paridade Par servem para calcular as respectivas\nfun\u00e7\u00f5es das entradas, e emitir o resultado \u00e0 sa\u00edda.\nPor padr\u00e3o, todos as entradas que n\u00e3o estiverem conectadas ser\u00e3o consideradas\ndesligadas e, portanto, ignoradas - isso \u00e9, se a entrada realmente n\u00e3o tiver algo\nligado a ela, nem mesmo um fio.\nDessa forma, voc\u00ea poder\u00e1 inserir um porta com 5 entradas, mas se conectar somente\nduas entradas, ele ir\u00e1 funcionar como uma porta de 2 entradas; isso ir\u00e1 alivi\u00e1-lo do\ntrabalho de ter de se preocupar com a configura\u00e7\u00e3o do n\u00famero de entradas cada vez\nque voc\u00ea criar uma porta.\n(Se todas as entradas estiverem desconectadas, a sa\u00edda ser\u00e1 o valor de erro X.)\nAlguns usu\u00e1rios, no entanto, preferem que o Logisim insista que todas as entradas\ndevam estar ligado, pois isso corresponde melhor \u00e0s portas do mundo real.\nVoc\u00ea poder\u00e1 permitir esse comportamento, se usar em Projeto > Op\u00e7\u00f5es ...\nna guia Simula\u00e7\u00e3o, o item de menu\nErro para entradas indefinidas\npara\nSa\u00edda de Porta Quando Indefinida.\nA tabela-verdade para portas com duas entradas \u00e9 a que se segue.\nxyXOR\nXNOROddEven\n00\n01\n01\n01\n10\n10\n10\n10\n10\n11\n01\n01\nComo voc\u00ea pode ver, a porta Paridade \u00cdmpar e o porta XOR se comportam\nde forma id\u00eantica com duas entradas, da mesma forma, o fazem as portas\nParidade Par e XNOR.\nMas, se houver mais de duas entradas especificadas, a porta XOR emitir\u00e1\n1 apenas quando houver exatamente uma entrada igual a 1, enquanto a porta\nParidade \u00cdmpar ir\u00e1 emitir 1 apenas se houver um n\u00famero \u00edmpar de entradas iguais a 1.\nO porta XNOR ir\u00e1 emitir 1 s\u00f3 quando n\u00e3o houver exatamente uma entrada\nigual a 1, enquanto a porta Paridade Par ir\u00e1 emitir 1 se houver uma quantidade\npar de entradas iguais a 1. As portas XOR e XNOR incluem um atributo chamado\nComportamento para Entradas M\u00faltiplas que lhes permite serem configuradas para usar o\ncomportamento das portas Paridade \u00cdmpar e at\u00e9 mesmo o da Paridade Par.\nSe alguma entrada for um valor de erro (por exemplo, se os valores estiverem\nentrando em conflito em uma mesma conex\u00e3o) ou flutuante, a sa\u00edda tamb\u00e9m o ser\u00e1.\nAs vers\u00f5es multibit de cada porta executar\u00e3o a mesma opera\u00e7\u00e3o descrita acima\nbit a bit sobre suas entradas.\nNota:\nMuitas autoridades alegam que a porta XOR convencional\ndeve ter comportamento equivalente ao da Paridade \u00cdmpar, mas n\u00e3o h\u00e1 n\u00e3o um acordo\nsobre isso. O comportamento padr\u00e3o do Logisim para as portas XOR \u00e9 baseado\nno padr\u00e3o IEEE 91. \u00c9 tamb\u00e9m coerente significado intuitivo subjacente ao\ntermo ou exclusivo : um gar\u00e7om perguntando se voc\u00ea quer um prato de\npur\u00ea de batatas, cenouras, ervilhas, ou couve-flor s\u00f3 aceitar\u00e1 uma escolha,\ne n\u00e3o tr\u00eas, independentemente do que algumas autoridades possam dizer.\n(Devo admitir, por\u00e9m, que eu n\u00e3o sujeitei essa declara\u00e7\u00e3o a um teste rigoroso.)\nVoc\u00ea poder\u00e1 configurar as portas XOR e XNOR para usar a paridade, alterando o seu\natributo ao\nComportamento para Entradas M\u00faltiplas .\nPinos (supondo o component voltado para leste)\nNa face oeste (entradas, com largura em bits de acordo com o\natributo Bits de Dados)\nAs entradas para o componente. Haver\u00e1 tantos delas quanto o\nespecificado pelo atributo N\u00famero de Entradas.\nObservar que se voc\u00ea estiver usando portas convencionais, o lado oeste das\nportas XOR e XNOR ser\u00e1 curvo. No entanto, os pinos de entrada estar\u00e3o sobre uma linha.\nO Logisim ir\u00e1 tra\u00e7ar marcas curtas para indicar essas entradas; se voc\u00ea ultrapassar\nessas indica\u00e7\u00f5es, ele ir\u00e1 supor que a inten\u00e7\u00e3o seria apenas atingi-los.\nEm \"Pr\u00e9via da Impress\u00e3o\", essas marcas n\u00e3o ser\u00e3o desenhadas a menos que estejam\nconectados a fios.\nNa face leste (sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nA porta de sa\u00edda, cujo valor ser\u00e1 calculado com base nos valores atuais\ndas entradas conforme descrito acima.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nos d\u00edgitos de '0 'a '9' poder\u00e3o alterar o atributo\nN\u00famero de Entradas ,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados,\ne as teclas com setas poder\u00e3o alterar o seu atributo\nDire\u00e7\u00e3o.\nDire\u00e7\u00e3o\nA dire\u00e7\u00e3o do componente (a posi\u00e7\u00e3o das sa\u00eddas em rela\u00e7\u00e3o \u00e0s entradas).\nBits de Dados\nA largura em bits das entradas e das sa\u00eddas do componente.\nTamanho da Porta\nServe para determinar se \u00e9 para desenhar uma vers\u00e3o maior ou menor do\ncomponente. Isso n\u00e3o afetar\u00e1 o n\u00famero de entradas, o que ser\u00e1 especificada\npelo atributo N\u00famero de Entradas. No entanto, se o n\u00famero de entradas for maior que 3\n(para o formato menor) ou 5 (para o formato maior), ent\u00e3o a porta ser\u00e1 desenhada\ncom\n\"asas\"\npara acomodar as entradas adicionais al\u00e9m daquelas normalmente\noferecidas.\nN\u00famero de Entradas\nServe para determinar quantos pinos o componente ter\u00e1 em sua face oeste.\nR\u00f3tulo\nO texto para o r\u00f3tulo associado \u00e0 porta.\nFonte do R\u00f3tulo\nA fonte com a qual o r\u00f3tulo ser\u00e1 mostrado.\nComportamento para Entradas M\u00faltiplas (XOR e XNOR apenas)\nQuando houver tr\u00eas ou mais entradas, as sa\u00eddas das portas XOR/XNOR\nser\u00e3o baseadas se apenas uma entrada for igual a 1 (padr\u00e3o),\nou em um n\u00famero \u00edmpar de entradas forem iguais a 1.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nPermite que o r\u00f3tulo associado \u00e0 porta seja editado."
  },
  {
    "id": 87,
    "title": "Buffer/Inversor controlado",
    "url": "/pt/html/libs/gates/controlled.html",
    "text": "Buffer/Inversor Controlado\nBuffer/Inversor Controlado\nBiblioteca:\nPortas\nIntrodu\u00e7\u00e3o:\n2.0 Beta 1\nApar\u00eancia:\nComportamento\nO buffer e o inversor controlados, s\u00e3o muitas vezes chamados de\nbuffers/inversores tri-state, cada um tem uma entrada para\num bit de \"controle\". O valor desse pino afetar\u00e1 a forma como o componente\nse comportar\u00e1:\nQuando o valor nesse pino for 1, ent\u00e3o o componente se comporta exatamente\ncomo o equivalente n\u00e3o controlado (um buffer ou um\ninversor (porta NOT)).\nQuando o valor for 0 ou desconhecido (ou seja, flutuante), ent\u00e3o o valor\nda sa\u00edda componente tamb\u00e9m ser\u00e1 flutuante.\nQuando o valor for um valor de erro (e isso pode ocorrer caso dois\nvalores conflitantes estejam alimentando a entrada), ent\u00e3o a sa\u00edda ser\u00e1 um\nvalor de erro.\nUm buffer controlado pode ser \u00fatil quando voc\u00ea tiver uma conex\u00e3o\n(muitas vezes chamado de barramento (bus)), cujo valor dever\u00e1\ncorresponder a sa\u00edda de um dentre v\u00e1rios componentes. Ao se colocar um\nbuffer controlado entre cada sa\u00edda de componente e o barramento, voc\u00ea\npoder\u00e1 controlar se uma a sa\u00edda dever\u00e1 alimentar o barramento, ou n\u00e3o.\nPinos (supondo o componente voltado para leste, linha de controle \u00e0 direita)\nNa face oeste (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nA entrada do componente que ser\u00e1 usada para calcular a sa\u00edda se a\nentrada de controle for 1.\nNa face sul (entrada, com largura de 1 bit)\nEntrada de controle do componente.\nNa face leste (sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nSa\u00edda do componente, a qual estar\u00e1 flutuando se a entrada de controle\nfor 0 ou flutuante; ou igual ao o valor de erro, se a entrada de controle tamb\u00e9m\nestiver com erro; ou ser\u00e1 calculada com base na entrada, a oeste, se a entrada\nde controle for 1.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados,\ne as teclas com setas poder\u00e3o alterar o seu atributo\nDire\u00e7\u00e3o.\nDire\u00e7\u00e3o\nA dire\u00e7\u00e3o do componente (a posi\u00e7\u00e3o das sa\u00eddas em rela\u00e7\u00e3o \u00e0s entradas).\nBits de Dados\nA largura em bits da entrada e da sa\u00edda do componente.\nTamanho da Porta\nServe para determinar se \u00e9 para desenhar uma vers\u00e3o maior ou menor do\ncomponente (aplic\u00e1vel apenas ao inversor controlado).\nPosi\u00e7\u00e3o da Linha de Controle\nA posi\u00e7\u00e3o da linha de controle, imaginando-se que a sa\u00edda seja vista a partir\nda entrada: se o componente estiver voltado para a leste, e for escolhida a dire\u00e7\u00e3o\npara a direita, a linha de controle estar\u00e1 voltada para baixo; mas se for\nescolhida a dire\u00e7\u00e3o para a esquerda, a linha de controle estar\u00e1 para cima.\nR\u00f3tulo\nO texto para o r\u00f3tulo associado \u00e0 porta.\nFonte do R\u00f3tulo\nA fonte com a qual o r\u00f3tulo ser\u00e1 mostrado.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nPermite que o r\u00f3tulo associado \u00e0 porta seja editado."
  },
  {
    "id": 88,
    "title": "Biblioteca Plexers",
    "url": "/pt/html/libs/plexers/index.html",
    "text": "Biblioteca Plexers\nBiblioteca Plexers\nA biblioteca Plexers inclui componentes de controle.\nAssim como os componentes na biblioteca Portas, todos s\u00e3o combinacionais,\ngeralmente servem para rotear valores.\nMultiplexador\nDemultiplexador\nDecodificador\nCodificador de prioridades\nSeletor de Bits"
  },
  {
    "id": 89,
    "title": "Multiplexador",
    "url": "/pt/html/libs/plexers/mux.html",
    "text": "Multiplexador\nMultiplexexador\nBiblioteca:\nPlexers\nIntrodu\u00e7\u00e3o:\n2.0 Beta 11\nApar\u00eancia:\nComportamento\nCopiar\u00e1 uma entrada na face oeste para a sa\u00edda na face leste;\nqual das entradas ser\u00e1 copiada \u00e9 especificado pelo valor atual recebido atrav\u00e9s da\nentrada na face sul. Acho \u00fatil pensar em um demultiplexador como an\u00e1logo a um\ncomutador de trilhos em uma estrada de ferro, controlado por uma sele\u00e7\u00e3o feita \u00e0 entrada.\n(A prop\u00f3sito, algumas autoridades sugerem o termo em ingl\u00eas\nmultiplexor, mas multiplexer\n\u00e9 a ortografia predominante.)\nPinos (componente supondo voltado para leste)\nNa face oeste, quantidade vari\u00e1vel (entradas, com largura em bits de acordo\ncom o atributo Bits de Dados)\nValores de dados, um dos quais ser\u00e1 encaminhado para a sa\u00edda.\nCada valor de entrada de dados \u00e9 numerado, come\u00e7ando em 0 na face norte.\nNa face leste (sa\u00edda, com largura em bits de acordo com o atributo Bits de Dados)\nO valor da sa\u00edda ir\u00e1 coincidir com um dos valores das entradas na face oeste,\nborda, aquele cujo n\u00famero for o mesmo do valor atual recebido atrav\u00e9s da sele\u00e7\u00e3o de\nentrada na face sul.\nSe a selec\u00e7\u00e3o de entrada contiver algum bit n\u00e3o especificado (isto \u00e9, flutuante),\nent\u00e3o a sa\u00edda ser\u00e1 totalmente flutuante.\nNa face sul (entrada, com largura em bits de acordo com o atributo Bits de Dados)\nEntrada selecionada: o valor dessa entrada determinar\u00e1 qual a entrada\nna face oeste ser\u00e1 roteada para a sa\u00edda na face leste.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nos d\u00edgitos de '1' a '4' poder\u00e3o ter o seu atributo\nBits Selecionados\nalterado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados,\ne as teclas com setas poder\u00e3o alterar o seu atributo\nDire\u00e7\u00e3o.\nDire\u00e7\u00e3o\nA dire\u00e7\u00e3o do componente (especificar\u00e1 qual a sa\u00edda relativa \u00e0 entrada).\nBits Selecionados\nA largura em bits da entrada selecionada do componente na face sul.\nO n\u00famero de sa\u00eddas para o multiplexador ser\u00e1\n2\nBits Selecionados .\nBits de dados\nLargura dos bits de dados que ser\u00e3o roteados pelo multiplexador.\nTri-state?\nEspecificar\u00e1 se as sa\u00eddas n\u00e3o selecionadas dever\u00e3o ser flutuantes (Sim) ou\nzero (N\u00e3o).\nSa\u00edda desabilitada\nEspecificar\u00e1 qual dever\u00e1 ser o valor de cada bit das sa\u00eddas quando o\ncomponente estiver desabilitado (ou seja, quando o pino de habilita\u00e7\u00e3o estiver\nem 0). Op\u00e7\u00f5es incluem zero e flutuante; e neste caso, as sa\u00eddas estar\u00e3o\nefetivamente desconectadas de quaisquer outras portas.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 90,
    "title": "Demultiplexador",
    "url": "/pt/html/libs/plexers/demux.html",
    "text": "Demultiplexador\nDemultiplexador\nBiblioteca:\nPlexers\nIntrodu\u00e7\u00e3o:\n2.0 Beta 11\nAppearance:\nComportamento\nCopiar\u00e1 a entrada na face oeste para apenas uma das sa\u00eddas na face leste;\nqual ser\u00e1 a sa\u00edda ser\u00e1 especificado pelo valor atual recebido atrav\u00e9s da entrada\nna face sul. Acho \u00fatil pensar em um demultiplexador como an\u00e1logo a um\ncomutador de trilhos em uma estrada de ferro, controlado por uma sele\u00e7\u00e3o feita \u00e0 entrada.\n(A prop\u00f3sito, algumas autoridades sugerem o termo em ingl\u00eas\ndemultiplexor, mas demultiplexer\n\u00e9 a ortografia predominante.)\nPinos (componente supondo voltado para leste)\nNa face oeste (entrada, com largura de bits de acordo com o atributo Bits de Dados)\nO valor a ser encaminhado para uma das sa\u00eddas na face leste.\nNa face leste, quantidade vari\u00e1vel (sa\u00eddas, com largura de bits de acordo com o\natributo Bits de Dados)\nAs sa\u00eddas s\u00e3o numeradas a partir de 0 come\u00e7ando na face norte. Uma sa\u00edda\nir\u00e1 coincidir com a entrada oeste, se seu n\u00famero coincidir com o valor atual\nrecebido atrav\u00e9s da sele\u00e7\u00e3o de entrada na face sul; caso contr\u00e1rio, seu valor\nser\u00e1 ou todos zeros ou todos flutuantes, dependendo do valor do atributo\nTri-state?.\nSe a selec\u00e7\u00e3o de entrada contiver bits n\u00e3o especificados, todas as sa\u00eddas ser\u00e3o\nflutuantes.\nNa face sul (entrada, com largura de bits de acordo com o atributo\nBits de Dados)\nEntrada selecionada: o valor dessa entrada determinar\u00e1 para qual a sa\u00edda\nna face leste ser\u00e1 encaminhado o valor recebido na face oeste.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nos d\u00edgitos de '1' a '4' poder\u00e3o ter o seu atributo\nBits Selecionados\nalterado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de dados,\ne as teclas com setas poder\u00e3o alterar o seu atributo\nDire\u00e7\u00e3o.\nDire\u00e7\u00e3o\nA dire\u00e7\u00e3o do componente (especificar\u00e1 qual dos lados ter\u00e1 as sa\u00eddas).\nBits Selecionados\nA largura em bits da entrada selecionada do componente na face sul.\nO n\u00famero de sa\u00eddas para o demultiplexador ser\u00e1\n2 Bits Selecionados.\nBits de dados\nLargura dos bits de dados que ser\u00e3o roteados pelo demultiplexador.\nTri-state?\nEspecificar\u00e1 se as sa\u00eddas n\u00e3o selecionadas dever\u00e3o ser flutuantes (Sim) ou\nzero (N\u00e3o).\nSa\u00edda desabilitada\nEspecificar\u00e1 qual dever\u00e1 ser o valor de cada bit das sa\u00eddas quando o\ncomponente estiver desabilitado (ou seja, quando o pino de habilita\u00e7\u00e3o estiver\nem 0). Op\u00e7\u00f5es incluem zero e flutuante; e neste caso, as sa\u00eddas estar\u00e3o\nefetivamente desconectadas de quaisquer outras portas.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 91,
    "title": "Decodificador",
    "url": "/pt/html/libs/plexers/decoder.html",
    "text": "Decodificador\nDecodificador\nBiblioteca:\nPlexers\nIntrodu\u00e7\u00e3o:\n2.0 Beta 11\nApar\u00eancia:\nComportamento\nEmitir\u00e1 1 em apenas em uma sa\u00edda; a sa\u00edda em 1 depender\u00e1 do valor corrente\nrecebido atrav\u00e9s da entrada na face sul.\nPinos (componente supondo voltado para leste)\nNa face leste, quantidade vari\u00e1vel (sa\u00eddas, com largura de 1 bit)\nAs sa\u00eddas s\u00e3o numeradas come\u00e7ando em 0 na face norte. Cada sa\u00edda\nser\u00e1 1 se o seu n\u00famero coincidir com o valor atual recebido pela\nsele\u00e7\u00e3o da entrada na face sul; caso contr\u00e1rio, seu valor ser\u00e1 zero ou\nflutuante, dependendo do valor do atributo Tri-state?.\nSe a selec\u00e7\u00e3o da entrada contiver quaisquer bits n\u00e3o especificados,\ntodas as sa\u00eddas ser\u00e3o flutuantes.\nNa face sul (entrada, largura de acordo com o atributo Bits Selecionados)\nEntrada selecionada: o valor dessa entrada determinar\u00e1 quais as\nsa\u00eddas ser\u00e3o iguais a 1.\nAtributos\nQuando o componente for selecionado ou estiver sendo adicionado,\nos d\u00edgitos de '1' a '4' ir\u00e3o alterar os seus\nBits Selecionados\ne as teclas com setas poder\u00e3o alterar o seu atributo\nDire\u00e7\u00e3o.\nDire\u00e7\u00e3o\nA dire\u00e7\u00e3o do componente (especificar\u00e1 qual dos lados ter\u00e1 as sa\u00eddas).\nBits selecionados\nA largura em bits da entrada selecionada do componente na face sul.\nO n\u00famero de sa\u00eddas para o decodificador ser\u00e1\n2 Bits Selecionados .\nTri-state?\nEspecificar\u00e1 se as sa\u00eddas n\u00e3o selecionadas dever\u00e3o ser flutuantes (Sim) ou\nzero (N\u00e3o).\nSa\u00edda desabilitada\nEspecificar\u00e1 qual dever\u00e1 ser o valor de cada bit das sa\u00eddas quando o\ncomponente estiver desabilitado (ou seja, quando o pino de habilita\u00e7\u00e3o estiver\nem 0). Op\u00e7\u00f5es incluem zero e flutuante; e neste caso, as sa\u00eddas estar\u00e3o\nefetivamente desconectadas de quaisquer outras portas.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 92,
    "title": "Codificador de prioridades",
    "url": "/pt/html/libs/plexers/priencod.html",
    "text": "Codificador de prioridades\nCodificador de prioridades\nBiblioteca:\nPlexers\nIntrodu\u00e7\u00e3o:\n2.3.0\nApar\u00eancia:\nComportamento\nO componente tem um n\u00famero de entradas em sua face oeste, com a primeira\nrotulada com\n0\ne as outras numeradas a partir da\u00ed. O componente determinar\u00e1\nos \u00edndices das entradas cujos valores estar\u00e3o em 1, e emitir\u00e1 o maior \u00edndice.\nPor exemplo, se as entradas 0, 2, 5 e 6 estiverem todos um, ent\u00e3o o codificador de\nprioridades emitir\u00e1 o valor 110. Se n\u00e3o houver entradas em 1, ou se o componente for\ndesativado, a sa\u00edda do codificador de prioridades ser\u00e1 flutuante.\nO codificador de prioridade \u00e9 projetado de modo que uma s\u00e9rie de codificadores\npossam ser encadeados para acomodar entradas adicionais. Em particular, o componente\npermite apenas uma entrada e uma sa\u00edda habilitadas. Sempre que a habilita\u00e7\u00e3o for 0,\no componente estar\u00e1 desativado, e o resultado ser\u00e1 ter todos os bits flutuantes.\nA sa\u00edda habilitada ser\u00e1 1 quando o componente for ativado e nenhum das entradas\nindexadas forem iguais a 1. Assim, voc\u00ea pode ter dois codificadores de prioridades e\nligar sa\u00edda habilitada do primeiro \u00e0 entrada para habilita\u00e7\u00e3o do segundo. Mas se nenhuma\ndas entradas indexadas do primeiro for 1, todas as suas sa\u00eddas ser\u00e3o flutuantes, e\no segundo ser\u00e1 desativado. Por\u00e9m se nenhum das entradas indexadas do primeiro for 1,\nent\u00e3o sua sa\u00edda ter\u00e1 todos os bits flutuantes, e o segundo codificador de prioridades\nser\u00e1 ativado e ir\u00e1 identificar a entrada com a mais alta prioridade com um 1.\nUma sa\u00edda adicional do codificador de prioridades estar\u00e1 sempre em 1 quando\nestiver ativado e encontrar uma das entradas indexadas em 1. Quando\nhouver encadeamento de codificadores de prioridades, essa sa\u00edda poder\u00e1 ser usada\npara identificar qual dos codificadores foi acionado.\nPinos (componente supondo voltado para leste)\nNa face oeste, quantidade vari\u00e1vel (entradas, com largura de 1 bit)\nValores de entrada, indexados a partir de 0 no extremo superior/oeste da borda.\nNa face leste, pino superior (de sa\u00edda, com largura de bits de acordo com o\natributo Bits de Dados)\nSa\u00edda: o maior \u00edndice entre as entradas com valor igual a 1 - ou todos os\nbits flutuantes se n\u00e3o houver entradas em 1, ou se o componente estiver desativado\nvia Habilitar Entrada.\nNa face leste, pino inferior (de sa\u00edda, com largura de 1 bit)\nGrupo Sinal: 1, se o componente estiver habilitado e pelo menos uma entrada\nindexada tiver valor igual a 1, caso contr\u00e1rio, essa sa\u00edda ser\u00e1 0.\nNa face sul (entrada, com largura de 1 bit)\nHabilitar Entrada: se for 0, o componente estar\u00e1 desativado; caso contr\u00e1rio,\no componente estar\u00e1 habilitado.\nNa face norte (sa\u00edda, com largura de 1 bit)\nHabilitar Sa\u00edda: 1, se este componente estiver ativado e\nnenhuma das entradas indexadas estiver em 1, caso contr\u00e1rio a sa\u00edda ser\u00e1 0 .\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nos d\u00edgitos de '1' a '4' poder\u00e3o ter o seu atributo\nBits Selecionados\nalterado,\ne as teclas com setas poder\u00e3o alterar o seu atributo\nDire\u00e7\u00e3o .\nDire\u00e7\u00e3o\nA dire\u00e7\u00e3o do componente (especificar\u00e1 qual a sa\u00edda relativa \u00e0 entrada).\nBits selecionados\nA largura em bits da entrada prim\u00e1ria do componente.\nO n\u00famero de entradas indexadas pelo codificador de prioridades ser\u00e1\n2 Bits Selecionados .\nSa\u00edda desabilitada\nEspecificar\u00e1 qual dever\u00e1 ser o valor de cada bit das sa\u00eddas quando o\ncomponente estiver desabilitado (ou seja, quando o pino de habilita\u00e7\u00e3o estiver\nem 0). Op\u00e7\u00f5es incluem zero e flutuante; e neste caso, as sa\u00eddas estar\u00e3o\nefetivamente desconectadas de quaisquer outras portas.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 93,
    "title": "Seletor de bits",
    "url": "/pt/html/libs/plexers/selector.html",
    "text": "Seletor de Bits\nSeletor de Bits\nBiblioteca:\nPlexers\nIntrodu\u00e7\u00e3o:\n2.0.5\nApar\u00eancia:\nComportamento\nDada uma entrada com v\u00e1rios bits, o seletor ir\u00e1 dividi-lo em grupos de igual\ntamanho (a partir do bit de mais baixa ordem - LSB) e dar sa\u00edda\nao grupo escolhido pela sele\u00e7\u00e3o feita \u00e0 entrada.\nPor exemplo, se tivermos uma entrada de oito bits com 01010101, e desejarmos ter\numa sa\u00edda de tr\u00eas bits, em seguida, o grupo 0 ser\u00e1 o de menor ordem com tr\u00eas bits em 101;\ngrupo 1 ser\u00e3o os pr\u00f3ximos tr\u00eas bits, 010; e o grupo 2 ser\u00e3o os pr\u00f3ximos tr\u00eas bits,\n001. (Se faltarem bits, ser\u00e3o preenchidos com 0.) A escolha feita \u00e0 entrada\ndever\u00e1 ser um n\u00famero de dois bits que selecionar\u00e1 qual desses tr\u00eas grupos ir\u00e1\npara a sa\u00edda, se a sele\u00e7\u00e3o for 3, ent\u00e3o 000 ir\u00e1 a sa\u00edda .\nPinos (componente supondo voltado para leste)\nNa face oeste (entrada, com largura de bits de acordo com o\natributo Bits de Dados)\nValores dos dados a partir da qual os bits dever\u00e3o ser selecionados para a sa\u00edda.\nNa face leste (sa\u00edda, com largura de bits de acordo com o atributo Bits de Sa\u00edda)\nUm grupo de bits de dados, escolhido pelo Seletor de Entrada.\nNa face sul (entrada, com a largura de bits igual ao quociente entre Bits de Dados\ne Bits de Sa\u00edda, arredondada para cima)\nSeletor de Entrada: determinar\u00e1 qual dos grupos de bits dever\u00e1 ser encaminhado\npara a sa\u00edda.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nos d\u00edgitos de '0' a '9' poder\u00e3o ter o seu atributo\nBits de Sa\u00edda\nalterado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de dados ,\ne as teclas com setas poder\u00e3o alterar o seu atributo\nDire\u00e7\u00e3o .\nDire\u00e7\u00e3o\nA dire\u00e7\u00e3o do componente (especificar\u00e1 qual a sa\u00edda relativa \u00e0 entrada).\nBits de Dados\nLargura em bits da entrada de dados do componente.\nBits de sa\u00edda\nLargura em bits da sa\u00edda do componente.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 94,
    "title": "Biblioteca Aritm\u00e9tica",
    "url": "/pt/html/libs/arith/index.html",
    "text": "Biblioteca aritm\u00e9tica\nBiblioteca aritm\u00e9tica\nA biblioteca inclui componentes combinacionais capazes de\nexecutar opera\u00e7\u00f5es aritm\u00e9ticas com valores inteiros sem sinal e\ntamb\u00e9m com valores em complemento de dois.\nSomador\nSubtrator\nMultiplicador\nDivisor\nNegador\nComparador\nDeslocador\nContador de Bits\nIndexador de Bits"
  },
  {
    "id": 95,
    "title": "Somador",
    "url": "/pt/html/libs/arith/adder.html",
    "text": "Somador\nSomador\nBiblioteca:\nAritm\u00e9tica\nIntrodu\u00e7\u00e3o:\n2.0 Beta 11\nApar\u00eancia:\nComportamento\nEsse componente adicionar\u00e1 dois valores que vierem atrav\u00e9s das entradas a oeste e\nfornecer\u00e1 a soma na sa\u00edda a leste. O componente \u00e9 projetado de modo a poder ser\nconectado a outros somadores para tratar mais bits que os poss\u00edveis para um\n\u00fanico somador. A entrada carry-in fornecer\u00e1 um valor de um bit para ser adicionado ao\nmontante (se for especificado), e a sa\u00edda carry-out fornecer\u00e1 um valor de um bit\ncorrespondente ao valor de overflow (transbordamento) que poder\u00e1 ser enviado a\noutro componente.\nSe qualquer um dos adendos contiver algum bit flutuante ou erro, ent\u00e3o\no componente ir\u00e1 executar uma adi\u00e7\u00e3o parcial. Ou seja, ele ir\u00e1 calcular com\ntantos bits de mais baixa ordem quanto poss\u00edvel. Mas, acima do bit flutuante\nou de erro, o resultado ter\u00e1 bits flutuantes ou de erro.\nPinos\nNa face oeste, norte final (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nUm dos dois valores a serem somados.\nNa face oeste, extremo sul (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nO outro dos dois valores a serem somados.\nNa face norte, marcado\nc in\n(entrada, com largura de 1 bit)\nValor do carry-in a ser acrescentado \u00e0 soma. Se o valor for desconhecido\n(ou seja, flutuante), ent\u00e3o ser\u00e1 considerado como igual 0.\nNa face leste (sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nOs bits de mais baixa ordem dos\nBits de Dados\nda soma dos dois valores\nque vierem da face oeste, mais o bit de cin.\nNa face sul, marcado\nc out\n(sa\u00edda, com largura de 1 bit)\nO valor de carry-out calculado para a soma. Se os valores sem sinais somados\nproduzirem um resultado que caiba nos\nBits de Dados ,\nent\u00e3o, esse bit ser\u00e1 0, caso contr\u00e1rio, ser\u00e1 1.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados .\nBits de Dados\nA largura em bits dos valores a serem adicionados e tamb\u00e9m do resultado.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 96,
    "title": "Subtrator",
    "url": "/pt/html/libs/arith/subtractor.html",
    "text": "Subtrator\nSubtrator\nBiblioteca:\nAritm\u00e9tica\nIntrodu\u00e7\u00e3o:\n2.0 Beta 11\nApar\u00eancia:\nComportamento\nEsse componente subtrair\u00e1 os valores que vierem atrav\u00e9s das entradas a oeste\n(o superior menos o inferior) e fornecer\u00e1 na sa\u00edda leste a diferen\u00e7a. O componente\n\u00e9 projetado de modo a poder ser conectado a outros subtratores para subtrair mais\nbits do que for poss\u00edvel com um \u00fanico subtractor. A entrada borrow-in fornecer\u00e1 um\nvalor de um bit que dever\u00e1 ser tomado emprestado fora da diferen\u00e7a (se o empr\u00e9stimo\ntivier sido especificado), e um borrow-out indicar\u00e1 se o componente precisar pedir\num bit de mais alta ordem para completar a subtra\u00e7\u00e3o sem underflow (supondo\nsubtra\u00e7\u00e3o sem sinal).\nInternamente, o subtrator simplesmente executar\u00e1 uma nega\u00e7\u00e3o (NOT) bit a bit no\nsubtraendo, e ir\u00e1 adicion\u00e1-lo ao minuendo, juntamente com a nega\u00e7\u00e3o da entrada\nrelativa ao borrow-in. (O minuendo \u00e9 o primeiro operando (entrada superior),\ne o subtraendo ser\u00e1 o segundo (entrada inferior). Acontece que gosto dos termos antiquados.)\nSe um dos operandos contiver algum bit flutuante, ou de erro, ent\u00e3o o componente\nir\u00e1 executar uma subtra\u00e7\u00e3o parcial. Ou seja, ir\u00e1 calcular usando os bits de mais baixa\nordem poss\u00edveis. Por\u00e9m, acima do bit flutuante, ou de erro, o resultado ter\u00e1 bits\nflutuante ou de erro.\nPinos\nNa face oeste, extremo norte (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nO minuendo da subtra\u00e7\u00e3o, ou seja, o n\u00famero a partir do qual se ir\u00e1 subtrair.\nNa face oeste, extremo sul (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nO subtraendo da subtra\u00e7\u00e3o, ou seja, o n\u00famero que ser\u00e1 subtra\u00eddo do minuendo.\nNa face norte, marcado b in (entrada, com largura de 1 bit)\nSe for 1, ent\u00e3o 1 ser\u00e1 emprestado fora da diferen\u00e7a. Se o valor for\ndesconhecido (ou seja, flutuante), ent\u00e3o ser\u00e1 tomado como sendo igual a 0.\nNa face leste (sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nOs bits menos significativos dos\nBits de Dados\nda diferen\u00e7a dentre\nos dois valores oriundos da face oeste, menos o bin.\nNa face sul, marcado b out (sa\u00edda, com largura de 1 bit)\nO bit de empr\u00e9stimo calculado para a diferen\u00e7a. Se os valores subtra\u00eddos\ncomo valores sem sinal produzirem um valor negativo, ent\u00e3o esse bit ser\u00e1 1;\ncaso contr\u00e1rio, ser\u00e1 0.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados .\nBits de Dados\nA largura em bits dos valores a serem subtra\u00eddos e do resultado.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 97,
    "title": "Multiplicador",
    "url": "/pt/html/libs/arith/multiplier.html",
    "text": "Multiplicador\nMultiplicador\nBiblioteca:\nAritm\u00e9tica\nIntrodu\u00e7\u00e3o:\n2.0 Beta 20\nApar\u00eancia:\nComportamento\nEsse componente multiplicar\u00e1 os dois valores que vierem atrav\u00e9s das entradas a oeste\ne fornecer\u00e1 o produto na sa\u00edda leste. O componente \u00e9 projetado de forma\na poder ser conectado a outros multiplicadores para tratar com um\nmultiplicando com mais bits do que for poss\u00edvel para um \u00fanico multiplicador.\nA entrada carry-in fornecer\u00e1 um valor multibit para ser adicionado ao\nproduto (se ele for especificado), e sa\u00edda carry-out fornecer\u00e1 a metade superior\ndo resultado do produto, que poder\u00e1 ser enviada para outro multiplicador.\nSe o multiplicando, o multiplicador, ou a entrada carry-in de entrada contiverem\nalgum bit flutuante ou erro, ent\u00e3o, o componente ir\u00e1 realizar uma\nmultiplica\u00e7\u00e3o parcial. Ou seja, ele ir\u00e1 calcular como tantos bits de mais baixa ordem\nquanto poss\u00edvel. Mas acima do bit flutuante ou do erro, o resultado ter\u00e1\nbits flutuantes ou de erro. Observar que se a entrada carry-in for completamente\nflutuante, ent\u00e3o ser\u00e3o supostos todos os valores iguais a zero.\nPinos\nNa face oeste, extremo norte (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nO multiplicando (ou seja, o primeiro dos dois n\u00fameros para se\nmultiplicar).\nNa face oeste, extremo sul (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nO multiplicador (ou seja, o segundo dos dois n\u00fameros a serem multiplicados).\nNa face norte, marcado por c in (entrada, com largura em bits\nde acordo com o atributo Bits de Dados)\nValor de carry-in a ser adicionado ao produto. Se todos os bits do valor forem\ndesconhecidos (ou seja, flutuantes), ent\u00e3o eles ser\u00e3o considerados iguais a 0.\nNa face leste (sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nOs bits de mais baixa ordem dos Bits de Dados\ndo produto dos\ndois valores que vierem da face oeste, mais o valor do\nc in.\nNa face sul, marcado c out (sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nOs bits mais significativos dos\nBits de Dados\ndo produto.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados .\nBits de Dados\nA largura dos bits dos valores a serem multiplicados e tamb\u00e9m do resultado.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 98,
    "title": "Divisor",
    "url": "/pt/html/libs/arith/divider.html",
    "text": "Divisor\nDivisor\nBiblioteca:\nAritm\u00e9tica\nIntrodu\u00e7\u00e3o:\n2.0 Beta 22\nApar\u00eancia:\nComportamento\nEsse componente divide dois valores que vierem atrav\u00e9s das entradas a oeste e\nfornecer\u00e1 o quociente na sa\u00edda a leste. O componente \u00e9 projetado de forma\na poder ser conectado a outros divisores tratar um dividendo com mais bits que\no poss\u00edvel apenas um \u00fanico divisor. A entrada superior fornecer\u00e1 com os bits mais\nsignificativos dentre os\nBits de Dados do dividendo\n(se isso tiver sido especificado), e os bits em rem ser\u00e3o o resto inteiro\nda divis\u00e3o, que pode ser enviado para a entrada superior em outro divisor.\nSe o divisor for 0, nenhuma divis\u00e3o ser\u00e1 feita (ou seja, sup\u00f5e-se o divisor\nno m\u00ednimo igual a 1).\nO divisor executar\u00e1 essencialmente uma divis\u00e3o sem sinal. Ou seja, o\nresto estar\u00e1 sempre entre 0 e\ndivisor -1. O quociente ser\u00e1 sempre um\nn\u00famero inteiro de modo que\nquociente\n*\ndivisor\n+\nresto =\ndividendo .\nSe, no entanto, o\nquociente n\u00e3o couber nos\nBits de Dados ,\napenas os bits menos significativos ser\u00e3o reportados. O componente n\u00e3o oferecer\u00e1 m\u00e9todo\nalgum para o acesso aos bits mais significativos dos\nBits de Dados .\nSe qualquer um dos operandos contiver algum bit flutuante, ou com erro,\nent\u00e3o o componente ter\u00e1 as sa\u00eddas ou inteiramente flutuantes ou\nintegralmente com valores de erro.\nPinos\nNa face oeste, extremo norte (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nOs bits menos significativos dentre os\nBits de Dados\ndo dividendo\n(ou seja, o primeiro operando para a divis\u00e3o).\nNa face oeste, extremo sul (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nO divisor (ou seja, o segundo operando para a divis\u00e3o).\nNa face norte, marcado por upper (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nOs bits mais significativos dentre os\nBits de Dados\ndo dividendo\n(ou seja, o primeiro operando para a divis\u00e3o).\nNa face\nleste (sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nOs bits menos significativos dentre os\nBits de Dados\ndo quociente,\nconforme especificado acima.\nNa face sul, marcado por rem (sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nO resto da divis\u00e3o. Esse valor estar\u00e1 sempre entre 0 e divisor-1.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados .\nBits de Dados\nA largura em bits dos valores a serem divididos e o resultado.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 99,
    "title": "Negador",
    "url": "/pt/html/libs/arith/negator.html",
    "text": "Negador\nNegador\nBiblioteca:\nAritm\u00e9tica\nIntrodu\u00e7\u00e3o:\n2.0 Beta 22\nApar\u00eancia:\nComportamento\nServe para calcular o complemento de dois da entrada. Essa opera\u00e7\u00e3o ser\u00e1\nrealizada atrav\u00e9s da manuten\u00e7\u00e3o de todos os bits de ordem inferior at\u00e9 o\nprimeiro 1 de mais baixa ordem, e completando todos os bits acima disso.\nSe o valor \u00e0 entrada j\u00e1 for o menor valor negativo, ent\u00e3o a opera\u00e7\u00e3o\nn\u00e3o se realizar\u00e1 (pois n\u00e3o poder\u00e1 ser representada na forma de complemento de dois),\ne permanecer\u00e1 como o menor valor negativo.\nPinos\nNa face oeste (entrada, com largura em bits de acordo com o atributo Bits de Dados)\nO valor para se negar.\nNa face leste, marcado por -x (sa\u00edda, com largura de bits de acordo com o atributo Bits de Dados)\nA nega\u00e7\u00e3o da entrada. Se a entrada ultrapassar o menor valor negativo represent\u00e1vel\nno atributo Bits de Dados, ent\u00e3o, a sa\u00edda coincidir\u00e1 com a entrada.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados .\nBits de dados\nLargura dos bits de dados da entrada e da sa\u00edda do componente.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 100,
    "title": "Comparador",
    "url": "/pt/html/libs/arith/comparator.html",
    "text": "Comparador\nComparador\nBiblioteca:\nAritm\u00e9tica\nIntrodu\u00e7\u00e3o:\n2.0 Beta 22\nApar\u00eancia:\nComportamento\nServe para comparar dois valores, quer sejam sem sinal ou em complemento de dois,\ndependendo do atributo Tipo Num\u00e9rico. Normalmente, uma das sa\u00eddas ser\u00e1 1, e as outras\nduas sa\u00eddas ser\u00e3o 0.\nA compara\u00e7\u00e3o ser\u00e1 feita a partir dos bits mais significativos em\ncada n\u00famero e ir\u00e1 decrescendo, em paralelo, at\u00e9 onde forem encontrados dois valores\nem desacordo. Se, no entanto, um erro ou valor flutuante for encontrado, ent\u00e3o,\ntodas as sa\u00eddas ir\u00e3o corresponder a esse erro ou ao valor flutuante.\nPinos\nNa face oeste, extremo norte (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nO primeiro dos dois valores a serem comparados.\nNa face oeste, extremo sul (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nO segundo dos dois valores a serem comparados.\nNa face leste, marcado por >> (sa\u00edda, com largura de 1 bit)\nSer\u00e1 1, se a primeira entrada for maior que a segunda; ou 0,\nse a primeira entrada for menor ou igual \u00e0 segunda.\nNa face leste, marcado por = (sa\u00edda, com largura de 1 bit)\nSer\u00e1 1, se a primeira entrada \u00e9 igual \u00e0 segunda; ou 0,\nse a primeira entrada n\u00e3o for igual \u00e0 segunda.\nNa face leste, marcado por < (sa\u00edda, com largura de 1 bit)\nSer\u00e1 1, se a primeira entrada for menor que a segunda; ou 0,\nse a primeira entrada for maior ou igual a segunda.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados .\nBits de dados\nLargura dos bits de dados da entrada e da sa\u00edda do componente.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 101,
    "title": "Deslocador",
    "url": "/pt/html/libs/arith/shifter.html",
    "text": "Deslocador\nDeslocador\nBiblioteca:\nAritm\u00e9tica\nIntrodu\u00e7\u00e3o:\n2.3.0\nApar\u00eancia:\nComportamento\nEsse componente inclui duas entradas, os dados e dist, e\numa sa\u00edda, que ser\u00e1 o resultado do deslocamento dos dados por\ndist posi\u00e7\u00f5es. Ambos, os dados e a sa\u00edda, possuem o mesmo\nn\u00famero de bits. O componente oferece os seguintes tipos de deslocamento:\nL\u00f3gico para a Esquerda: Todos os bits de dados ser\u00e3o deslocados\nno sentido dos bits mais significativo dist posi\u00e7\u00f5es, com os bits\nmenos significativos nas dist posi\u00e7\u00f5es sendo preenchidos com 0's.\nPor exemplo, 11001011 logicamente deslocado para a esquerda duas vezes ser\u00e1 00101100.\n(Os dois primeiros ser\u00e3o perdidos.)\nL\u00f3gico para a Direita: Todos os bits de dados ser\u00e3o deslocados\nno sentido dos bits menos significativos dist posi\u00e7\u00f5es, com os\nbits mais significativos nas dist posi\u00e7\u00f5es preenchidos com 0's.\nPor exemplo, 11001011 logicamente deslocado para a direita duas vezes ser\u00e1 00110010.\n(Os dois \u00faltimos ser\u00e3o perdidos.)\nAritm\u00e9tico para a direita: Todos os bits de dados ser\u00e3o deslocados\nno sentido dos bits menos significativos dist posi\u00e7\u00f5es, com a parte\nmais significativa das dist posi\u00e7\u00f5es preenchidas com qualquer que seja\no conte\u00fado igualmente na parte mais significativa dos dados.\nPor exemplo, 11001011 aritmeticamente deslocado para a direita duas vezes ser\u00e1 11110010.\nCom Rota\u00e7\u00e3o para a Esquerda: Todos os bits de dados ser\u00e3o deslocados\nno sentido dos bits mais significativo dist posi\u00e7\u00f5es, com os bits mais\nsignificativos das dist posi\u00e7\u00f5es copiados para a parte menos significativa.\nPor exemplo, 11001011 rotacionado para a esquerda duas vezes ser\u00e1 00101111.\nCom Rota\u00e7\u00e3o para a Direita: Todos os bits de dados ser\u00e3o deslocados\nno sentido dos bits menos significativo dist posi\u00e7\u00f5es, com os bits menos\nsignificativos das dist posi\u00e7\u00f5es copiados para a parte mais significativa.\nPor exemplo, 11001011 direito rotacionado duas vezes ser\u00e1 11110010.\nObservar que dist contiver quaisquer entradas flutuantes ou erro,\na sa\u00edda ser\u00e1 composta inteiramente por valores de erro, j\u00e1 que n\u00e3o h\u00e1 maneira de\nsupor at\u00e9 que ponto dever\u00e1 ser deslocada a entrada.\nPinos\nNa face oeste, extremo norte (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nO valor a ser deslocado.\nNa face oeste, extremo sul (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nO n\u00famero de bits para os quais a entrada de dados dever\u00e1 ser deslocada.\nEssa entrada dever\u00e1 ter tantos bits quanto o n\u00famero m\u00ednimo para indicar qualquer\ndist\u00e2ncia desde 0 at\u00e9 Bits de Dados menos um, ou seja, dever\u00e1 ter como limite m\u00e1ximo\no logaritmo de base 2 dos Bits de Dados. Por exemplo, se os bits de dados\nforem 8, essa entrada exigir\u00e1 3 bits; mas, se fosse 9, exigiria 4 bits.\nNa face leste (sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nO resultado do deslocamento do valor de entrada pela quantidade em posi\u00e7\u00f5es.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados .\nBits de Dados\nA largura em bits dos dados de entrada e de sa\u00edda.\nTipo de deslocamento\nUm dos cinco tipos poss\u00edveis para deslocamento como destacado acima\n(L\u00f3gico para a Esquerda, L\u00f3gico para a Direita, Aritm\u00e9tico para a Direita,\nCom Rota\u00e7\u00e3o para a Esquerda, Com Rota\u00e7\u00e3o para a Direita).\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 102,
    "title": "Contador de bits",
    "url": "/pt/html/libs/arith/bitadder.html",
    "text": "Contador de Bits\nContador de Bits\nBiblioteca:\nAritm\u00e9tica\nIntrodu\u00e7\u00e3o:\n2.6.0\nApar\u00eancia:\nComportamento\nO componente determinar\u00e1 quantos bits em 1 est\u00e3o em sua(s) entrada(s) e emitir\u00e1 o\nn\u00famero total de bits em 1 em sua sa\u00edda. Por exemplo, para a entrada de 8 bits 10011101,\na sa\u00edda ser\u00e1 a 5, uma vez que h\u00e1 cinco bits 1 na entrada (o primeiro, o \u00faltimo,\ne uma sequ\u00eancia de tr\u00eas bits no meio).\nSe qualquer um dos bits de entrada for um valor flutuante ou erro, ent\u00e3o a sa\u00edda\nconter\u00e1 bits de erro na sa\u00edda correspondente \u00e0 faixa de sa\u00eddas poss\u00edveis\ndependendo se os valores de erro/flutuante forem contados como zeros ou uns.\nPor exemplo, se a entrada de 14 bits for 111x10110x1101, a sa\u00edda deve ser\npelo menos 9 (se cada \"x\" for interpretado como zero)\ne no m\u00e1ximo 11 (se eles forem interpretados como um).\nAssim, a sa\u00edda ser\u00e1 10EE: os dois bits mais significativos ser\u00e3o 1 e 0, pois todos\nos inteiros entre 9 e 11 t\u00eam 1 e 0 como seus dois primeiros bits, mas os dois \u00faltimos\nbits ser\u00e3o EE j\u00e1 que os inteiros entre 9 e 11 variam dentro desses limites.\nPinos\nNa face oeste (entradas, com largura em bits de acordo com o\natributo Bits de Dados)\nAs entradas cujos bits em 1 ser\u00e3o contados. O n\u00famero de entradas ser\u00e1 baseado\nno atributo N\u00famero de Entradas.\nNa face leste (sa\u00edda, com largura en bits calculada conforme descrito abaixo)\nO n\u00famero de bits de entrada iguais a 1. A largura em bits na sa\u00edda ser\u00e1 o\nn\u00famero m\u00ednimo de bits para armazenar o maior valor poss\u00edvel (que seria\no produto do atributo Bits de Dados pelo atributo N\u00famero de Entradas).\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nos d\u00edgito de '0' a '9' poder\u00e3o alterar seu atributo N\u00famero de Entradas e\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados .\nBits de dados\nLargura em bits da(s) entrada(s).\nN\u00famero de Entradas\nN\u00famero de valores de entrada.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 103,
    "title": "Indexador de bits",
    "url": "/pt/html/libs/arith/bitfinder.html",
    "text": "Indexador de Bits\nIndexador de Bits\nBiblioteca:\nArithmetic\nIntrodu\u00e7\u00e3o:\n2.6.1\nApar\u00eancia:\nComportamento\nO componente receber\u00e1 uma entrada multibit e determinar\u00e1 o \u00edndice de um bit,\nonde esse \u00edndice ser\u00e1 calculado pela contagem iniciando em 0 no bit de mais baixa ordem.\nO \u00edndice exato a ser calculado depender\u00e1 do atributo Tipo, como ilustrado\nnos exemplos do quadro abaixo para a amostra de 8 bits de uma entrada igual a\n11010100.\nTipoSa\u00edda para 11010100\nBit menos significativo em 12\nBit mais significativo em 17\nBit menos significativo em 00\nBit mais significativo 05\nPara o 1 de mais baixa ordem, a sa\u00edda ser\u00e1 2 porque come\u00e7ando o \u00edndice de bits\nem 0 para o bit de mais baixa ordem, o primeiro 1, a ser encontrado ser\u00e1 no \u00edndice 2.\n(Os bits de \u00edndices iguais a 0 e 1 s\u00e3o iguais a 0).\nPara o 1 de mais alta ordem, a sa\u00edda ser\u00e1 7 porque o bit 1 mais significativo\ncorresponder\u00e1 ao \u00edndice 7 (mais uma vez contando a partir do bit de mais baixa ordem\ncome\u00e7ando em 0).\nA sa\u00edda do componente na face sul indicar\u00e1 se o bit desejado\nfoi encontrado. Nos exemplos acima, envolvendo a entrada 11010100,\na sa\u00edda sul ser\u00e1 igual a 1 em todos os casos.\nMas se a entrada fosse 00000000 e o componente n\u00e3o encontrasse o 1 de\nmais baixa ordem, ent\u00e3o a sa\u00edda ao sul seria 0 - e a sa\u00edda borda a oeste\nseria 0 tamb\u00e9m.\nSe durante a pesquisa pelo valor desejado, um valor diferente de 0 ou 1 for\nencontrado (o bit pode ser flutuante ou um valor de erro),\nent\u00e3o, as duas sa\u00eddas ser\u00e3o compostas inteiramente por bits de erro.\nObservar que isso ocorrer\u00e1 apenas se o bit com problema for encontrado antes do bit\ndesejado. Para a entrada x1010100, por exemplo, a sa\u00edda ainda seria 2, se\no valor 1 de mais baixa ordem for o desejado; contudo, obteremos valores de erro\nse o componente estiver a procurar o valor 0 ou 1 de mais alta ordem, uma vez que\nhaver\u00e1 um bit errado na posi\u00e7\u00e3o mais significativa independente de ser 0 ou 1\no bit de mais alta ordem.\nPinos\nNa face oeste (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nA entrada multibit onde ser\u00e1 procurado o bit desejado.\nNa face leste (sa\u00edda, com largura em bits calculada conforme descrito abaixo)\nO \u00edndice do bit desejado, a contar de 0 para o bit de mais baixa ordem.\nA largura m\u00ednima em bits ser\u00e1 a necess\u00e1ria para armazenar o m\u00e1ximo valor poss\u00edvel para \u00edndice,\nque dever\u00e1 ser inferior ao valor do atributo Bits de Dados.\nNa face sul (sa\u00edda, largura de 1 bit)\nSer\u00e1 1, se o bit desejado for encontrado; 0,\nse todos os bits \u00e0 entrada forem o\ninverso do bit desejado; e ser\u00e1 igual ao valor de erro, se um valor diferente de 0 e\nde 1 for encontrado antes do bit desejado.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados .\nBits de Dados\nA largura em bits da entrada.\nTipo\nServe para indicar qual o bit a ser procurado por \u2014 o 0 de mais baixa ordem,\no 0 de mais alta ordem, o 1 de mais baixa ordem, e o 1 de mais alta ordem.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 104,
    "title": "Biblioteca Mem\u00f3ria",
    "url": "/pt/html/libs/mem/index.html",
    "text": "Biblioteca Mem\u00f3ria\nBiblioteca Mem\u00f3ria\nA biblioteca Mem\u00f3ria inclui componentes que guardam informa\u00e7\u00e3o.\nFlip-Flops D/T/J-K/S-R\nRegistrador\nContador\nRegistrador de Deslocamento\nGerador Aleat\u00f3rio\nRAM\nROM"
  },
  {
    "id": 105,
    "title": "Flip-Flop D/T/J-K/S-R",
    "url": "/pt/html/libs/mem/flipflops.html",
    "text": "Flip-Flops D/T/J-K/S-R\nFlip-Flops D/T/J-K/S-R\nBiblioteca:\nMem\u00f3ria\nIntrodu\u00e7\u00e3o:\n2.0 Beta 1\nApar\u00eancia:\nComportamento\nCada flip-flop armazena um \u00fanico bit como dado, o qual ser\u00e1 emitido atrav\u00e9s\nda sa\u00edda Q na face leste. Normalmente, o valor poder\u00e1 ser controlado\npelas entradas do lado oeste. Em particuar, o valor ir\u00e1 mudar quando houver varia\u00e7\u00e3o\nda entrada de clock, marcada por um tri\u00e2ngulo em cada flip-flop, quando\nessa passar de 0 para 1 (ou o contr\u00e1rio se assim configurado); ao ocorrer, portanto,\numa borda de subida, o valor mudar\u00e1 de acordo com a tabela abaixo.\nFlip-Flop D\nFlip-Flop T\nFlip-Flop J-K\nFlip-Flop S-R\nDQ\n00\n11\nTQ\n0Q\n1Q'\nJKQ\n00\nQ\n01\n0\n10\n1\n11\nQ'\nSRQ\n00\nQ\n01\n0\n10\n1\n11\n??\nOutra maneira de descrever os diferentes comportamentos dos flip-flops\nest\u00e1 no texto original em ingl\u00eas.\nFlip-Flop D: Quando houver varia\u00e7\u00e3o do clock, o valor\nguardado no flip-flop ser\u00e1 o valor na entrada D (Data)\nnaquele instante.\nFlip-Flop T: Quando houver varia\u00e7\u00e3o do clock, o valor\nguardado no flip-flop ser\u00e1 alternado ou mantido dependendo se o valor na entrada\nT (Toggle) for 1 ou 0.\nFlip-Flop J-K: Quando houver varia\u00e7\u00e3o do clock, o valor\nguardado no flip-flop ser\u00e1 alternado se as entradas J e K\nforem ambas iguais a 1 e ser\u00e1 mantido se ambas forem iguais a zero; se forem\ndiferentes, ent\u00e3o o valor se tornar\u00e1 1 se a entrada J\n(Jump) for 1 e ser\u00e1 0 se a entrada K (Kill)\nfor 1.\nFlip-Flop S-R: Quando houver varia\u00e7\u00e3o do clock, o valor\nguardado no flip-flop ser\u00e1 mantido se R e S forem ambos\niguais a 0; ir\u00e1 mudar para 0, se a entrada R (Reset) for 1, e\nse tornar\u00e1 1 se a entrada S (Set) for 1.\nO comportamento n\u00e3o ser\u00e1 especificado se as duas entradas forem forem iguais a 1.\n(No Logisim, o valor anterior do flip-flop ser\u00e1 mantido.)\nPor padr\u00e3o, o clock ir\u00e1 variar na borda de subida \u2014 ou seja, quando a\nentrada de clock variar de 0 para 1. Contudo, o atributo Gatilho permitir\u00e1 que\nessa mudan\u00e7a ocorra na borda de descida (quando a entrada de clock variar de 1\npara 0), ou em n\u00edvel baixo (enquanto a entrada de clock permanecer em 0). As\nop\u00e7\u00f5es de disparo dependentes do n\u00edvel n\u00e3o est\u00e3o dispon\u00edveis para os flip-flops\nT e J-K, porque esses se comportam de forma imprevis\u00edvel quando for\u00e7ados a\nalternar por tempo indeterminado.\nPinos\nNa face oeste, marcado por um tri\u00e2ngulo (entrada, com largura de 1 bit)\nclock: no instante em que o valor dessa entrada variar de 0 para 1\n(borda de subida), haver\u00e1 atualiza\u00e7\u00e3o de acordo com as entradas na face oeste.\nEnquanto se mantiver em 0 ou 1, essas entradas n\u00e3o ter\u00e3o efeito.\nNa face oeste, outros pino(s) rotulados (entrada(s), com largura de 1 bit)\nEssas entradas controlar\u00e3o como o valor do flip-flop ir\u00e1 mudar durante a\nsubida de borda do clock. O comportamento exato depender\u00e1 do tipo de\nflip-flop; a tabela acima resume esses comportamentos.\nNa face leste, marcado por Q, extremo norte (sa\u00edda,\ncom largura de 1 bit)\nEmitir\u00e1 o valor corrente armazenado pelo flip-flop.\nNa face leste, extremo sul end (sa\u00edda, com largura de 1 bit)\nEmitir\u00e1 o complemento do valor corrente armazenado pelo flip-flop.\nNa face sul, extremo leste (entrada, com largura de 1 bit)\nreset ass\u00edncrono: se for igual a 0 ou indefinido, essa entrada n\u00e3o ter\u00e1 efeito\nalgum. Enquanto se mantiver em 1, o valor do flip-flop ficar\u00e1 fixo em 0.\nIsso ocorrer\u00e1 assincronamente - ou seja, sem depender do valor corrente da entrada\nde clock. Enquanto se mantiver em 1, as outras entradas n\u00e3o ter\u00e3o efeito algum.\nNa face sul, posi\u00e7\u00e3o central (entrada, com largura de 1 bit)\nenable: se for igual a 0, o disparo do clock ser\u00e1 ignorado. O valor\ncorrente continuar\u00e1 a aparecer na sa\u00edda. Os gatilhos do clock estar\u00e3o habilitados\nquando essa entrada for 1 ou indefinida.\nNa face sul, extremo oeste (entrada, com largura de 1 bit)\nset ass\u00edncrono: se for igual a 1 ou indefinido, essa entrada n\u00e3o ter\u00e1 efeito\nalgum. Enquanto se mantiver em 1, o valor do flip-flop ficar\u00e1 fixo em 1.\nEnquanto se mantiver em 1, as outras entradas n\u00e3o ter\u00e3o efeito algum,\nexce\u00e7\u00e3o feita para a entrada reset, que tem prioridade.\nAtributos\nGatilho\nServe para configurar como a entrada de clock dever\u00e1 ser interpretada.\nO valor borda de subida indicar\u00e1 que a atualiza\u00e7\u00e3o do flip-flop dever\u00e1\nocorrer no instante em que o clock variar de 0 para 1. O valor borda de descida\nindicar\u00e1 que a atualiza\u00e7\u00e3o dever\u00e1 ocorrer no instante em que o clock variar de\n1 para 0. O valor n\u00edvel alto indicar\u00e1 que a atualiza\u00e7\u00e3o dever\u00e1 ocorrer\ncontinuamente enquanto o clock se mantiver em 1. E o valor n\u00edvel alto\nindicar\u00e1 que o valor dever\u00e1 ser atualizado continuamente enquanto a entrada de\nclock se mantiver em 0. Observar que as duas \u00faltimas op\u00e7\u00f5es n\u00e3o est\u00e3o dispon\u00edveis\npara os flip-flops T e J-K.\nR\u00f3tulo\nO texto para o r\u00f3tulo associado ao flip-flop.\nFonte do R\u00f3tulo\nA fonte com a qual o r\u00f3tulo ser\u00e1 mostrado.\nComportamento da ferramenta Testar\nAo cliclar sobre um flip-flop usando a ferramenta Testar isso ir\u00e1 alternar\no bit nele armazenado, a menos que as entradas ass\u00edncronas set/reset tenham fixado\no valor corrente do flip-flop.\nComportamento da ferramenta Texto\nPermite que o r\u00f3tulo associado \u00e0 porta seja editado."
  },
  {
    "id": 106,
    "title": "Registrador",
    "url": "/pt/html/libs/mem/register.html",
    "text": "Registrador\nRegistrador\nBiblioteca:\nMem\u00f3ria\nIntrodu\u00e7\u00e3o:\n2.0 Beta 1\nApar\u00eancia:\nComportamento\nUm registrador serve para guardar um \u00fanico valor multibit, que ser\u00e1 mostrado em\nhexadecimal dentro de seu ret\u00e2ngulo, e emitido em sua sa\u00edda\nQ\nsa\u00edda.\nQuando a entrada de clock (marcada por um tri\u00e2ngulo na face sul), assim indicar,\no valor armazenado no registrador ser\u00e1 alterado para o valor na entrada\nD\nnaquele instante. Exatamente quando a entrada de clock indicar\u00e1\na situa\u00e7\u00e3o para que isso aconte\u00e7a ser\u00e1 configurado atrav\u00e9s do atributo Gatilho.\nA entrada\nReset\nlevar\u00e1 o valor no registrador para 0 (em todos os bits)\nde forma ass\u00edncrona, ou seja, enquanto essa entrada for 1, o valor ficar\u00e1 fixo em 0,\nindependente da entrada de clock.\nPinos\nNa face leste, marcado por\nQ\n(sa\u00edda, com largura em bits\nde acordo com o atributo Bits de Dados)\nEmitir\u00e1 o valor atualmente armazenado pelo registrador.\nNa face oeste, marcado por\nD\n(entrada, (sa\u00edda, com largura em bits\nde acordo com o atributo Bits de Dados)\nEntrada de Dados: no instante em que o valor do clock variar de 0 para 1,\no valor no registrador ir\u00e1 mudar para o valor da entrada\nD\nnaquele\ninstante.\nNa face oeste, marcado por\nen\n(entrada, com largura de 1 bit)\nEnable: quando for 0, os gatilhos de clock ser\u00e3o ignorados. O valor atual\ncontinuar\u00e1 a aparecer na sa\u00edda. Os gatilhos de clock estar\u00e3o ativados quando essa\nentrada for 1 ou indefinida.\nNa face sul, indicada por um tri\u00e2ngulo (entrada, com largura de 1 bit)\nEntrada do Clock: no instante em que o valor da entrada variar de 0 para\n1 (borda de subida), o valor no registrador ser\u00e1 atualizado para o valor\nda entrada\nD .\nNa face sul, marcado por\n0\n(entrada, com largura de 1 bit)\nReset ass\u00edncrono: quando for 0 ou indefinido, essa entrada n\u00e3o ter\u00e1 efeito.\nEnquanto ele permanecer em 1, o valor de registrador ficar\u00e1 fixo em 0. Isso ocorrer\u00e1\nass\u00edncronamente - ou seja, sem levar em conta o valor atual da entrada de clock.\nEnquanto se mantiver em 1, as outras entradas n\u00e3o ter\u00e3o qualquer efeito.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados.\nBits de Dados\nA largura em bits do valor armazenado no registrador.\nGatilho\nServe para configurar como a entrada de clock ser\u00e1 interpretada.\nO valor\nBorda de Subida\nserve para indicar que o registrador dever\u00e1\natualizar o seu valor no instante em o clock variar de 0 para 1. O valor\nBorda de Descida\nindicar\u00e1 que ele dever\u00e1 realizar a atualiza\u00e7\u00e3o\nno instante em que o clock variar de 1 para 0. O valor\nN\u00edvel Alto\nindicar\u00e1 que o registrador dever\u00e1 atualizar continuamente, enquanto a entrada\nde clock for igual a 1. E o valor\nNivel Baixo\nindicar\u00e1 que ele dever\u00e1\nrealizar a atualiza\u00e7\u00e3o continuamente enquanto a entrada de clock for 0.\nR\u00f3tulo\nO texto para o r\u00f3tulo associado ao componente.\nFonte do R\u00f3tulo\nA fonte com a qual o r\u00f3tulo ser\u00e1 mostrado.\nComportamento da ferramenta Testar\nAo clicar sobre o registrador mudar\u00e1 o foco do teclado para esse componente\n(indicado por um ret\u00e2ngulo vermelho), e ao digitar d\u00edgitos hexadecimais poder\u00e1\nalterar o valor armazenado no registrador.\nComportamento da ferramenta Texto\nPermite que o r\u00f3tulo associado \u00e0 porta seja editado."
  },
  {
    "id": 107,
    "title": "Contador",
    "url": "/pt/html/libs/mem/counter.html",
    "text": "Contador\nContador\nBiblioteca:\nMem\u00f3ria\nIntrodu\u00e7\u00e3o:\n2.3.0\nApar\u00eancia:\nComportamento\nO contador mant\u00e9m certo valor, o qual ser\u00e1 emitido pela sa\u00edda\nQ. Cada vez que a entrada de clock (indicada por um tri\u00e2ngulo\nna face sul do componente) variar de acordo com o atributo Gatilho, o valor do\ncontador ser\u00e1 atualizado de acordo com as duas entradas na face oeste do componente:\na superior ser\u00e1 chamada load e a inferior count, e ser\u00e3o\ninterpretadas com se segue.\nloadcountA\u00e7\u00e3o do gatilho\n0 ou z0\nContador permanecer\u00e1 imut\u00e1vel.\n0 ou z1 ou z\nContador incrementar\u00e1.\n10\nContador carregar\u00e1 valor encontrado na entrada\nD.\n11 ou z\nContador decrementar\u00e1.\nO limite da contagem poder\u00e1 ser configurado pelo atributo Valor M\u00e1ximo.\nQuando o contador alcan\u00e7ar esse valor, o pr\u00f3ximo incremento levar\u00e1 o contador\nde volta para 0; e se j\u00e1 estiver em 0, um decremento o levar\u00e1 de volta ao\nValor M\u00e1ximo.\nAl\u00e9m da sa\u00edda Q, o componente tamb\u00e9m possui uma sa\u00edda de apenas\num bit chamada carry. Essa ser\u00e1 igual a 1 sempre que o contador\natingir o valor m\u00e1ximo e as entradas load e count indicarem\nque o componente dever\u00e1 fazer um incremento no pr\u00f3ximo passo - ou quando o contador\nestiver em 0 e as entradas load e count indicarem decremento\nno pr\u00f3ximo passo.\nA entrada clear reiniciar\u00e1 o contador a partir do valor 0\n(em todos os bits) assincronamente; ou seja, enquanto a entrada clr\nestiver em 1, o valor ficar\u00e1 fixo em 0, independente da entrada de clock.\nPinos\nNa face leste, marcado por Q (sa\u00edda, com largura em bits\nde acordo com o atributo Bits de Dados)\nEmitir\u00e1 o valor atualmente armazenado pelo contador.\nNa face leste, pino inferior (sa\u00edda, com largura de 1 bit)\ncarry: quando load e count indicarem incrementar,\na sa\u00edda ser\u00e1 1 sempre que o contador estiver no m\u00e1ximo. Quando load\ne count indicarem decrementar, essa sa\u00edda ser\u00e1 1 sempre que o contador\nestiver em 0. Todas as outras vezes, a sa\u00edda ser\u00e1 0.\nNa face oeste, pino superior (entrada, com largura de 1 bit)\nload: Se for 1, enquanto a entrada count for 0, o contador\nir\u00e1 carregar o valor encontrado na entrada data na pr\u00f3xima varia\u00e7\u00e3o\ndo clock - ou, se a entrada count for 1, o valor do contador\nser\u00e1 decrementado.\nNa face oeste, pino central marcado por D\n(entrada, com largura em bits de acordo com o atributo Bits de Dados)\nDado: quando o clock variar enquando a entrada load estiver em 1\ne count for 0, o conte\u00fado do contador ir\u00e1 mudar para o valor encontrado\nnessa entrada.\nNa face oeste, pino inferior marcado por ct (entrada,\ncom largura de 1 bit)\ncount: quando estiver em 1 ou desconectado, o valor no contador ser\u00e1\nincrementado sempre que a entrada de clock variar - ou decrementado se a\nentrada load tamb\u00e9m estiver em 1.\nNa face sul, indicado por um tri\u00e2ngulo (entrada, com largura de 1 bit)\nclock: no instante em que variar conforme especificado pelo atributo\nGatilho, o contador ir\u00e1 se atualizar de acordo com as entradas load e\ncount.\nNa face sul, marcado por 0 (entrada, com largura de 1 bit)\nclear: quando estiver em 0 ou indefinido, essa entrada n\u00e3o ter\u00e1 efeito algum.\nEnquanto permanecer em 1, o valor do contador se manter\u00e1 em 0 assincronamente.\nIsso ocorrer\u00e1 assincronamente - ou seja, sem depender do valor corrente da\nentrada de clock. Enquanto permanecer em 1, as outras entradas n\u00e3o ter\u00e3o\nefeito.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados.\nBits de Dados\nA largura em bits do valor emitido pelo componente.\nValor M\u00e1ximo\nO maior valor poss\u00edvel, a partir do qual o contador ir\u00e1 produzir sa\u00edda\nde carry.\nA\u00e7\u00e3o quando Overflow\nO comportamento do contador quanto tentar fazer incremento al\u00e9m do valor m\u00e1ximo\nou decrementar al\u00e9m de 0. H\u00e1 quatro a\u00e7\u00f5es poss\u00edveis:\nCircular\nO pr\u00f3ximo valor ser\u00e1 0 (se estiver incrementando - ou valor m\u00e1ximo se decrementando).\nPermanecer no Valor\nO contador permanecer\u00e1 no valor m\u00e1ximo (ou 0 se estiver decrementando)\nContinuar Contando\nO contador continuar\u00e1 incrementando/decrementando, mantendo o n\u00famero de bits\nconforme o estabelecido pelo atributo Bits de Dados.\nCarregar Pr\u00f3ximo Valor\nO pr\u00f3ximo valor ser\u00e1 carregado a partir da entrada D.\nGatilho\nServe para configurar como a entrada de clock ser\u00e1 interpretada.\nO valor\nBorda de Subida\nserve para indicar que o contador dever\u00e1\natualizar o seu valor no instante em o clock variar de 0 para 1. O valor\nBorda de Descida\nindicar\u00e1 que ele dever\u00e1 realizar a atualiza\u00e7\u00e3o\nno instante em que o clock variar de 1 para 0.\nR\u00f3tulo\nO texto para o r\u00f3tulo associado \u00e0 porta.\nFonte do R\u00f3tulo\nA fonte com a qual o r\u00f3tulo ser\u00e1 mostrado.\nComportamento da ferramenta Testar\nAo clicar sobre o contador mudar\u00e1 o foco do teclado para esse componente\n(indicado por um ret\u00e2ngulo vermelho), e ao digitar d\u00edgitos hexadecimais poder\u00e1\nalterar o valor armazenado no contador.\nComportamento da ferramenta Texto\nPermite que o r\u00f3tulo associado \u00e0 porta seja editado."
  },
  {
    "id": 108,
    "title": "Registrador de deslocamento",
    "url": "/pt/html/libs/mem/shiftreg.html",
    "text": "Registrador de Deslocamento\nRegistrador de Deslocamento\nBiblioteca:\nMem\u00f3ria\nIntrodu\u00e7\u00e3o:\n2.3.0\nApar\u00eancia:\nComportamento\nEsse registrador \u00e9 constitu\u00eddo por v\u00e1rios est\u00e1gios, onde a cada varia\u00e7\u00e3o do\nclock far\u00e1 com que um est\u00e1gio receba o valor do est\u00e1gio anterior, enquanto\num novo valor ser\u00e1 carregado no primeiro est\u00e1gio. O componente tamb\u00e9m poder\u00e1\nopcionalmente oferecer a carga e o armazenamento em paralelo para todos os est\u00e1gios.\nA entrada Limpar (clear) reiniciar\u00e1 todos os est\u00e1gios com valor\nigual a 0 assincronamente; ou seja, enquanto a entrada Limpar (clear)\nfor igual a 1, todos os valores ser\u00e3o iguais a 0, independente da entrada do\nclock.\nPinos\nUm asterisco (*) marcar\u00e1 os pinos que existir\u00e3o somente quando o atributo\nCarga em Paralelo estiver habilitado.\nNa face oeste, pino superior (entrada, com largura de 1 bit)\nDeslocar: se for 1 ou desconectado, todos os est\u00e1gios avan\u00e7ar\u00e3o ao gatilho\ndo clock; mas se for 0, n\u00e3o haver\u00e1 avan\u00e7o. Essa entrada ser\u00e1 ignorada\nse a entrada Carga for 1.\nNa face oeste, pino central (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nDado: quando houver avan\u00e7o dos est\u00e1gios, o valor encontrado nessa entrada\nser\u00e1 carregado no primeiro est\u00e1gio.\nNa face oeste, pino inferior marcado com um tri\u00e2ngulo (entrada,\ncom largura de 1 bit)\nClock: no instante em que sofrer varia\u00e7\u00e3o, conforme especificado\npelo atributo Gatilho, o componente poder\u00e1 avan\u00e7ar os est\u00e1gios ou carregar novos\nvalores.\n*Na face norte, pino \u00e0 esquerda (entrada, com largura de 1 bit)\nCarga: se for 1, os valores encontrados nos outros pinos na face norte\nser\u00e3o carregados em todos os est\u00e1gios na pr\u00f3xima varia\u00e7\u00e3o do clock. Se for 0\nou desconectado, n\u00e3o haver\u00e1 carga.\n*Na face norte, outros pinos (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nDado: esses valores ser\u00e3o carregados em todos os est\u00e1gios quando houver\nvaria\u00e7\u00e3o do clock e enquanto Carga estiver em 1. A entrada\nmais \u00e0 esquerda corresponder\u00e1 ao valor mais recente.\nNa face sul, pino \u00e0 esquerda (entrada, com largura de 1 bit)\nLimpar (clear): se for 1, todos os est\u00e1gios ser\u00e3o levados para zero\nassincronamente, e todas as outras entradas ser\u00e3o ignoradas.\n*Na face sul, outros pins (sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nSa\u00edda: Emitir\u00e1 o valor armazenado em cada est\u00e1gio, com o est\u00e1gio mais\nrecente refletido nos pinos mais \u00e0 esquerda (pr\u00f3ximo \u00e0 entrada\nLimpar (clear)).\nFace leste (sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nSa\u00edda: Emitir\u00e1 o valor armazenado no est\u00e1gio final (mais antigo).\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nos d\u00edgitos de '0 'a '9' poder\u00e3o alterar o atributo\nN\u00famero de Est\u00e1gios,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados.\nBits de Dados\nA largura em bits do valor armazenado em cada est\u00e1gio.\nN\u00famero de Est\u00e1gios\nO n\u00famero de est\u00e1gios inclu\u00eddos no componente.\nCarga em Paralelo\nSe sim, ent\u00e3o o componente incluir\u00e1 entradas e sa\u00eddas facilitando o\nacesso em paralelo a todos os valores dos est\u00e1gios.\nGatilho\nServe para configurar como a entrada de clock ser\u00e1 interpretada. O valor\nBorda de Subida\nserve para indicar que o registrador dever\u00e1\natualizar seu valor no instante em o clock variar de 0 para 1. O valor\nBorda de Descida\nindicar\u00e1 que ele dever\u00e1 realizar a atualiza\u00e7\u00e3o\nno instante em que o clock variar de 1 para 0.\nR\u00f3tulo\nO texto para o r\u00f3tulo associado ao componente.\nFonte do R\u00f3tulo\nA fonte com a qual o r\u00f3tulo ser\u00e1 mostrado.\nComportamento da ferramenta Testar\nSe o atributo Carga em Paralelo for n\u00e3o, ou se o atributo Bits de Dados\nfor maior que 4, ent\u00e3o o acionamento do registrador n\u00e3o ter\u00e1 efeito. Do contr\u00e1rio,\nao clicar sobre o componente, o foco do teclado estar\u00e1 sobre o est\u00e1gio selecionado\n(indicado por um ret\u00e2ngulo vermelho), e ao digitar um d\u00edgito hexadecimal, o valor\ndesse est\u00e1gio ir\u00e1 mudar.\nComportamento da ferramenta Texto\nPermite que o r\u00f3tulo associado \u00e0 porta seja editado."
  },
  {
    "id": 109,
    "title": "Gerador aleat\u00f3rio",
    "url": "/pt/html/libs/mem/random.html",
    "text": "Gerador Aleat\u00f3rio\nGerador Aleat\u00f3rio\nBiblioteca:\nMem\u00f3ria\nIntrodu\u00e7\u00e3o:\n2.3.0\nApar\u00eancia:\nComportamento\nEste componente itera atrav\u00e9s de uma sequ\u00eancia de n\u00fameros pseudo-aleat\u00f3rios, que\navan\u00e7ar\u00e1 para o pr\u00f3ximo valor na seq\u00fc\u00eancia cada vez que o clock for gatilhado\nenquanto o componente estiver ativado. Tecnicamente falando, o algoritmo\nusadoa para calcular a sequ\u00eancia \u00e9 um gerador pseudo-linear congruencial: a partir de\numa semente\nr0, o pr\u00f3ximo valor\nr1 ser\u00e1 o n\u00famero\nr1 =\n(25,214,903,917 r0 + 11)\nmod 248\nO pr\u00f3ximo valor r2\nser\u00e1 computado a partir de r1\nusando o mesmo c\u00e1lculo, e assim por diante. Essa sequ\u00eancia \u00e9 de n\u00fameros de 48 bits;\no valor produzido pelo componente ser\u00e1 formado pelos bits de mais baixa ordem\ncomo configurado pelo seu atributo de Bits de Dados, ap\u00f3s dispensar os 12 primeiros\nbits de mais baixa ordem da semente atual.\nAl\u00e9m da entrada de clock, o componente tamb\u00e9m inclui uma entrada para\nhabilita\u00e7\u00e3o\nEnable , que far\u00e1 a entrada de clock ser ignorada\nquando seu valor for 0, e a entrada\nReset , que redefinir\u00e1 o valor do\ncomponente de forma ass\u00edncrona ao valor inicial da semente r\n0 .\nA semente inicial \u00e9 configur\u00e1vel pelo usu\u00e1rio. Se ela estiver configurada em 0\n(o padr\u00e3o), ent\u00e3o a semente ser\u00e1 baseada no tempo atual, quando instru\u00eddo\npela entrada de Reset, o componente iniciar\u00e1 com a mesma semente usada\nanteriormente. Ele adquirir\u00e1 uma nova semente somente quando toda a simula\u00e7\u00e3o\nfor reiniciada.\nPinos\nNa face leste, marcado por\nQ\n(sa\u00edda, com largura em bits\nde acordo com o atributo Bits de Dados)\nEmitir\u00e1 o valor atualmente armazenado pelo registrador.\nNa face oeste, pino superior, marcado por um tri\u00e2ngulo (entrada,\ncom largura de 1 bit)\nClock: no instante em que essa entrada for acionada, conforme\nespecificado pelo atributo Gatilho, o componente passar\u00e1 ao pr\u00f3ximo n\u00famero\nna sequ\u00eancia.\nNa face oeste, pino inferior (entrada, com largura de 1 bit)\nEnable: O componente estar\u00e1 ativado enquanto essa entrada estiver\ndesconectada ou igual a 1; mas se for 0, ent\u00e3o a entrada de clock ser\u00e1 ignorada.\nNa face sul (entrada, com largura de 1 bit)\nReset: quando for 1, a sequ\u00eancia pseudoaleat\u00f3ria assincronamente\nretornar\u00e1 para o valor inicial da semente.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados.\nBits de Dados\nA largura em bits do valor armazenado no registrador.\nSemente\nO valor inicial usado para a sequ\u00eancia pseudoaleatoria. Se for 0\n(o padr\u00e3o), ent\u00e3o o valor inicial ser\u00e1 baseado no tempo atual em que a\nsimula\u00e7\u00e3o iniciar.\nGatilho\nServe para configurar como a entrada de clock dever\u00e1 ser interpretada.\nO valor\nBorda de Subida\nindicar\u00e1 que o componente dever\u00e1 atualizar\nseu valor no instante em que o clock variar de 0 para 1. O valor\nBorda de Descida\nindicar\u00e1 que ele dever\u00e1 ser atualizado no instante\nem que o clock variar de 1 para 0.\nR\u00f3tulo\nO texto para o r\u00f3tulo associado ao componente.\nFonte do R\u00f3tulo\nA fonte com a qual o r\u00f3tulo ser\u00e1 mostrado.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 110,
    "title": "RAM",
    "url": "/pt/html/libs/mem/ram.html",
    "text": "RAM\nRAM\nBiblioteca:\nMem\u00f3ria\nIntrodu\u00e7\u00e3o:\n2.0 Beta 1\nApar\u00eancia:\nComportamento\nO componente RAM, certamente \u00e9 o componente mais complexo nas bibliotecas\npredefinidas do Logisim, capaz de armazenar at\u00e9 16,777,216 valores (especificado pelo\natributo Largura em Bits do Endere\u00e7o), cada um deles com at\u00e9 32 bits (especificado\npleo atributo Largura em Bits de Dados). Um circuito poder\u00e1 ler e escrever os valores\nna RAM. O usu\u00e1rio tamb\u00e9m poder\u00e1 modific\u00e1-los interativamente via a ferramenta Testar,\nou poder\u00e1 alter\u00e1-los completamente via a ferramenta Menu.\nOs valores correntes ser\u00e3o mostrados no componente. Os endere\u00e7os apresentados\nser\u00e3o listados em cinza \u00e0 esquerda. Na parte de dentro, cada valor ser\u00e1 listado\nem hexadecimal. O endere\u00e7o atual do endere\u00e7o selecionado ser\u00e1 mostrado em texto\nnegativo (branco sobre preto).\nO componente RAM oferece tr\u00eas interfaces diferentes, dependendo do atributo\nInterface de Dados.\nUma porta para leitura/escrita s\u00edncrona (padr\u00e3o)\nO componente possui na sua face leste uma porta que servir\u00e1 tanto\npara ler quanto para gravar dados. Qual a a\u00e7\u00e3o a ser executada depender\u00e1\nda entrada marcada por ld: 1 (ou flutuante) indicar\u00e1 a leitura de\ndados do endere\u00e7o informado pela face oeste, e 0 indicar\u00e1 a escrita dos dados\nentregues na porta. Para transmitir dados para dentro e para fora do componente,\nvoc\u00ea precisar\u00e1 usar um componente do tipo Buffer Controlado, como ilustrado\nabaixo.\nUma porta para leitura/escrita ass\u00edncrona\nO mesmo descrito acima, exceto que n\u00e3o haver\u00e1 participa\u00e7\u00e3o do clock.\nO valor encontrado no barramento de dados ser\u00e1 carregado na mem\u00f3ria sempre que\na entrada ld estiver em 0. Se, enquanto ld estiver em 0, o\nendere\u00e7o ou os dados mudarem, ent\u00e3o uma carga adicional ocorrer\u00e1. Essa op\u00e7\u00e3o\n\u00e9 a que mais se aproxima de muitas das mem\u00f3rias de acesso aleat\u00f3rio comumente\ndispon\u00edveis.\nPortas separadas para leitura e escrita\nDuas portas est\u00e3o dispon\u00edveis - uma na face oeste para a escrita de dados,\ne outra na face leste para leitura de dados. Essa op\u00e7\u00e3o retirar\u00e1 a necessidade\nde se lidar com o Buffer Controlado e ent\u00e3o ficar\u00e1 mais f\u00e1cil de usar.\nPinos\nA Na face oeste (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nServe para selecionar quais os valores estar\u00e3o sendo acessados atualmente\npelo circuito.\nD Na face oeste (entrada/sa\u00edda, com largura em bits de acordo\ncom o atributo Bits de Dados)\nSe essa entrada estar\u00e1 presente somente se \"portas separadas para leitura e\nescrita\" tiverem sido selecionadas pelo atributo Interface de Dados. Quando uma\nescrita for requisitada (via mudan\u00e7a do clock de 0 para 1 enquanto\nsel e str forem ambos iguais a 1 ou flutuante), o valor\nencontrado nessa porta ser\u00e1 escrito na mem\u00f3ria no endere\u00e7o atualmente selecionado.\nD Na face leste (entrada/sa\u00edda ou sa\u00edda, com largura em bits\nde acordo com o atributo Bits de Dados)\nSe sel e ld forem iguais a 1 ou flutuante, ent\u00e3o\no componente RAM emitir\u00e1 o valor encontrado no endere\u00e7o corrente por essa porta.\nSe houver uma porta para leitura/escrita, o valor lido nessa porta ser\u00e1\nescrito onde quer que o armazenamento seja requisitado.\nstr Na face sul (entrada, com largura de 1 bit)\nstore: essa entrada estar\u00e1 presente somente se \"portas separadas para leitura e\nescrita\" tiverem sido selecionadas pelo atributo Interface de Dados.\nSe for 1 ou flutuante, um pulso de clock resultar\u00e1 na escrita dos dados\nencontrados na face oeste na mem\u00f3ria (se a entrada sel tamb\u00e9m for 1 ou\nflutuante).\nsel Na face sul (entrada, com largura de 1 bit)\nchip select: essa entrada habilita ou desabilita o m\u00f3dulo RAM por inteiro,\ncaso o valor seja igual a 1, flutuante ou 0. Essa entrada destina-se primariamente\npara as situa\u00e7\u00f5es em que houver m\u00faltiplas RAMs, mas somente uma delas deva estar\nhabilitada em certo instante.\nTri\u00e2ngulo na face sul (entrada, com largura de 1 bit)\nclock: essa entrada estar\u00e1 ausente quanto o atributo Interface de Dados\nfor \"uma porta ass\u00edncrona para leitura/escrita\". Em outras circunst\u00e2ncias, quando\nld for igual a 0, e essa entrada variar de 0 para 1 (e sel\nfor igual a 1, indefinido e clr for 0), ent\u00e3o o valor no endere\u00e7o\natualmente selecionado ser\u00e1 alterado para o valor presente no pino D.\nEnquanto a entrada de clock permanecer em 0 ou 1, no entanto, o valor em\nD n\u00e3o ser\u00e1 escrito na mem\u00f3ria.\nld Na face sul (entrada, com largura de 1 bit)\nload: serve para selecionar se a RAM dever\u00e1 emitir (em D)\no valor no endere\u00e7o atual (A). O comportamento dessa sa\u00edda\nestar\u00e1 habilitado se out estiver em 1 ou indefinido; se out\nfor 0, ent\u00e3o nenhum valor ser\u00e1 colocado em D - mas se houver uma porta\nde leitura/escrita combinada, a escrita estar\u00e1 habilitada.\nclr Na face sul (entrada, com largura de 1 bit)\nclear: quando for igual a 1, todos os valores na mem\u00f3ria ficar\u00e3o iguais\na 0, independente do que estiver nas outras portas.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nos d\u00edgitos de '0 'a '9' poder\u00e3o alterar o atributo\nN\u00famero de Entradas,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados.\nLargura em Bits do Endere\u00e7o\nA largura em bits do endere\u00e7o. O n\u00famero de valores armazenados na\nROM ser\u00e1 2Largura em Bits do Endere\u00e7o.\nBits de Dados\nA largura em bits de cada valor individual na mem\u00f3ria.\nInterface de Dados\nServe para configurar quais das tr\u00eas interfaces ser\u00e3o usadas para comunicar\ndados para dentro e para fora do componente.\nComportamento da ferramenta Testar\nVer Testar mem\u00f3ria\nno Guia do Usu\u00e1rio.\nComportamento da ferramenta Texto\nNenhum.\nComportamento da ferramenta Menu\nVer Menus pop-up e Arquivos\nno Guia do Usu\u00e1rio."
  },
  {
    "id": 111,
    "title": "ROM",
    "url": "/pt/html/libs/mem/rom.html",
    "text": "ROM\nROM\nBiblioteca:\nMem\u00f3ria\nIntrodu\u00e7\u00e3o:\n2.1.0\nApar\u00eancia:\nComportamento\nO componente ROM pode armazenar at\u00e9 16,777,216 valores (especificado pelo\natributo Largura em Bits do Endere\u00e7o), cada um deles com at\u00e9 32 bits (especificado\npleo atributo Largura em Bits de Dados). Um circuito poder\u00e1 acessar os valores\ncorrentes guardados na ROM, mas n\u00e3o poder\u00e1 alter\u00e1-los. O usu\u00e1rio poder\u00e1 modific\u00e1-los\ninterativamente via a ferramenta Testar, ou poder\u00e1 alter\u00e1-los completamente via\nferramenta Menu.\nDiferente do componente RAM, o conte\u00fado corrente armazenado na ROM poder\u00e1 ser\num atributo. Assim, se um circuito que contiver um componente ROM for usado duas\nvezes, ent\u00e3o esse ir\u00e1 manter os mesmos valores em ambos os usos. Tamb\u00e9m por causa\ndesse comportamento, os valores atualmente na ROM poder\u00e3o ser guardados em arquivos\ncriados pelo Logisim.\nOs valores correntes ser\u00e3o mostrados no componente. Os endere\u00e7os apresentados\nser\u00e3o listados em cinza \u00e0 esquerda. Na parte de dentro, cada valor ser\u00e1 listado\nem hexadecimal. O endere\u00e7o atual do endere\u00e7o selecionado ser\u00e1 mostrado em texto\nnegativo (branco sobre preto).\nPinos\nA Na face oeste (entrada, com largura em bits de acordo com o\natributo Bits de Dados)\nServe para selecionar quais os valores estar\u00e3o sendo acessados atualmente\npelo circuito.\nD Na face leste (entrada/sa\u00edda, com largura em bits de acordo com o\natributo Bits de Dados)\nServe para emitir o valor do endere\u00e7o atualmente selecionado\npelo pino D se sel for 1 ou flutuante. Se sel\nfor 0, ent\u00e3o D ser\u00e1 flutuante.\nsel Na face sul (entrada, com largura de 1 bit)\nSe voc\u00ea tiver apenas um m\u00f3dulo ROM, ignore essa entrada.\nSe voc\u00ea tiver m\u00faltiplos m\u00f3dulos ROM em paralelo, poder\u00e1 usar essa entrada\npara habilitar ou desabilitar o m\u00f3dulo inteiro, caso seu valor seja 1 ou 0.\nEm outras palavras, quando este valor for 0, nenhum valor ser\u00e1 emitido\npela sa\u00edda D.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nos d\u00edgitos de '0 'a '9' poder\u00e3o alterar o atributo\nN\u00famero de Entradas,\nAlt-0 at\u00e9 ALT-9 ir\u00e3o alterar o seu atributo\nBits de Dados.\nLargura em Bits do Endere\u00e7o\nA largura em bits do endere\u00e7o. O n\u00famero de valores armazenados na\nROM ser\u00e1 2Largura em Bits do Endere\u00e7o.\nBits de Dados\nA largura em bits de cada valor individual na mem\u00f3ria.\nConte\u00fado\nGuardar\u00e1 os conte\u00fados da mem\u00f3ria.\nComportamento da ferramenta Testar\nVer Testar mem\u00f3ria\nno Guia do Usu\u00e1rio.\nComportamento da ferramenta Texto\nNenhum.\nComportamento da ferramenta Menu\nVer Menus pop-up e Arquivos\nno Guia do Usu\u00e1rio."
  },
  {
    "id": 112,
    "title": "Biblioteca Entrada/Sa\u00edda",
    "url": "/pt/html/libs/io/index.html",
    "text": "Biblioteca para Entrada/Sa\u00edda\nBiblioteca para Entrada/Sa\u00edda\nA biblioteca para Entrada/Sa\u00edda inclui componentes que se destinam a\ncorresponderem \u00e0queles t\u00edpicos encontrados em produtos eletr\u00f4nicos para interface\ncom um usu\u00e1rio.\nBot\u00e3o\nJoystick\nTeclado\nLED\nDisplay de 7-segmentos\nDisplay hexadecimal\nMatriz de LEDs\nTTY"
  },
  {
    "id": 113,
    "title": "Bot\u00e3o",
    "url": "/pt/html/libs/io/button.html",
    "text": "Bot\u00e3o\nBot\u00e3o\nBiblioteca:\nEntrada/Sa\u00edda\nIntrodu\u00e7\u00e3o:\n2.1.3\nApar\u00eancia:\nComportamento\nAs sa\u00eddas ser\u00e3o normalmente 0, mas quando o usu\u00e1rio estiver pressionando\no bot\u00e3o usando a ferramenta Testar (Poke), a sa\u00edda ser\u00e1 1.\nPinos\nUm bot\u00e3o tem apenas um pino, uma sa\u00edda 1-bit, que \u00e9 0, exceto quando o\nusu\u00e1rio est\u00e1 pressionando o bot\u00e3o usando a ferramenta Testar (Poke), quando \u00e9 1.\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nas teclas com setas poder\u00e3o alterar o seu atributo\nDire\u00e7\u00e3o.\nDire\u00e7\u00e3o\nA posi\u00e7\u00e3o do pino de sa\u00edda em rela\u00e7\u00e3o ao componente.\nCor\nA cor com a qual o bot\u00e3o ser\u00e1 exibido.\nR\u00f3tulo\nO texto no r\u00f3tulo associado ao componente.\nPosi\u00e7\u00e3o do r\u00f3tulo\nA posi\u00e7\u00e3o do r\u00f3tulo em rela\u00e7\u00e3o ao componente.\nFonte do r\u00f3tulo\nA fonte a ser usada no r\u00f3tulo.\nCor do r\u00f3tulo\nA cor com a qual desenhar o r\u00f3tulo.\nComportamento da ferramenta Testar\nQuando o bot\u00e3o do mouse for pressionado, a sa\u00edda do componente ser\u00e1 1.\nAo soltar o bot\u00e3o do mouse, o resultado voltar\u00e1 a 0.\nComportamento da ferramenta Texto\nPermitir\u00e1 que o r\u00f3tulo associado ao componente seja editado."
  },
  {
    "id": 114,
    "title": "Joystick",
    "url": "/pt/html/libs/io/joystick.html",
    "text": "Joystick\nJoystick\nBiblioteca:\nEntrada/Sa\u00edda\nIntrodu\u00e7\u00e3o:\n2.2.0\nApar\u00eancia:\nComportamento\nO usu\u00e1rio poder\u00e1 arrastar o bot\u00e3o vermelho na \u00e1rea quadricular arredondada,\ne as sa\u00eddas ser\u00e3o atualizadas para indicar as coordenadas atuais de x - e\ny. Isso serve para emular como funcionam os conhecidos joysticks dos\njogos cl\u00e1ssicos do tipo arcade.\nPinos\nNa face oeste, pino superior (sa\u00edda, com tamanho dado pelo atributo\nLargura em Bits)\nIndicar\u00e1 a coordenada x, e dever\u00e1 ser interpretado como um inteiro\nsem sinal cujo valor nunca ser\u00e1 0. Assim, um valor igual a 1 representar\u00e1 o extremo \u00e0\nesquerda, e o valor m\u00e1ximo para a largura do bit indicar\u00e1 o extremo \u00e0 direita.\nQuando o bot\u00e3o est\u00e1 em repouso (no centro), o valor ter\u00e1 o padr\u00e3o de bits 10 ... 00.\nNa face oeste, pino inferiro (sa\u00edda, com tamanho dado pelo atributo\nLargura em Bits)\nIndicar\u00e1 a coordenada y, cujo valor ir\u00e1 variar conforme com o pino da\ncoordenada x. Quando o bot\u00e3o for levado para cima, essa sa\u00edda ter\u00e1\nvalor igual a 1, e quando o bot\u00e3o for levado para baixo, a sa\u00edda ser\u00e1 o\nvalor m\u00e1ximo para a largura de bits selecionada.\nAtributos\nLargura em Bits\nO n\u00famero de bits usado para indicar cada uma das coordenadas do bot\u00e3o.\nCor\nA cor do bot\u00e3o como ser\u00e1 desenhada na tela.\ncomportamento da ferramenta Testar\nAo pressionar o bot\u00e3o do mouse enquanto dentro da \u00e1rea joystick movimentar\u00e1\no bot\u00e3o para aquela posi\u00e7\u00e3o e atualizar\u00e1 as sa\u00eddas. Ao arrastar o mouse continuar\u00e1\na mover o bot\u00e3o e atualizar as sa\u00eddas, enquanto mantiver o bot\u00e3o dentro da \u00e1rea do\njoystick. Ao liberar o bot\u00e3o do mouse voltar\u00e1 \u00e0 sua posi\u00e7\u00e3o de repouso.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 115,
    "title": "Teclado",
    "url": "/pt/html/libs/io/keyboard.html",
    "text": "Teclado\nTeclado\nBiblioteca:\nEntrada/Sa\u00edda\nIntrodu\u00e7\u00e3o:\n2.2.0\nApar\u00eancia:\nComportamento\nEsse componente permitir\u00e1 ao circuito ler o que for digitado no teclado -\ncontanto que as teclas sejam represent\u00e1veis no c\u00f3digo ASCII de 7 bits.\nDepois de clicar no componente usando a ferramenta Testar (Poke), o usu\u00e1rio poder\u00e1\ndigitar caracteres, que ser\u00e3o armazenados em um buffer. Sempre que necess\u00e1rio,\no valor ASCII do caractere mais a esquerda no buffer ser\u00e1 enviado para a sa\u00edda\nmais \u00e0 direita. Quando a entrada de clock for disparada, o caracteres mais \u00e0\nesquerda ser\u00e1 suprimida do buffer e o caractere mais \u00e0 esquerda ser\u00e1 enviado\npara a sa\u00edda da direita.\nOs caracteres armazen\u00e1veis no buffer ser\u00e3o todos os caracteres ASCII imprim\u00edveis,\ncomo o espa\u00e7o, nova linha, backspace, e control-L. Al\u00e9m disso,\nas setas para a esquerda e a direita mover\u00e3o o cursor dentro do buffer,\ne a tecla backspace apagar\u00e1 o caractere \u00e0 direita do cursor (se houver).\nO componente \u00e9 ass\u00edncrono no sentido que quando o buffer estiver vazio e\no usu\u00e1rio digitar um caractere, esse ser\u00e1 enviado imediatamente para uma sa\u00edda,\nsem esperar por um pulso de clock.\nPinos\nNa face oeste, marcada por um tri\u00e2ngulo (entrada, com largura de 1 bit)\nClock - quando for ativado, e enquanto o pino de leitura n\u00e3o for 0,\no caractere mais \u00e0 esquerda do buffer ser\u00e1 exclu\u00eddo, e as sa\u00eddas ser\u00e3o\natualizadas para refletir novo status do buffer.\nNa face sul, o pino mais \u00e0 esquerda (entrada, com largura de 1 bit)\nAtivar Leitura - quando 1 (ou flutuante, ou erro), quando houver uma varia\u00e7\u00e3o de\nborda do sinal de clock o caractere mais \u00e0 esquerda do buffer ser\u00e1 consumido.\nA entrada de clock ser\u00e1 ignorada quando o Ativar Leitura for 0.\nNa face sul, o segundo pino mais \u00e0 esquerda (entrada, com largura de 1 bit)\nLimpar - se for 1, o buffer ser\u00e1 esvaziado e n\u00e3o aceitar\u00e1 mais caracteres.\nNa face sul, o segundo pino mais \u00e0 direita (sa\u00edda, com largura de 1 bit)\nDispon\u00edvel - ser\u00e1 1 quando o buffer contiver pelo menos um caractere\ne ser\u00e1 0 quando o buffer estiver vazio.\nNa face sul, o pino mais \u00e0 direita (sa\u00edda, com largura de 7 bits)\nDados - c\u00f3digo ASCII com 7-bits para o caractere mais \u00e0 esquerda no buffer;\nou 0, se o buffer estiver vazio.\nAtributos\nTamanho do Buffer\nO n\u00famero de caracteres que o buffer poder\u00e1 conter.\nGatillho\nSe o valor for\nBorda de Subida, ent\u00e3o, quando o valor do clock\nvariar de 0 para 1, o caractere mais \u00e0 esquerda ser\u00e1 consumido (quando ativado\npela entrada Habilitar Leitura). Se for\nBorda de Descida, isso\nacontecer\u00e1 quando o clock mudar de 1 para 0.\nComportamento da ferramenta Testar\nAo pressionar o bot\u00e3o do mouse mudar\u00e1 o foco do teclado para esse componente,\ne um cursor na forma de barra vertical ser\u00e1 exibido.\nCada caractere digitado ser\u00e1 inserido no buffer, enquanto este n\u00e3o atingir\na sua capacidade e o caractere for um daqueles aceit\u00e1veis pelo componente:\nos caracteres imprim\u00edveis em c\u00f3digo ASCII de 7 bits, como espa\u00e7o, backspace,\nnova linha, e control-L. Al\u00e9m disso, o usu\u00e1rio poder\u00e1 usar as setas para a\nesquerda e para a direita para alterar a posi\u00e7\u00e3o do cursor no buffer, e o\nusu\u00e1rio poder\u00e1 usar a tecla Delete para apagar o caractere no buffer\n(se houver) \u00e0 direita do cursor.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 116,
    "title": "LED",
    "url": "/pt/html/libs/io/led.html",
    "text": "LED\nLED\nBiblioteca:\nInput/Output\nIntrodu\u00e7\u00e3o:\n2.1.3\nApar\u00eancia:\nComportamento\nExibir\u00e1 o valor de sua entrada colorindo, ou n\u00e3o, o LED (conforme especificado\npelo seu atributo Cor), dependendo se a entrada for 1 ou 0.\n(O componente LED \u00e9 similar a um pino de sa\u00edda, exceto com uma\napar\u00eancia um pouco diferente. Alguns usu\u00e1rios, no entanto, acharam que seria\nbom incluir.)\nPinos\nUm LED tem apenas um pino, uma entrada de 1 bit que \u00e9 utilizada para determinar se\n\u00e9 para mostrar o LED colorido (quando a entrada for 1) ou apagado (quando a entrada\nfor outra coisa).\nAtributos\nQuando o componente for selecionado ou estiver sendo acrescentado,\nas teclas com setas poder\u00e3o alterar o seu atributo\nDire\u00e7\u00e3o.\nDire\u00e7\u00e3o\nPosi\u00e7\u00e3o do pino de entrada em rela\u00e7\u00e3o ao componente.\nCor\nA cor a ser exibida quando o valor da entrada for 1.\nAtivo em Alto\nSe sim, ent\u00e3o, o LED ser\u00e1 colorido quando a entrada for 1.\nSe n\u00e3o, ser\u00e1 colorido quando a entrada for 0.\nR\u00f3tulo\nO texto no r\u00f3tulo associado ao componente.\nPosi\u00e7\u00e3o do R\u00f3tulo\nA posi\u00e7\u00e3o do r\u00f3tulo em rela\u00e7\u00e3o ao componente.\nFonte do r\u00f3tulo\nA fonte a ser usada no r\u00f3tulo.\nCor do r\u00f3tulo\nA cor com a qual desenhar o r\u00f3tulo.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nPermite que o r\u00f3tulo associado ao componente possa ser editado."
  },
  {
    "id": 117,
    "title": "Display de 7-segmentos",
    "url": "/pt/html/libs/io/7seg.html",
    "text": "Display de 7-segmentos\nDisplay de 7-segmentos\nBiblioteca:\nEntrada/Sa\u00edda\nIntrodu\u00e7\u00e3o:\n2.1.3\nApar\u00eancia:\nComportamento\nExibir\u00e1 os valores de suas oito entradas de um bit.\nSegmentos\nou ser\u00e3o\ncoloridos ou cinzas, dependendo das entradas. A correspond\u00eancia \u00e9 a que se segue.\n(Os fabricantes variam a forma como eles mapeiam as entradas para os segmentos, o\ncorrespond\u00eancia usada aqui \u00e9 baseada no Texas Instruments TIL321.)\nPinos\nNa face norte, primeiro da esquerda (entrada, com largura de 1 bit)\nServe para controlar o segmento m\u00e9dio horizontal.\nNa face norte, de segunda \u00e0 esquerda (entrada, com largura de 1 bit)\nServe para controlar o segmento superior vertical no lado esquerdo.\nNa face norte, o terceiro da esquerda (entrada, com largura de 1 bit)\nServe para controlar o segmento superior horizontal.\nNa face norte, o quarto da esquerda (entrada, com largura de 1 bit)\nServe para controlar o segmento superior vertical no lado direito.\nNa face sul, primeiro da esquerda (entrada, com largura de 1 bit)\nServe para controlar o segmento menor vertical do lado esquerdo.\nNa face sul, de segunda \u00e0 esquerda (entrada, com largura de 1 bit)\nServe para controlar o segmento horizontal inferior.\nNa face sul, o terceiro da esquerda (entrada, com largura de 1 bit)\nServe para controlar o segmento menor vertical do lado direito.\nNa face sul, a quarta da esquerda (entrada, com largura de 1 bit)\nServe para controlar o ponto decimal.\nAtributos\nCor Se Ligado\nCor com a qual desenhar os segmentos do display e do ponto decimal quando\neles estiverem ligados.\nCor Se Desligado\nCor com a qual desenhar os segmentos do display e do ponto decimal quando\nelas estiverem desligados.\nCor de Fundo\nCor com a qual desenhar o fundo de tela (transparente por padr\u00e3o).\nAtivado em alto?\nSe sim, ent\u00e3o os segmentos se acender\u00e3o se a entrada correspondente for 1.\nSe n\u00e3o, eles acender\u00e3o somente quando a entrada correspondente for 0.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 118,
    "title": "Display hexadecimal",
    "url": "/pt/html/libs/io/hexdig.html",
    "text": "Display hexadecimal\nDisplay hexadecimal\nBiblioteca:\nInput/Output\nIntrodu\u00e7a\u00f5:\n2.2.0\nApar\u00eancia:\nComportamento\nAo usar um display de 7-segmentos, mostrar\u00e1 o d\u00edgito hexadecimal\ncorrespondente \u00e0 entrada de quatro bits. Se qualquer uma das entradas n\u00e3o forem 0/1\n(ou flutuante ou erro), ent\u00e3o, o display mostrar\u00e1 um tra\u00e7o ('-').\nUma entrada de um bit em separado controlar\u00e1 a exibi\u00e7\u00e3o do ponto decimal.\nPinos\nNa face sul, a primeira a partir da esquerda (entrada, com largura de 4 bits)\nEssa entrada ser\u00e1 interpretada como um n\u00famero de quatro bits sem sinal, e os\nd\u00edgitos hexadecimais correspondentes ser\u00e3o exibida. Se algum dos bits for flutuante\nou erro, ent\u00e3o, um tra\u00e7o ('-') ser\u00e1 exibido.\nNa face sul, a segunda a partir da esquerda (entrada, com largura de 1 bit)\nServe para controlar o ponto decimal. Se este n\u00e3o estiver conectado, o ponto decimal\npermanecer\u00e1 desligado.\nAtributos\nCor se Ligado\nA cor com a qual desenhar os segmentos do display e do ponto decimal quando\neles estiverem acesos.\nCor se Desligado\nA cor com a qual desenhar os segmentos do display e do ponto decimal quando\nelas estiverem apagados.\nCor de Fundo\nA cor com a qual desenhar o fundo da tela (transparente por padr\u00e3o).\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 119,
    "title": "Matriz de LEDs",
    "url": "/pt/html/libs/io/dotmat.html",
    "text": "Matriz de LED\nMatriz de LED\nBiblioteca:\nEntrada/Sa\u00edda\nIntrodu\u00e7\u00e3o:\n2.2.0\nApar\u00eancia:\nComportamento\nExibir\u00e1 uma pequena matriz de pixels, cujos valores ser\u00e3o determinados pelas entradas\natuais. A matriz poder\u00e1 ter at\u00e9 32 linhas e 32 colunas.\nPinos\nA interface para o componente ir\u00e1 variar dependendo do valor do atributo\nFormato da Entrada. Ele tem tr\u00eas valores poss\u00edveis.\nColunas\nAs entradas ser\u00e3o alinhadas ao longo da face sul do componente, com uma\nentrada multibit para cada coluna da matriz. Cada entrada tem tantos bits\nquanto existirem linhas na matriz, com o bit de mais baixa ordem correspondente ao\npixel mais ao final de cada coluna. Um valor igual a 1 indicar\u00e1 que o pixel\ncorrespondente dever\u00e1 ser ligado, enquanto um valor igual a 0 indicar\u00e1 que o pixel\ndever\u00e1 permanecer apagado. Se algum bit de uma coluna for flutuante ou erro,\nent\u00e3o todos os pixels da coluna ficar\u00e3o acesos.\nLinhas\nAs entradas ser\u00e3o alinhadas ao longo da face oeste do componente, com uma\nentrada multibit para cada linha da matriz. Cada entrada ter\u00e1 tantos bits quantos\nforem as colunas na matriz, com o bit de mais baixa ordem correspondente ao pixel\nmais \u00e0 direita na linha. Tal como acontece com o formato de colunas, um valor igual a 1\nindicar\u00e1 que o pixel correspondente dever\u00e1 ser ligado, e um valor igual a 0 indicar\u00e1\nque o pixel dever\u00e1 se manter apagado. Se algum bit de uma linha for flutuante ou erro,\nent\u00e3o, todos os pixels da linha ficar\u00e3o acesos.\nSelecionar Linhas/Colunas\nH\u00e1 duas entradas na face oeste do componente. A entrada multibit superior\nter\u00e1 tantos bits quantos forem as colunas na matriz, com o bit de mais baixa ordem\ncorrespondente \u00e0 coluna mais \u00e0 direita. A entrada multibit inferior ter\u00e1 tantos\nbits quanto as linhas da matriz, com o bit de mais baixa ordem correspondente\npara o final de cada linha. Se algum bit for flutuante ou erro, todos os pixels\nda matriz estar\u00e3o acesos. Normalmente, no entanto, um pixel em uma certa linha-coluna\nficar\u00e1 aceso, se o bit correspondente \u00e0 coluna na entrada superior for 1 e\no bit da linha correspondente na entrada inferior tamb\u00e9m for 1.\nPor exemplo, para uma matriz 5x7, se a primeira entrada for 01010 e a segunda for\n0111010, ent\u00e3o, a segunda e a quarta coluna estar\u00e3o acesas para a segunda, a terceira,\na quarta e a sexta linha, o resultado aparecer\u00e1 como um par de pontos de exclama\u00e7\u00e3o.\n(Esse formato de entrada pode parecer pouco intuitivo, mas matrizes de LED s\u00e3o\nvendidas exatamente com essa interface. A Lite-On vende componentes como esse,\npor exemplo.)\nAtributos\nFormato da Entrada (somente leitura ap\u00f3s o componente ser criado)\nServe para selecionar como os pinos corresponder\u00e3o aos pixels,\ncomo descrito acima.\nColunas da Matriz\nServe para selecionar quantas colunas estar\u00e3o na matriz, o que poder\u00e1 variar de 1 a\n32.\nLinhas da Matriz\nServe para selecionar quantas linhas estar\u00e3o na matriz, o que poder\u00e1 variar de 1 a\n32.\nCor se Ligado\nServe para selecionar a cor de um pixel quando for\naceso.\nCor se Desligado\nServe para selecionar a cor de um pixel quando estiver\napagado.\nPersist\u00eancia da Luz\nQuando for diferente de 0, um pixel\naceso\npermanecer\u00e1 aceso\npelo n\u00famero de altern\u00e2ncias do clock ap\u00f3s quantidade da entrada do componente\nindicar que o pixel dever\u00e1 ficar\napagado.\nForma dos pontos\nA op\u00e7\u00e3o quadrado significa que cada pixel ser\u00e1 desenhado como um quadrado 10x10,\npreenchendo o componente, sem lacunas entre os pixels. A op\u00e7\u00e3o c\u00edrculo significa que cada\npixel ser\u00e1 desenhado como um c\u00edrculo de di\u00e2metro-8, com intervalos entre cada c\u00edrculo.\nO c\u00edrculo \u00e9 a op\u00e7\u00e3o mais dif\u00edcil de interpretar, mas \u00e9 mais se aproxima dos\ncomponentes do tipo matriz de LEDs comerciais.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 120,
    "title": "TTY",
    "url": "/pt/html/libs/io/tty.html",
    "text": "TTY\nTTY\nBiblioteca:\nEntrada/Sa\u00edda\nIntrodu\u00e7\u00e3o:\n2.2.0\nApar\u00eancia:\nComportamento\nEsse componente implementa um terminal burro muito simples. Ele recebe uma sequ\u00eancia\nde c\u00f3digos ASCII e exibe cada caractere imprim\u00edvel. Quando a linha atual\nestiver completa, o cursor se mover\u00e1 para a linha seguinte, possivelmente movendo todas\nas linhas correntes para cima se o cursor j\u00e1 estiver na \u00faltima linha. As \u00fanicas\nsequ\u00eancias de controle oferecidas s\u00e3o: backspace (ASCII 8), que eliminar\u00e1 o \u00faltimo\ncaractere na \u00faltima linha, a menos que essa j\u00e1 esteja vazia; nova linha (ASCII 10), que\nmover\u00e1 o cursor para o in\u00edcio da linha seguinte, haver\u00e1 rolagem de linhas, se necess\u00e1rio;\ne alimenta\u00e7\u00e3o de formul\u00e1rio (ASCII 12, digitando-se control-L), que limpar\u00e1 a tela.\nPinos\nNa face oeste, pino superior (entrada, com largura de 7 bits)\nDados - esse \u00e9 o valor ASCII do pr\u00f3ximo caractere que entrar no terminal.\nNa face oeste, pino inferior marcado pelo tri\u00e2ngulo (entrada, com largura de 1 bit)\nClock - quando ativado, enquanto pino para habilitar a escrita n\u00e3o for 0, o\nvalor ASCII corrente na entrada de dados ser\u00e1 processado pelo terminal.\nNa face sul, pino mais \u00e0 esquerda (entrada, com largura de 1 bit)\nHabilitar escrita - quando em 1 (ou flutuante, ou de erro), uma varia\u00e7\u00e3o de borda\ndo sinal de clock resultar\u00e1 no processamento de um novo caractere a partir da entrada\nde dados. As entradas de clock e de dados ser\u00e3o ignoradas quando seu valor for 0.\nNa face sul, segundo pino da esquerda (entrada, com largura de 1 bit)\nLimpar - se 1, o terminal ser\u00e1 limpo de todos os dados e todas as outras entradas\nser\u00e3o ignoradas.\nAtributos\nLinhas\nO n\u00famero de linhas exibidas no terminal.\nColunas\nO n\u00famero m\u00e1ximo de caracteres exibidos em cada linha do terminal.\nGatilho\nSe o valor for\nBorda de Subida, , ent\u00e3o, quando o clock variar de\n0 para 1, a entrada de dados ser\u00e1 processado (quando ativado pelas entradas\nHabilitar Escrita e Limpar Entradas).\nSe for\nBorda de Descida, , ent\u00e3o isso acontecer\u00e1 quando o clock variar de\nde 1 para 0.\nCor\nA cor com a qual o texto aparecer\u00e1 no terminal.\nCor de Fundo\nA cor com que desenhar o fundo do terminal.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nNenhum."
  },
  {
    "id": 121,
    "title": "Biblioteca Base",
    "url": "/pt/html/libs/base/index.html",
    "text": "Biblioteca Base\nBiblioteca Base\nA biblioteca Base cont\u00e9m ferramentas de uso geral, assim como componentes\ncujo comportamento \u00e9 distinto de outros (ou seja, ser\u00e3o tratados de forma\nsingular pelo mecanismo de propaga\u00e7\u00e3o do Logisim).\nFerramenta Testar\nFerramenta Editar\nFerramenta Selecionar\nFerramenta Conectar\nFerramenta Texto\nFerramenta Menu\nDistribuidor\nPino\nPonta de Prova\nT\u00fanel\nResistor Pull\nClock\nExtensor de Bits\nR\u00f3tulo"
  },
  {
    "id": 122,
    "title": "Ferramenta Testar",
    "url": "/pt/html/libs/base/poke.html",
    "text": "Ferramenta Testar\nFerramenta Testar\nBiblioteca:\nBase\nIntrodu\u00e7\u00e3o:\n2.0 Beta 1\nComportamento\nA ferramenta Testar (Poke) serve para manipular os valores correntes associados\naos componentes. O comportamento preciso da ferramenta Testar (Poke) ir\u00e1 variar\ndependendo sobre qual componente for clicada; esse comportamento est\u00e1 documentado\nna se\u00e7\u00e3o 'Comportamento da Ferramenta Testar (Poke)' de cada componente.\nBiblioteca Base\nPino\nClock\nBiblioteca Mem\u00f3ria\nFlip-Flop D/T/J-K/S-R\nRegistrador\nContador\nRegistrador de Deslocamento\nRAM\nROM\nBiblioteca Entrada/Sa\u00edda\nBot\u00e3o\nJoystick\nTeclado\nBiblioteca Legada\nFlip-Flops D/J-K do Logisim 1.0\nRegistrador de 8-bits do Logisim 1.0\nAl\u00e9m disso, ao clicar em um segmento de fio usando a ferramenta Testar (Poke),\nisso exibir\u00e1 o valor corrente que passa por esse fio, como descrito na p\u00e1gina\nFerramenta Conectar.\nAtributos\nNenhum. Ao clicar em um componente que aceite a ferramenta Testar, ent\u00e3o,\nos atributos do componente ser\u00e3o exibidos."
  },
  {
    "id": 123,
    "title": "Ferramenta Editar",
    "url": "/pt/html/libs/base/edit.html",
    "text": "Ferramenta Editar\nFerramenta Editar\nBiblioteca:\nBase\nIntrodu\u00e7\u00e3p:\n2.3.0\nComportamento\nA ferramenta Editar permitir\u00e1 ao usu\u00e1rio rearranjar os componentes\nque existirem e acrescentar conex\u00f5es. Exatamente o que a ferramenta far\u00e1\ndepender\u00e1 de onde o usu\u00e1rio clicar com o mouse na \u00e1rea de desenho.\nQuando o mouse estiver sobre um ponto de conex\u00e3o de um componente\nque j\u00e1 exista, ou sobre um fio, a ferramenta Editar ir\u00e1 mostrar um pequeno\nc\u00edrculo verde em torno na posi\u00e7\u00e3o do mouse. Ao pressionar o bot\u00e3o ali, iniciar\u00e1\na inclus\u00e3o de uma nova conex\u00e3o. Mas se o usu\u00e1rio n\u00e3o arrastar o mouse, longe o\nbastante para iniciar a conex\u00e3o, antes de soltar o bot\u00e3o, a a\u00e7\u00e3o ser\u00e1 tratada\ncomo um clique, e um fio ser\u00e1 simplesmente adicionado \u00e0 sele\u00e7\u00e3o corrente.\nA largura em bits de uma conex\u00e3o acrescentada ser\u00e1 inferida a partir dos\ncomponentes aos quais estiver conectada. Se n\u00e3o estiver vinculada a qualquer\ncomponente, um fio ser\u00e1 tra\u00e7ado em cinza para indicar que sua largura \u00e9\ndesconhecida; houver concord\u00e2ncia na largura com a do componente naquela posi\u00e7\u00e3o,\na conex\u00e3o ser\u00e1 tra\u00e7ada em cor laranja para indicar conflito, e efetivamente n\u00e3o haver\u00e1\nqualquer transmiss\u00e3o de sinal at\u00e9 que o usu\u00e1rio o resolva.\nTodas as conex\u00f5es no Logisim ser\u00e3o ou horizontais ou verticais, nunca diagonais.\nAs conex\u00f5es n\u00e3o t\u00eam dire\u00e7\u00e3o determinada; ou seja, elas transmitem valores\nde um ponto a outro. De fato, um fio pode transportar valores em ambas dire\u00e7\u00f5es\nsimultaneamente: no exemplo abaixo, um bit ser\u00e1 transmitido da entrada superior\n\u00e0 esquerda atrav\u00e9s da conex\u00e3o central, e ent\u00e3o voltar\u00e1 por ela, e novamente\nde modo circular, at\u00e9 alcan\u00e7ar a sa\u00edda inferior \u00e0 direita.\nUm simples arrastar do mouse poder\u00e1 criar m\u00faltiplos segmentos de fios.\nO processo mais preciso \u00e9 um pouco mais dif\u00edcil de se descrever; mas\nfunciona bem intuitivamente na pr\u00e1tica: se voc\u00ea fizer uso da ferramenta\nConectar um segmento particular de fio ser\u00e1 interrompido t\u00e3o\nlogo atinja o pino de um componente que j\u00e1 exista, ou onde quer que\nalcance outro segmento de fio de uma conex\u00e3o tamb\u00e9m existente.\nAl\u00e9m disso, se uma extremidade de qualquer conex\u00e3o m\u00faltipla\nalcan\u00e7ar o meio de outra j\u00e1 existente, ent\u00e3o essa tamb\u00e9m passar\u00e1 a ter\nm\u00faltiplos segmentos.\nVoc\u00ea poder\u00e1 encurtar ou apagar uma conex\u00e3o existente ao arrastar qualquer\ndas extremidades de um segmento e seguir o caminho inverso na dire\u00e7\u00e3o da outra\nextremidade. Durante o movimento, a mudan\u00e7a de tamanho ser\u00e1 indicada por uma\nlinha branca sobre a parte do fio que estiver sendo removida.\nPara alguns componentes que tiverem marcas para indicar onde h\u00e1 pontos\nde conex\u00e3o dispon\u00edveis (tais como uma porta OR\nou um buffer controlado), o Logisim,\nde forma sutil, corrigir\u00e1 tentativas em criar fios que ultrapassem\nligeiramente os pontos de conex\u00e3o.\nContudo, se o usu\u00e1rio pressionar a tecla Alt em um ponto no meio de um\nfio, ent\u00e3o o c\u00edrculo verde desaparecer\u00e1. Um clique do mouse selecionar\u00e1 a conex\u00e3o\ne o mouse ir\u00e1 arrast\u00e1-la.\nAo pressionar o bot\u00e3o do mouse enquanto ele estiver sobre um componente\nselecionado ele ir\u00e1 arrastar todos os componentes na mesma sele\u00e7\u00e3o.\nPor padr\u00e3o, Logisim ir\u00e1 calcular uma forma de acrescentar novos fios\nde modo que nenhuma conex\u00e3o existente seja perdida durante o movimento.\n(\u00c0s vezes, ele ir\u00e1 eliminar ou encurtar fios existentes.)\nSe voc\u00ea estiver realizando um movimento em que voc\u00ea queira que essas altera\u00e7\u00f5es\nsejam feitas, voc\u00ea poder\u00e1 pressionar a tecla shift durante a movimenta\u00e7\u00e3o.\nSe voc\u00ea quiser desabilitar esse comportamento por completo,\nbasta ir a Projeto > Op\u00e7\u00f5es, selecionar a guia \u00c1rea de Desenho,\ne desmarcar a caixa\nManter Conex\u00f5es ao Mover ;\nnesse caso, as conex\u00f5es ser\u00e3o calculadas somente quando a tecla shift for\npressionada.\nAo arrastar uma sele\u00e7\u00e3o isso poder\u00e1 levar a um comportamento inesperado dos fios:\nse ao fazer isso, alguns fios passarem sobre outros, eles ser\u00e3o conectados,\ne todos ser\u00e3o colocados na mesma sele\u00e7\u00e3o. Como resultado, se voc\u00ea arrastar a sele\u00e7\u00e3o\npela segunda vez, os fios que existirem previamente no local n\u00e3o ser\u00e3o deixados para\ntr\u00e1s. Esse comportamento \u00e9 necess\u00e1rio para manter coer\u00eancia com o comportamento esperado\npara as conex\u00f5es de fios no Logisim. E n\u00e3o constituir\u00e1, normalmente, um grande problema:\no Logisim ir\u00e1 tra\u00e7ar a sele\u00e7\u00e3o inteira no instante em que desejar efetiv\u00e1-la,\ne voc\u00ea n\u00e3o dever\u00e1 faz\u00ea-lo, at\u00e9 que voc\u00ea tenha certeza que esteja no local correto.\nAo clicar com o mouse sobre um componente n\u00e3o selecionado (mas n\u00e3o sobre um\nde seus pontos de conex\u00e3o) todos os componentes da sele\u00e7\u00e3o atual ser\u00e3o fixados\ne a sele\u00e7\u00e3o passar\u00e1 ao(s) componente(s) que contiver(em) a posi\u00e7\u00e3o clicada.\nShift+click do mouse sobre um componente alternar\u00e1 sua presen\u00e7a na sele\u00e7\u00e3o.\nSe v\u00e1rios componentes compartilharem a mesma posi\u00e7\u00e3o, a presen\u00e7a de todos ser\u00e1\nalternada.\nAo come\u00e7ar a arrastar o mouse em uma posi\u00e7\u00e3o que n\u00e3o contenha qualquer\ncomponente, fixar\u00e1 todos aqueles na sele\u00e7\u00e3o atual e iniciar o tra\u00e7ado de uma\n\u00e1rea retangular para sele\u00e7\u00e3o.\nTodos os componentes contidos dentro dessa \u00e1rea ser\u00e3o colocados na sele\u00e7\u00e3o.\nAo clicar shift e arrastar o mouse a partir de uma posi\u00e7\u00e3o que\nn\u00e3o contiver qualquer componente iniciar\u00e1 uma sele\u00e7\u00e3o retangular. A presen\u00e7a\nde todos os componentes contidos nessa \u00e1rea ser\u00e1 alternada.\nContudo, se a tecla alt for pressionada em uma posi\u00e7\u00e3o que n\u00e3o contiver\nqualquer componente, iniciar\u00e1 o acr\u00e9scimo de uma nova conex\u00e3o. Um pequeno c\u00edrculo\nverde ser\u00e1 tra\u00e7ado em tal circunst\u00e2ncia para indicar isso.\nAp\u00f3s selecionar os itens desejados, voc\u00ea poder\u00e1, naturalmente,\nrecortar/copiar/colar/apagar todos os itens via\nmenu Editar .\nAlgumas teclas podem ter efeito sobre a ferramenta Editar.\nAs teclas com setas poder\u00e3o alterar o atributo Dire\u00e7\u00e3o para todos os\ncomponentes na sele\u00e7\u00e3o que tiverem tal atributo.\nAs teclas Delete e Backspace ir\u00e3o apagar tudo\no que estiver selecionado no circuito.\nAs teclas Insert e MenuKey-D criar\u00e3o uma c\u00f3pia\ndos componentes na sele\u00e7\u00e3o corrente.\nO comportamento do Logisim ao duplicar uma sele\u00e7\u00e3o ou ao colar a\n\u00e1rea de transfer\u00eancia em um circuito ser\u00e1 um tanto peculiar: ele n\u00e3o ir\u00e1 colocar\nimediatamente os componentes no circuito, em vez disso, a sele\u00e7\u00e3o ser\u00e1 uma\ncole\u00e7\u00e3o de \"esbo\u00e7os transparentes\", que ser\u00e1 deixada no circuito assim que forem\nlevados para outra posi\u00e7\u00e3o ou removidos da sele\u00e7\u00e3o. (Esse comportamento peculiar\n\u00e9 necess\u00e1rio porque, caso contr\u00e1rio, as conex\u00f5es na\nsele\u00e7\u00e3o seriam fundidas \u00e0quelas no circuito atual de uma s\u00f3 vez, e n\u00e3o permitir,\nassim, que pudessem ser arrastadas de sua posi\u00e7\u00e3o anterior junto\ncom o conte\u00fado da \u00e1rea de transfer\u00eancia at\u00e9 que fossem coladas onde o usu\u00e1rio desejasse.)\nAtributos\nNenhum. Ao selecionar um componente, ela ir\u00e1 mostrar seus atributos.\nSe forem selecionados v\u00e1rios componentes, ela ir\u00e1 mostrar os atributos\ncompartilhados por todos, em branco ficar\u00e3o os valores diferentes e\nde outro modo, todos aqueles que tiverem em comum. (As conex\u00f5es ser\u00e3o ignoradas\nse n\u00e3o houver qualquer outro componente na sele\u00e7\u00e3o.) Mudan\u00e7as no valor do atributo\nafetar\u00e3o todos os componentes selecionados."
  },
  {
    "id": 124,
    "title": "Ferramenta Selecionar",
    "url": "/pt/html/libs/base/select.html",
    "text": "Ferramenta Selecionar\nFerramenta Selecionar\nBiblioteca:\nBase\nIntrodu\u00e7\u00e3o:\n2.0 Beta 1\nComportamento\nPermite que componentes individuais possam ser colocados em uma mesma sele\u00e7\u00e3o.\nH\u00e1 certo n\u00famero de a\u00e7\u00f5es poss\u00edveis com essa ferramenta.\nAo pressionar o bot\u00e3o do mouse enquanto ele estiver sobre um componente\nselecionado, ele ir\u00e1 arrastar todos os componentes na mesma sele\u00e7\u00e3o.\nPor padr\u00e3o, Logisim ir\u00e1 calcular uma forma de acrescentar novos fios\nde modo que nenhuma conex\u00e3o existente seja perdida durante o movimento.\n(\u00c0s vezes, ele ir\u00e1 eliminar ou encurtar fios existentes.)\nSe voc\u00ea estiver realizando um movimento em que voc\u00ea queira que essas altera\u00e7\u00f5es\nsejam feitas, voc\u00ea poder\u00e1 pressionar a tecla Shift durante a movimenta\u00e7\u00e3o.\nSe voc\u00ea quiser desabilitar esse comportamento por completo,\nbasta ir a Projeto > Op\u00e7\u00f5es, selecionar a guia \u00c1rea de Desenho,\ne desmarcar a caixa\nManter Conex\u00f5es ao Mover ;\nnesse caso, as conex\u00f5es ser\u00e3o calculadas somente quando a tecla shift for\npressionada.\nAo arrastar uma sele\u00e7\u00e3o isso poder\u00e1 levar a um comportamento inesperado dos fios:\nse ao fazer isso, alguns fios passarem sobre outros, eles ser\u00e3o conectados,\ne todos ser\u00e3o colocados na mesma sele\u00e7\u00e3o. Como resultado, se voc\u00ea arrastar a sele\u00e7\u00e3o\npela segunda vez, os fios que existirem previamente no local n\u00e3o ser\u00e3o deixados para\ntr\u00e1s. Esse comportamento \u00e9 necess\u00e1rio manter coer\u00eancia com o comportamento esperado\npara as conex\u00f5es de fios no Logisim. E n\u00e3o constituir\u00e1, normalmente, um grande problema:\no Logisim ir\u00e1 tra\u00e7ar a sele\u00e7\u00e3o inteira no instante em que desejar efetiv\u00e1-la,\ne voc\u00ea n\u00e3o dever\u00e1 faz\u00ea-lo, at\u00e9 que voc\u00ea tenha certeza que esteja no local correto.\nCaso contr\u00e1rio, ao clicar com o mouse em um componente apagar\u00e1 todos os\ncomponentes na sele\u00e7\u00e3o, ao inv\u00e9s daquele(s) sobre onde houve a marca\u00e7\u00e3o.\nShift+click do mouse sobre um componente alternar\u00e1 sua presen\u00e7a\nna sele\u00e7\u00e3o. Se v\u00e1rios componentes compartilharem a mesma posi\u00e7\u00e3o, a presen\u00e7a\nde todos ser\u00e1 alternada. Nada disso ocorrer\u00e1, por\u00e9m, se for feito por outra ferramenta\n(via a janela de op\u00e7\u00f5es de projeto\nGuia do Mouse).\nAo come\u00e7ar a arrastar o mouse em uma posi\u00e7\u00e3o que n\u00e3o contenha qualquer\ncomponente, ir\u00e1 iniciar-se o tra\u00e7ado de uma \u00e1rea retangular para sele\u00e7\u00e3o.\nTodos os componentes contidos dentro dessa \u00e1rea ser\u00e3o colocados na sele\u00e7\u00e3o.\nAo clicar Shift e arrastar o mouse a partir de uma posi\u00e7\u00e3o que n\u00e3o contiver\nqualquer componente iniciar\u00e1 uma sele\u00e7\u00e3o retangular. A presen\u00e7a de todos os\ncomponentes contidos nessa \u00e1rea ser\u00e1 alternada. Isso n\u00e3o ir\u00e1 ocorrer,\npor\u00e9m, se a a\u00e7\u00e3o do mouse for mapeado para outra ferramenta em seu lugar.\nAp\u00f3s selecionar os itens desejados, voc\u00ea poder\u00e1, naturalmente,\nrecortar/copiar/colar/apagar todos os itens via\nmenu Editar .\nO comportamento do Logisim quando colar a \u00e1rea de transfer\u00eancia em um circuito\nser\u00e1 um tanto peculiar: ele n\u00e3o ir\u00e1 colocar imediatamente os componentes no circuito,\nem vez disso, a sele\u00e7\u00e3o ser\u00e1 uma cole\u00e7\u00e3o de \"esbo\u00e7os transparentes\", que ser\u00e1 deixada\nno circuito assim que forem levados para outra posi\u00e7\u00e3o ou removidos da sele\u00e7\u00e3o.\n(Esse comportamento peculiar \u00e9 necess\u00e1rio porque, caso contr\u00e1rio, as conex\u00f5es na\nsele\u00e7\u00e3o seriam fundidas \u00e0quelas no circuito atual de uma s\u00f3 vez, e n\u00e3o permitir que\npudessem ser arrastadas de sua posi\u00e7\u00e3o anterior junto com o conte\u00fado da \u00e1rea de\ntransfer\u00eancia, at\u00e9 que fossem coladas onde o usu\u00e1rio desejasse.)\nAtributos\nNenhum. Ao selecionar um componente, seus atributos ser\u00e3o apresentados.\nSe v\u00e1rios componentes forem selecionados, os atributos compartilhados por todos\nser\u00e3o mostrados, em branco ficar\u00e3o aqueles com valores diferentes e\nde outro modo os que tiverem em comum. (As conex\u00f5es ser\u00e3o ignoradas,\nse n\u00e3o houver qualquer outro componente na sele\u00e7\u00e3o.) Mudan\u00e7as no valor do atributo\nafetar\u00e3o todos os componentes selecionados."
  },
  {
    "id": 125,
    "title": "Ferramenta Conectar",
    "url": "/pt/html/libs/base/wiring.html",
    "text": "Ferramenta Conectar\nFerramenta Conectar\nBiblioteca:\nBase\nIntrodu\u00e7\u00e3o:\n2.0 Beta 1\nComportamento\nA ferramenta Conectar ser\u00e1 usada pra criar segmentos de fios que\ncarregar\u00e3o sinais de uma extremidade at\u00e9 outra. A largura em bits\ndesses valores poder\u00e1 ser qualquer; a largura exata ser\u00e1 inferida\nautomaticamente a partir dos componentes que estiver conectando.\nSe n\u00e3o estiver associada a qualquer componente, a conex\u00e3o ser\u00e1 tra\u00e7ada\nem cinza para indicar que a largura em bits \u00e9 desconhecida; se n\u00e3o\nhouver concord\u00e2ncia na largura com a do componente, a conex\u00e3o ser\u00e1\ntra\u00e7ada em cor laranja para indicar conflito, e efetivamente n\u00e3o haver\u00e1\nqualquer transmiss\u00e3o de sinal at\u00e9 que o usu\u00e1rio o resolva.\nUm simples arrastar do mouse poder\u00e1 criar m\u00faltiplos segmentos de fios.\nO processo mais preciso \u00e9 um pouco mais dif\u00edcil de se descrever; mas\nfunciona bem intuitivamente na pr\u00e1tica: se voc\u00ea fizer uso da ferramenta\nConectar um segmento particular de fio ser\u00e1 interrompido t\u00e3o\nlogo atinja o pino de um componente que j\u00e1 exista, ou onde quer que\nalcance outro segmento de fio de uma conex\u00e3o tamb\u00e9m existente.\nAl\u00e9m disso, se uma extremidade de qualquer conex\u00e3o m\u00faltipla\nalcan\u00e7ar o meio de outra j\u00e1 existente, ent\u00e3o essa tamb\u00e9m passar\u00e1 a ter\nm\u00faltiplos segmentos.\nPara alguns componentes que tiverem marcas para indicar onde h\u00e1 pontos\nde conex\u00e3o dispon\u00edveis (tais como uma porta OR\nou um buffer controlado), o Logisim\nir\u00e1 de forma sutil corrigir tentativas em criar fios que ultrapassem\nligeiramente os pontos de conex\u00e3o.\nVoc\u00ea poder\u00e1 encurtar um segmento de fio usando a ferramenta Conectar,\nao arrastar qualquer das extremidades de um segmento, e isso ir\u00e1 superpor-se\nao existente.\nTodas as conex\u00f5es no Logisim ser\u00e3o ou horizontais ou verticais.\nAs conex\u00f5es n\u00e3o t\u00eam dire\u00e7\u00e3o determinada; ou seja, elas transmitem valores\nde um ponto a outro. De fato, um fio pode transportar valores em ambas dire\u00e7\u00f5es\nsimultaneamente; a conex\u00e3o central no exemplo abaixo far\u00e1 isso.\nAtributos\nA ferramenta Conectar n\u00e3o possui atributos, mas as conex\u00f5es que criar, sim.\nDire\u00e7\u00e3o\nServe para indicar se uma conex\u00e3o ser\u00e1 horizontal ou vertical.\nO valor de seu atributo n\u00e3o poder\u00e1 ser alterado.\nComprimento\nServe para indicar com quantos pixels ser\u00e1 a conex\u00e3o.\nO valor de seu atributo n\u00e3o poder\u00e1 ser alterado.\nComportamento da ferramenta Testar\nQuando voc\u00ea clicar sobre um segmento de uma conex\u00e3o existente\nusando a ferramenta Testar, o Logisim ir\u00e1 mostrar o valor corrente\nque passa por ela.\nEsse comportamento \u00e9 particularmente \u00fatil para as conex\u00f5es multibit,\ncuja cor (preta) n\u00e3o oferece uma informa\u00e7\u00e3o visual sobre o que passa\npelos fios de uma conex\u00e3o.\nPara valores multibit, voc\u00ea poder\u00e1 configurar exatamente como\nesses valores ser\u00e3o apresentados (em bin\u00e1rio, decimal, ou hexadecimal,\npor exemplo) usando o painel\n\u00c1rea de Desenho da caixa de di\u00e1logo Op\u00e7\u00f5es de Projeto."
  },
  {
    "id": 126,
    "title": "Ferramenta Texto",
    "url": "/pt/html/libs/base/text.html",
    "text": "Ferramenta Texto\nFerramenta Texto\nBiblioteca:\nBase\nIntrodu\u00e7\u00e3o:\n2.0 Beta 1\nComportamento\nA ferramenta Texto lhe permitir\u00e1 criar e editar r\u00f3tulos associados aos componentes.\nOs componentes que disp\u00f5em de r\u00f3tulos ter\u00e3o essa caracter\u00edstica indicada na se\u00e7\u00e3o\n'Comportamento da Ferramaneta Texto' de sua documenta\u00e7\u00e3o. At\u00e9 a presente vers\u00e3o,\nos seguintes componentes das bibliotecas predefinidas oferecem r\u00f3tulos:\nBiblioteca Base\nPino\nClock\nR\u00f3tulo\nPonta de Prova\nBiblioteca Mem\u00f3ria\nFlip-Flops D/T/JK/SR\nRegistrador\nContador\nRegistrador de Deslocament\nGerador Aleat\u00f3rio\nBiblioteca para Entrada/Sa\u00edda\nBot\u00e3o\nLED\nPara os componentes que poder\u00e3o ter um r\u00f3tulo, mas que n\u00e3o o tiverem ainda,\nvoc\u00ea poder\u00e1 clicar sobre ele e acrescent\u00e1-lo. Se j\u00e1 houver um r\u00f3tulo, voc\u00ea\ndever\u00e1 clicar sobre o mesmo. Se voc\u00ea clicar em um ponto onde n\u00e3o houver r\u00f3tulo\npara ser editado, o Logisim ir\u00e1 acrescentar um componente novo do tipo R\u00f3tulo.\nNa atual vers\u00e3o do Logisim, as funcionalidades para a edi\u00e7\u00e3o de texto\nainda s\u00e3o bastante primitivas.\nSelecionar uma regi\u00e3o do texto dentro do r\u00f3tulo \u00e9 imposs\u00edvel.\nN\u00e3o h\u00e1 como inserir uma quebra de linha dentro de um r\u00f3tulo.\nAtributos\nOs atributos dessa ferramenta s\u00e3o os mesmos do\ncomponente R\u00f3tulo. Esses atributos n\u00e3o ter\u00e3o efeito\nalgum quando se editar o r\u00f3tulo de um componente que j\u00e1 exista, mas eles ser\u00e3o\ntransmitidos para quaisquer r\u00f3tulos criados usando essa ferramenta.\nAo clicar em um componente que ofere\u00e7a suporte \u00e0 ferramenta Texto,\nisso far\u00e1 com que os atributos do componente sejam apresentados."
  },
  {
    "id": 127,
    "title": "Ferramenta Menu",
    "url": "/pt/html/libs/base/menu.html",
    "text": "Ferramenta Menu\nFerramenta Menu\nBiblioteca:\nBase\nIntrodu\u00e7\u00e3o:\n2.0 Beta 1\nComportamento\nA ferramenta Menu permitir\u00e1 ao usu\u00e1rio acionar um menu pop-up para\nos componentes que j\u00e1 existirem. Por padr\u00e3o, ao clicar o bot\u00e3o da direita\nou de controle um componente abrir\u00e1 seu menu pop-up; contudo\na guia do mouse das\nop\u00e7\u00f5es de projeto\npermitir\u00e1 ao usu\u00e1rio configurar os bot\u00f5es do mouse para funcionar de forma\ndiferente.\nO menu pop-up para a maioria dos componentes ter\u00e1 dois itens.\nApagar: Remover\u00e1 o componente do circuito.\nMostrar atributos: colocar\u00e1 os atributos do componente na janela com a\ntabela de atributos, de modo que seus valores possam ser vistos e alterados.\nPara alguns componentes, no entanto, o menu poder\u00e1 ter itens adicionais.\nSubcircuitos (ou seja, inst\u00e2ncias de um circuito usado como uma \"caixa-preta\"\ndentro de outro) s\u00e3o exemplos disso: al\u00e9m dos itens acima, o menu pop-up\nincluir\u00e1 mais um item.\nVer XXX: serve para trocar o layout do circuito que estiver\nsendo visto e editado para o de um subcircuito. Os valores vistos no layout\nser\u00e3o parte da mesma hierarquia do supercircuito.\n(Ver a se\u00e7\u00e3o 'Depurar subcircuitos'\ndo Guia do Usu\u00e1rio.)\nOutros componentes tamb\u00e9m poder\u00e3o estender o menu pop-up.\nNas vers\u00f5es correntes das bibliotecas predefinidas do Logisim, os \u00fanicos\ncomponentes que poder\u00e3o faz\u00ea-lo ser\u00e3o a RAM e\nROM.\nAtributos\nNenhum."
  },
  {
    "id": 128,
    "title": "Texto",
    "url": "/pt/html/libs/base/label.html",
    "text": "R\u00f3tulo\nR\u00f3tulo\nBiblioteca:\nBase\nIntrodu\u00e7\u00e3o:\n2.0 Beta 1\nApar\u00eancia:\nComportamento\nUm r\u00f3tulo simples com texto poder\u00e1 ser colocado em qualquer lugar de um circuito.\nEle n\u00e3o ir\u00e1 interagir de forma alguma com os valores que atravessar\u00e3o o circuito,\nexceto se impedir a sua visibilidade quando o circuito for desenhado.\nDiferente de todos os outros componentes nas bibliotecas predefinidas,\nos r\u00f3tulos poder\u00e3o ser colocados em qualquer lugar da \u00e1rea de desenho;\neles n\u00e3o ir\u00e3o ajustar-se \u00e0 grade.\nPinos\nNenhum.\nAtributos\nTexto\nO texto que aparecer\u00e1 no r\u00f3tulo. Esse valor poder\u00e1 ser editado\nna tabela de atributos ou, usando a ferramenta Texto, diretamente sobre\na \u00e1rea de desenho.\nFonte\nA fonte a ser usada para tra\u00e7ar o r\u00f3tulo.\nAlinhamento Horizontal\nA t\u00e9cnica para posicionamento horizontal do texto relativo \u00e0 posi\u00e7\u00e3o oficial\ndo r\u00f3tulo (quando o mouse for clicado para cri\u00e1-lo). \"Esquerda\" significa que o\ntexto dever\u00e1 ser escrito de modo que a face esquerda esteja naquela posi\u00e7\u00e3o;\n\"Direita\" significa que o texto dever\u00e1 ser escrito de modo que a face direita\nesteja naquela posi\u00e7\u00e3o; e \"Central\" significa que o texto dever\u00e1 ser escrito\ncentralizado (horizontalmente) naquela posi\u00e7\u00e3o.\nAlinhamento Vertical\nA t\u00e9cnica para posicionamento vertical do texto relativo \u00e0 posi\u00e7\u00e3o oficial\ndo r\u00f3tulo (quando o mouse for clicado para cri\u00e1-lo). \"Base\" significa que a linha\nde base dever\u00e1 interceptar a posi\u00e7\u00e3o; \"Topo\" significa que a parte de cima do texto\ndever\u00e1 interceptar a posi\u00e7\u00e3o; \"Fundo\" significa que a parte de baixo do texto\ndever\u00e1 interceptar a posi\u00e7\u00e3o; e \"Centro\" significa que o texto dever\u00e1 ser\ncentralizado (verticalmente) na posi\u00e7\u00e3o.\nA parte de cima e a de baixo do texto ser\u00e3o calculadas tomando por base\nos valores ascendentes e descendentes do padr\u00e3o da fonte; assim, mesmo se o\ntexto atual n\u00e3o contiver letras ascendentes (tal como em b) ou letras\ndescendentes (como em g), ainda assim os limites supostos para tais\nletras ser\u00e3o considerados para fins de posicionamento vertical.\nComportamento da ferramenta Testar\nNenhum.\nComportamento da ferramenta Texto\nPermite que o texto do r\u00f3tulo seja editado."
  }
]
